{"ast":null,"code":"function _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n\nimport { useRef, useCallback } from 'react';\nimport { useUpdateEffect } from '../../../services';\nexport var useRowManager = function useRowManager(_ref) {\n  var innerGridRef = _ref.innerGridRef,\n    rowClasses = _ref.rowClasses;\n  var rowIdToElements = useRef(new Map());\n  var getRow = useCallback(function (_ref2) {\n    var rowIndex = _ref2.rowIndex,\n      visibleRowIndex = _ref2.visibleRowIndex,\n      top = _ref2.top,\n      height = _ref2.height;\n    var rowElement = rowIdToElements.current.get(rowIndex);\n    if (rowElement == null) {\n      rowElement = document.createElement('div');\n      rowElement.setAttribute('role', 'row');\n      rowElement.dataset.gridRowIndex = String(rowIndex); // Row index from data, not affected by sorting/pagination\n      rowElement.classList.add('euiDataGridRow');\n      if (rowClasses !== null && rowClasses !== void 0 && rowClasses[rowIndex]) {\n        var _rowElement$classList;\n        (_rowElement$classList = rowElement.classList).add.apply(_rowElement$classList, _toConsumableArray(rowClasses[rowIndex].split(' ')));\n      }\n      rowElement.style.position = 'absolute';\n      rowElement.style.left = '0';\n      rowElement.style.right = '0';\n\n      // In order for the rowElement's left and right position to correctly inherit\n      // from the innerGrid width, we need to make its position relative\n      innerGridRef.current.style.position = 'relative';\n\n      // add the element to the grid\n      innerGridRef.current.appendChild(rowElement);\n\n      // add the element to the row map\n      rowIdToElements.current.set(rowIndex, rowElement);\n\n      // watch the row's children, if they all disappear then remove this row\n      var observer = new MutationObserver(function (records) {\n        if (records[0].target.childElementCount === 0) {\n          var _rowElement;\n          observer.disconnect();\n          (_rowElement = rowElement) === null || _rowElement === void 0 ? void 0 : _rowElement.remove();\n          rowIdToElements.current.delete(rowIndex);\n        }\n      });\n      observer.observe(rowElement, {\n        childList: true\n      });\n    }\n\n    // Ensure the row's visible row index & striping update correctly on sort & pagination\n    if (rowElement.dataset.gridVisibleRowIndex !== String(visibleRowIndex)) {\n      rowElement.dataset.gridVisibleRowIndex = String(visibleRowIndex);\n      var isOddRow = visibleRowIndex % 2 !== 0;\n      if (isOddRow) {\n        rowElement.classList.add('euiDataGridRow--striped');\n      } else {\n        rowElement.classList.remove('euiDataGridRow--striped');\n      }\n    }\n\n    // Ensure that the row's dimensions are always correct by having each cell update position styles\n    rowElement.style.top = top;\n    rowElement.style.height = \"\".concat(height, \"px\");\n    return rowElement;\n  }, [rowClasses, innerGridRef]);\n\n  // Update row classes dynamically whenever a new prop is passed in\n  useUpdateEffect(function () {\n    if (rowClasses) {\n      rowIdToElements.current.forEach(function (rowElement, rowIndex) {\n        var euiClasses = Array.from(rowElement.classList).filter(function (className) {\n          return className.startsWith('euiDataGridRow');\n        }).join(' ');\n        if (rowClasses[rowIndex]) {\n          rowElement.classList.value = \"\".concat(euiClasses, \" \").concat(rowClasses[rowIndex]);\n        } else {\n          rowElement.classList.value = euiClasses; // Clear any added classes\n        }\n      });\n    }\n  }, [rowClasses]);\n  return {\n    getRow: getRow\n  };\n};","map":{"version":3,"names":["_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","TypeError","o","minLen","_arrayLikeToArray","n","Object","prototype","toString","call","slice","constructor","name","Array","from","test","iter","Symbol","iterator","isArray","len","length","i","arr2","useRef","useCallback","useUpdateEffect","useRowManager","_ref","innerGridRef","rowClasses","rowIdToElements","Map","getRow","_ref2","rowIndex","visibleRowIndex","top","height","rowElement","current","get","document","createElement","setAttribute","dataset","gridRowIndex","String","classList","add","_rowElement$classList","apply","split","style","position","left","right","appendChild","set","observer","MutationObserver","records","target","childElementCount","_rowElement","disconnect","remove","delete","observe","childList","gridVisibleRowIndex","isOddRow","concat","forEach","euiClasses","filter","className","startsWith","join","value"],"sources":["/home/runner/work/broadway-lite/broadway-lite/node_modules/@elastic/eui/es/components/datagrid/body/data_grid_row_manager.js"],"sourcesContent":["function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n\nimport { useRef, useCallback } from 'react';\nimport { useUpdateEffect } from '../../../services';\nexport var useRowManager = function useRowManager(_ref) {\n  var innerGridRef = _ref.innerGridRef,\n    rowClasses = _ref.rowClasses;\n  var rowIdToElements = useRef(new Map());\n  var getRow = useCallback(function (_ref2) {\n    var rowIndex = _ref2.rowIndex,\n      visibleRowIndex = _ref2.visibleRowIndex,\n      top = _ref2.top,\n      height = _ref2.height;\n    var rowElement = rowIdToElements.current.get(rowIndex);\n    if (rowElement == null) {\n      rowElement = document.createElement('div');\n      rowElement.setAttribute('role', 'row');\n      rowElement.dataset.gridRowIndex = String(rowIndex); // Row index from data, not affected by sorting/pagination\n      rowElement.classList.add('euiDataGridRow');\n      if (rowClasses !== null && rowClasses !== void 0 && rowClasses[rowIndex]) {\n        var _rowElement$classList;\n        (_rowElement$classList = rowElement.classList).add.apply(_rowElement$classList, _toConsumableArray(rowClasses[rowIndex].split(' ')));\n      }\n      rowElement.style.position = 'absolute';\n      rowElement.style.left = '0';\n      rowElement.style.right = '0';\n\n      // In order for the rowElement's left and right position to correctly inherit\n      // from the innerGrid width, we need to make its position relative\n      innerGridRef.current.style.position = 'relative';\n\n      // add the element to the grid\n      innerGridRef.current.appendChild(rowElement);\n\n      // add the element to the row map\n      rowIdToElements.current.set(rowIndex, rowElement);\n\n      // watch the row's children, if they all disappear then remove this row\n      var observer = new MutationObserver(function (records) {\n        if (records[0].target.childElementCount === 0) {\n          var _rowElement;\n          observer.disconnect();\n          (_rowElement = rowElement) === null || _rowElement === void 0 ? void 0 : _rowElement.remove();\n          rowIdToElements.current.delete(rowIndex);\n        }\n      });\n      observer.observe(rowElement, {\n        childList: true\n      });\n    }\n\n    // Ensure the row's visible row index & striping update correctly on sort & pagination\n    if (rowElement.dataset.gridVisibleRowIndex !== String(visibleRowIndex)) {\n      rowElement.dataset.gridVisibleRowIndex = String(visibleRowIndex);\n      var isOddRow = visibleRowIndex % 2 !== 0;\n      if (isOddRow) {\n        rowElement.classList.add('euiDataGridRow--striped');\n      } else {\n        rowElement.classList.remove('euiDataGridRow--striped');\n      }\n    }\n\n    // Ensure that the row's dimensions are always correct by having each cell update position styles\n    rowElement.style.top = top;\n    rowElement.style.height = \"\".concat(height, \"px\");\n    return rowElement;\n  }, [rowClasses, innerGridRef]);\n\n  // Update row classes dynamically whenever a new prop is passed in\n  useUpdateEffect(function () {\n    if (rowClasses) {\n      rowIdToElements.current.forEach(function (rowElement, rowIndex) {\n        var euiClasses = Array.from(rowElement.classList).filter(function (className) {\n          return className.startsWith('euiDataGridRow');\n        }).join(' ');\n        if (rowClasses[rowIndex]) {\n          rowElement.classList.value = \"\".concat(euiClasses, \" \").concat(rowClasses[rowIndex]);\n        } else {\n          rowElement.classList.value = euiClasses; // Clear any added classes\n        }\n      });\n    }\n  }, [rowClasses]);\n  return {\n    getRow: getRow\n  };\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}