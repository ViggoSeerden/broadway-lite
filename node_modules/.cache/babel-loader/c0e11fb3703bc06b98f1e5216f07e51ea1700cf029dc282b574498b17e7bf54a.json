{"ast":null,"code":"/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n\nimport { SortDirection } from './sort_direction';\nimport { get } from '../objects';\nexport var Comparators = Object.freeze({\n  default: function _default() {\n    var direction = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : SortDirection.ASC;\n    return function (v1, v2) {\n      // JavaScript's comparison of null/undefined (and some others not handled here) values always returns `false`\n      // (https://www.ecma-international.org/ecma-262/#sec-abstract-relational-comparison)\n      // resulting in cases where v1 < v2 and v1 > v2 are both false.\n      // This leads to unpredictable sorting results in multiple JS engine sorting algorithms\n      // which causes unpredictable user experiences.\n      // Instead:\n      // * 1. push undefined/null values to the end of the sorted list, _regardless of sort direction_\n      //    (non-sortable values always appear at the end, and sortable values are sorted at the top)\n      // * 2. report undefined/null values as equal\n      // * 3. when both values are comparable they are sorted normally\n\n      var v1IsComparable = v1 != null;\n      var v2IsComparable = v2 != null;\n\n      // * 1.\n      if (v1IsComparable && !v2IsComparable) {\n        return -1;\n      }\n      if (!v1IsComparable && v2IsComparable) {\n        return 1;\n      }\n\n      // * 2.\n      if (!v1IsComparable && !v2IsComparable) {\n        return 0;\n      }\n\n      // * 3.\n      if (v1 === v2) {\n        return 0;\n      }\n      var result = v1 > v2 ? 1 : -1;\n      return SortDirection.isAsc(direction) ? result : -1 * result;\n    };\n  },\n  reverse: function reverse(comparator) {\n    return function (v1, v2) {\n      return comparator(v2, v1);\n    };\n  },\n  value: function (_value) {\n    function value(_x, _x2) {\n      return _value.apply(this, arguments);\n    }\n    value.toString = function () {\n      return _value.toString();\n    };\n    return value;\n  }(function (valueCallback, comparator) {\n    if (!comparator) {\n      comparator = this.default(SortDirection.ASC);\n    }\n    return function (o1, o2) {\n      return comparator(valueCallback(o1), valueCallback(o2));\n    };\n  }),\n  property: function property(prop, comparator) {\n    return this.value(function (value) {\n      return get(value, prop);\n    }, comparator);\n  }\n});","map":{"version":3,"names":["SortDirection","get","Comparators","Object","freeze","default","_default","direction","arguments","length","undefined","ASC","v1","v2","v1IsComparable","v2IsComparable","result","isAsc","reverse","comparator","value","_value","_x","_x2","apply","toString","valueCallback","o1","o2","property","prop"],"sources":["/home/runner/work/broadway-lite/broadway-lite/node_modules/@elastic/eui/es/services/sort/comparators.js"],"sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n\nimport { SortDirection } from './sort_direction';\nimport { get } from '../objects';\nexport var Comparators = Object.freeze({\n  default: function _default() {\n    var direction = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : SortDirection.ASC;\n    return function (v1, v2) {\n      // JavaScript's comparison of null/undefined (and some others not handled here) values always returns `false`\n      // (https://www.ecma-international.org/ecma-262/#sec-abstract-relational-comparison)\n      // resulting in cases where v1 < v2 and v1 > v2 are both false.\n      // This leads to unpredictable sorting results in multiple JS engine sorting algorithms\n      // which causes unpredictable user experiences.\n      // Instead:\n      // * 1. push undefined/null values to the end of the sorted list, _regardless of sort direction_\n      //    (non-sortable values always appear at the end, and sortable values are sorted at the top)\n      // * 2. report undefined/null values as equal\n      // * 3. when both values are comparable they are sorted normally\n\n      var v1IsComparable = v1 != null;\n      var v2IsComparable = v2 != null;\n\n      // * 1.\n      if (v1IsComparable && !v2IsComparable) {\n        return -1;\n      }\n      if (!v1IsComparable && v2IsComparable) {\n        return 1;\n      }\n\n      // * 2.\n      if (!v1IsComparable && !v2IsComparable) {\n        return 0;\n      }\n\n      // * 3.\n      if (v1 === v2) {\n        return 0;\n      }\n      var result = v1 > v2 ? 1 : -1;\n      return SortDirection.isAsc(direction) ? result : -1 * result;\n    };\n  },\n  reverse: function reverse(comparator) {\n    return function (v1, v2) {\n      return comparator(v2, v1);\n    };\n  },\n  value: function (_value) {\n    function value(_x, _x2) {\n      return _value.apply(this, arguments);\n    }\n    value.toString = function () {\n      return _value.toString();\n    };\n    return value;\n  }(function (valueCallback, comparator) {\n    if (!comparator) {\n      comparator = this.default(SortDirection.ASC);\n    }\n    return function (o1, o2) {\n      return comparator(valueCallback(o1), valueCallback(o2));\n    };\n  }),\n  property: function property(prop, comparator) {\n    return this.value(function (value) {\n      return get(value, prop);\n    }, comparator);\n  }\n});"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,aAAa,QAAQ,kBAAkB;AAChD,SAASC,GAAG,QAAQ,YAAY;AAChC,OAAO,IAAIC,WAAW,GAAGC,MAAM,CAACC,MAAM,CAAC;EACrCC,OAAO,EAAE,SAASC,QAAQA,CAAA,EAAG;IAC3B,IAAIC,SAAS,GAAGC,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKE,SAAS,GAAGF,SAAS,CAAC,CAAC,CAAC,GAAGR,aAAa,CAACW,GAAG;IACrG,OAAO,UAAUC,EAAE,EAAEC,EAAE,EAAE;MACvB;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;;MAEA,IAAIC,cAAc,GAAGF,EAAE,IAAI,IAAI;MAC/B,IAAIG,cAAc,GAAGF,EAAE,IAAI,IAAI;;MAE/B;MACA,IAAIC,cAAc,IAAI,CAACC,cAAc,EAAE;QACrC,OAAO,CAAC,CAAC;MACX;MACA,IAAI,CAACD,cAAc,IAAIC,cAAc,EAAE;QACrC,OAAO,CAAC;MACV;;MAEA;MACA,IAAI,CAACD,cAAc,IAAI,CAACC,cAAc,EAAE;QACtC,OAAO,CAAC;MACV;;MAEA;MACA,IAAIH,EAAE,KAAKC,EAAE,EAAE;QACb,OAAO,CAAC;MACV;MACA,IAAIG,MAAM,GAAGJ,EAAE,GAAGC,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;MAC7B,OAAOb,aAAa,CAACiB,KAAK,CAACV,SAAS,CAAC,GAAGS,MAAM,GAAG,CAAC,CAAC,GAAGA,MAAM;IAC9D,CAAC;EACH,CAAC;EACDE,OAAO,EAAE,SAASA,OAAOA,CAACC,UAAU,EAAE;IACpC,OAAO,UAAUP,EAAE,EAAEC,EAAE,EAAE;MACvB,OAAOM,UAAU,CAACN,EAAE,EAAED,EAAE,CAAC;IAC3B,CAAC;EACH,CAAC;EACDQ,KAAK,EAAE,UAAUC,MAAM,EAAE;IACvB,SAASD,KAAKA,CAACE,EAAE,EAAEC,GAAG,EAAE;MACtB,OAAOF,MAAM,CAACG,KAAK,CAAC,IAAI,EAAEhB,SAAS,CAAC;IACtC;IACAY,KAAK,CAACK,QAAQ,GAAG,YAAY;MAC3B,OAAOJ,MAAM,CAACI,QAAQ,CAAC,CAAC;IAC1B,CAAC;IACD,OAAOL,KAAK;EACd,CAAC,CAAC,UAAUM,aAAa,EAAEP,UAAU,EAAE;IACrC,IAAI,CAACA,UAAU,EAAE;MACfA,UAAU,GAAG,IAAI,CAACd,OAAO,CAACL,aAAa,CAACW,GAAG,CAAC;IAC9C;IACA,OAAO,UAAUgB,EAAE,EAAEC,EAAE,EAAE;MACvB,OAAOT,UAAU,CAACO,aAAa,CAACC,EAAE,CAAC,EAAED,aAAa,CAACE,EAAE,CAAC,CAAC;IACzD,CAAC;EACH,CAAC,CAAC;EACFC,QAAQ,EAAE,SAASA,QAAQA,CAACC,IAAI,EAAEX,UAAU,EAAE;IAC5C,OAAO,IAAI,CAACC,KAAK,CAAC,UAAUA,KAAK,EAAE;MACjC,OAAOnB,GAAG,CAACmB,KAAK,EAAEU,IAAI,CAAC;IACzB,CAAC,EAAEX,UAAU,CAAC;EAChB;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}