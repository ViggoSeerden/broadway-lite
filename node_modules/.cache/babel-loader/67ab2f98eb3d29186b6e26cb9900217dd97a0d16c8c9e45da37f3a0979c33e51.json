{"ast":null,"code":"function _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"];\n  if (null != _i) {\n    var _s,\n      _e,\n      _x,\n      _r,\n      _arr = [],\n      _n = !0,\n      _d = !1;\n    try {\n      if (_x = (_i = _i.call(arr)).next, 0 === i) {\n        if (Object(_i) !== _i) return;\n        _n = !1;\n      } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0);\n    } catch (err) {\n      _d = !0, _e = err;\n    } finally {\n      try {\n        if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return;\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n    return _arr;\n  }\n}\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n\nimport { useEffect, useState, useContext } from 'react';\nimport { IS_JEST_ENVIRONMENT } from '../../../utils';\nimport { useUpdateEffect, useForceRender } from '../../../services';\nimport { useResizeObserver } from '../../observer/resize_observer';\nimport { DataGridSortingContext } from './sorting';\nexport var useFinalGridDimensions = function useFinalGridDimensions(_ref) {\n  var unconstrainedHeight = _ref.unconstrainedHeight,\n    unconstrainedWidth = _ref.unconstrainedWidth,\n    wrapperDimensions = _ref.wrapperDimensions,\n    wrapperRef = _ref.wrapperRef,\n    isFullScreen = _ref.isFullScreen,\n    rowCount = _ref.rowCount;\n  // Used if the grid needs to scroll\n  var _useState = useState(undefined),\n    _useState2 = _slicedToArray(_useState, 2),\n    height = _useState2[0],\n    setHeight = _useState2[1];\n  var _useState3 = useState(undefined),\n    _useState4 = _slicedToArray(_useState3, 2),\n    width = _useState4[0],\n    setWidth = _useState4[1];\n  // Tracking fullscreen height separately is necessary to correctly restore the grid back to non-fullscreen height\n  var _useState5 = useState(0),\n    _useState6 = _slicedToArray(_useState5, 2),\n    fullScreenHeight = _useState6[0],\n    setFullScreenHeight = _useState6[1];\n\n  // Set the wrapper height on load, whenever the grid wrapper resizes, and whenever rowCount changes\n  useEffect(function () {\n    if (!wrapperRef.current) return;\n    var wrapperHeight = wrapperRef.current.getBoundingClientRect().height;\n    if (isFullScreen) {\n      setFullScreenHeight(wrapperHeight);\n    } else {\n      // NOTE: Math.round() is necessary here to account for browser zoom level\n      // Otherwise, both `wrapperHeight` and `unconstrainedHeight` can return values\n      // that are slightly off by small decimal rounding, which are essentially\n      // equivalent but causes the wrapper height to get set when it shouldn't\n      if (Math.round(wrapperHeight) !== Math.round(unconstrainedHeight)) {\n        setHeight(wrapperHeight);\n      }\n    }\n  }, [rowCount, isFullScreen, wrapperDimensions.height, unconstrainedHeight, wrapperRef]);\n\n  // Set the wrapper width on load and whenever the grid wrapper resizes\n  useEffect(function () {\n    if (!wrapperRef.current) return;\n    var wrapperWidth = wrapperRef.current.getBoundingClientRect().width;\n    if (wrapperWidth !== unconstrainedWidth) {\n      setWidth(wrapperWidth);\n    }\n  }, [wrapperDimensions.width, unconstrainedWidth, wrapperRef]);\n  var finalHeight = isFullScreen ? fullScreenHeight : height || unconstrainedHeight;\n  var finalWidth = width || unconstrainedWidth;\n  return IS_JEST_ENVIRONMENT ? {\n    finalHeight: Number.MAX_SAFE_INTEGER,\n    finalWidth: Number.MAX_SAFE_INTEGER\n  } : {\n    finalHeight: finalHeight,\n    finalWidth: finalWidth\n  };\n};\n\n/**\n * Computes the unconstrained (total possible) height of a grid\n */\nexport var useUnconstrainedHeight = function useUnconstrainedHeight(_ref2) {\n  var rowHeightUtils = _ref2.rowHeightUtils,\n    startRow = _ref2.startRow,\n    endRow = _ref2.endRow,\n    rowHeightsOptions = _ref2.rowHeightsOptions,\n    defaultRowHeight = _ref2.defaultRowHeight,\n    headerRowHeight = _ref2.headerRowHeight,\n    footerRowHeight = _ref2.footerRowHeight,\n    scrollBarHeight = _ref2.scrollBarHeight,\n    innerGridRef = _ref2.innerGridRef;\n  var _useContext = useContext(DataGridSortingContext),\n    getCorrectRowIndex = _useContext.getCorrectRowIndex;\n  var knownHeight = 0; // tracks the pixel height of rows we know the size of\n  var knownRowCount = 0; // how many rows we know the size of\n  for (var i = startRow; i < endRow; i++) {\n    var correctRowIndex = getCorrectRowIndex(i); // map visible row to logical row\n\n    // lookup the height configuration of this row\n    var rowHeightOption = rowHeightUtils.getRowHeightOption(correctRowIndex, rowHeightsOptions);\n    if (rowHeightOption) {\n      // this row's height is known\n      knownRowCount++;\n      knownHeight += rowHeightUtils.getCalculatedHeight(rowHeightOption, defaultRowHeight, correctRowIndex, rowHeightUtils.isRowHeightOverride(correctRowIndex, rowHeightsOptions));\n    }\n  }\n\n  // how many rows to provide space for on the screen\n  var rowCountToAffordFor = endRow - startRow;\n\n  // watch the inner element for a change to its width\n  // which may cause the horizontal scrollbar to be added or removed\n  var _useResizeObserver = useResizeObserver(innerGridRef.current, 'width'),\n    innerWidth = _useResizeObserver.width;\n  var forceRender = useForceRender();\n  useUpdateEffect(forceRender, [innerWidth]);\n  var unconstrainedHeight = defaultRowHeight * (rowCountToAffordFor - knownRowCount) +\n  // guess how much space is required for unknown rows\n  knownHeight +\n  // computed pixel height of the known rows\n  headerRowHeight +\n  // account for header\n  footerRowHeight +\n  // account for footer\n  scrollBarHeight; // account for horizontal scrollbar\n\n  return unconstrainedHeight;\n};\n\n/**\n * Returns the size of the cell container minus the scroll bar width.\n * To do so, this hook is listening for size changes of the container itself,\n * as well as pagination changes to make sure every update is caught.\n *\n * This is necessary because there is no callback/event fired by the browser\n * indicating the scroll bar state has changed.\n * @param resizeRef the wrapper element containging the data grid\n * @param pageSize the currently applied page size\n */\nexport var useVirtualizeContainerWidth = function useVirtualizeContainerWidth(virtualizeContainer, gridWidth, pageSize) {\n  var _useState7 = useState(0),\n    _useState8 = _slicedToArray(_useState7, 2),\n    virtualizeContainerWidth = _useState8[0],\n    setVirtualizeContainerWidth = _useState8[1];\n  useResizeObserver(virtualizeContainer);\n\n  // re-render data grid on size changes\n  var forceRender = useForceRender();\n  useUpdateEffect(forceRender, [gridWidth, forceRender]);\n  useEffect(function () {\n    if (virtualizeContainer !== null && virtualizeContainer !== void 0 && virtualizeContainer.clientWidth) {\n      setVirtualizeContainerWidth(virtualizeContainer.clientWidth);\n    }\n  }, [virtualizeContainer === null || virtualizeContainer === void 0 ? void 0 : virtualizeContainer.clientWidth]);\n  useEffect(function () {\n    // wait for layout to settle, then measure virtualize container\n    setTimeout(function () {\n      if (virtualizeContainer !== null && virtualizeContainer !== void 0 && virtualizeContainer.clientWidth) {\n        var containerWidth = virtualizeContainer.clientWidth;\n        setVirtualizeContainerWidth(containerWidth);\n      }\n    }, 100);\n  }, [pageSize, virtualizeContainer]);\n\n  // Use clientWidth of the virtualization container to take scroll bar into account\n  // If that's not possible, fall back to the width of the wrapper element\n  return virtualizeContainerWidth || gridWidth;\n};","map":{"version":3,"names":["_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","TypeError","o","minLen","_arrayLikeToArray","n","Object","prototype","toString","call","slice","constructor","name","Array","from","test","len","length","arr2","_i","Symbol","iterator","_s","_e","_x","_r","_arr","_n","_d","next","done","push","value","err","return","isArray","useEffect","useState","useContext","IS_JEST_ENVIRONMENT","useUpdateEffect","useForceRender","useResizeObserver","DataGridSortingContext","useFinalGridDimensions","_ref","unconstrainedHeight","unconstrainedWidth","wrapperDimensions","wrapperRef","isFullScreen","rowCount","_useState","undefined","_useState2","height","setHeight","_useState3","_useState4","width","setWidth","_useState5","_useState6","fullScreenHeight","setFullScreenHeight","current","wrapperHeight","getBoundingClientRect","Math","round","wrapperWidth","finalHeight","finalWidth","Number","MAX_SAFE_INTEGER","useUnconstrainedHeight","_ref2","rowHeightUtils","startRow","endRow","rowHeightsOptions","defaultRowHeight","headerRowHeight","footerRowHeight","scrollBarHeight","innerGridRef","_useContext","getCorrectRowIndex","knownHeight","knownRowCount","correctRowIndex","rowHeightOption","getRowHeightOption","getCalculatedHeight","isRowHeightOverride","rowCountToAffordFor","_useResizeObserver","innerWidth","forceRender","useVirtualizeContainerWidth","virtualizeContainer","gridWidth","pageSize","_useState7","_useState8","virtualizeContainerWidth","setVirtualizeContainerWidth","clientWidth","setTimeout","containerWidth"],"sources":["/home/runner/work/broadway-lite/broadway-lite/node_modules/@elastic/eui/es/components/datagrid/utils/grid_height_width.js"],"sourcesContent":["function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n\nimport { useEffect, useState, useContext } from 'react';\nimport { IS_JEST_ENVIRONMENT } from '../../../utils';\nimport { useUpdateEffect, useForceRender } from '../../../services';\nimport { useResizeObserver } from '../../observer/resize_observer';\nimport { DataGridSortingContext } from './sorting';\nexport var useFinalGridDimensions = function useFinalGridDimensions(_ref) {\n  var unconstrainedHeight = _ref.unconstrainedHeight,\n    unconstrainedWidth = _ref.unconstrainedWidth,\n    wrapperDimensions = _ref.wrapperDimensions,\n    wrapperRef = _ref.wrapperRef,\n    isFullScreen = _ref.isFullScreen,\n    rowCount = _ref.rowCount;\n  // Used if the grid needs to scroll\n  var _useState = useState(undefined),\n    _useState2 = _slicedToArray(_useState, 2),\n    height = _useState2[0],\n    setHeight = _useState2[1];\n  var _useState3 = useState(undefined),\n    _useState4 = _slicedToArray(_useState3, 2),\n    width = _useState4[0],\n    setWidth = _useState4[1];\n  // Tracking fullscreen height separately is necessary to correctly restore the grid back to non-fullscreen height\n  var _useState5 = useState(0),\n    _useState6 = _slicedToArray(_useState5, 2),\n    fullScreenHeight = _useState6[0],\n    setFullScreenHeight = _useState6[1];\n\n  // Set the wrapper height on load, whenever the grid wrapper resizes, and whenever rowCount changes\n  useEffect(function () {\n    if (!wrapperRef.current) return;\n    var wrapperHeight = wrapperRef.current.getBoundingClientRect().height;\n    if (isFullScreen) {\n      setFullScreenHeight(wrapperHeight);\n    } else {\n      // NOTE: Math.round() is necessary here to account for browser zoom level\n      // Otherwise, both `wrapperHeight` and `unconstrainedHeight` can return values\n      // that are slightly off by small decimal rounding, which are essentially\n      // equivalent but causes the wrapper height to get set when it shouldn't\n      if (Math.round(wrapperHeight) !== Math.round(unconstrainedHeight)) {\n        setHeight(wrapperHeight);\n      }\n    }\n  }, [rowCount, isFullScreen, wrapperDimensions.height, unconstrainedHeight, wrapperRef]);\n\n  // Set the wrapper width on load and whenever the grid wrapper resizes\n  useEffect(function () {\n    if (!wrapperRef.current) return;\n    var wrapperWidth = wrapperRef.current.getBoundingClientRect().width;\n    if (wrapperWidth !== unconstrainedWidth) {\n      setWidth(wrapperWidth);\n    }\n  }, [wrapperDimensions.width, unconstrainedWidth, wrapperRef]);\n  var finalHeight = isFullScreen ? fullScreenHeight : height || unconstrainedHeight;\n  var finalWidth = width || unconstrainedWidth;\n  return IS_JEST_ENVIRONMENT ? {\n    finalHeight: Number.MAX_SAFE_INTEGER,\n    finalWidth: Number.MAX_SAFE_INTEGER\n  } : {\n    finalHeight: finalHeight,\n    finalWidth: finalWidth\n  };\n};\n\n/**\n * Computes the unconstrained (total possible) height of a grid\n */\nexport var useUnconstrainedHeight = function useUnconstrainedHeight(_ref2) {\n  var rowHeightUtils = _ref2.rowHeightUtils,\n    startRow = _ref2.startRow,\n    endRow = _ref2.endRow,\n    rowHeightsOptions = _ref2.rowHeightsOptions,\n    defaultRowHeight = _ref2.defaultRowHeight,\n    headerRowHeight = _ref2.headerRowHeight,\n    footerRowHeight = _ref2.footerRowHeight,\n    scrollBarHeight = _ref2.scrollBarHeight,\n    innerGridRef = _ref2.innerGridRef;\n  var _useContext = useContext(DataGridSortingContext),\n    getCorrectRowIndex = _useContext.getCorrectRowIndex;\n  var knownHeight = 0; // tracks the pixel height of rows we know the size of\n  var knownRowCount = 0; // how many rows we know the size of\n  for (var i = startRow; i < endRow; i++) {\n    var correctRowIndex = getCorrectRowIndex(i); // map visible row to logical row\n\n    // lookup the height configuration of this row\n    var rowHeightOption = rowHeightUtils.getRowHeightOption(correctRowIndex, rowHeightsOptions);\n    if (rowHeightOption) {\n      // this row's height is known\n      knownRowCount++;\n      knownHeight += rowHeightUtils.getCalculatedHeight(rowHeightOption, defaultRowHeight, correctRowIndex, rowHeightUtils.isRowHeightOverride(correctRowIndex, rowHeightsOptions));\n    }\n  }\n\n  // how many rows to provide space for on the screen\n  var rowCountToAffordFor = endRow - startRow;\n\n  // watch the inner element for a change to its width\n  // which may cause the horizontal scrollbar to be added or removed\n  var _useResizeObserver = useResizeObserver(innerGridRef.current, 'width'),\n    innerWidth = _useResizeObserver.width;\n  var forceRender = useForceRender();\n  useUpdateEffect(forceRender, [innerWidth]);\n  var unconstrainedHeight = defaultRowHeight * (rowCountToAffordFor - knownRowCount) +\n  // guess how much space is required for unknown rows\n  knownHeight +\n  // computed pixel height of the known rows\n  headerRowHeight +\n  // account for header\n  footerRowHeight +\n  // account for footer\n  scrollBarHeight; // account for horizontal scrollbar\n\n  return unconstrainedHeight;\n};\n\n/**\n * Returns the size of the cell container minus the scroll bar width.\n * To do so, this hook is listening for size changes of the container itself,\n * as well as pagination changes to make sure every update is caught.\n *\n * This is necessary because there is no callback/event fired by the browser\n * indicating the scroll bar state has changed.\n * @param resizeRef the wrapper element containging the data grid\n * @param pageSize the currently applied page size\n */\nexport var useVirtualizeContainerWidth = function useVirtualizeContainerWidth(virtualizeContainer, gridWidth, pageSize) {\n  var _useState7 = useState(0),\n    _useState8 = _slicedToArray(_useState7, 2),\n    virtualizeContainerWidth = _useState8[0],\n    setVirtualizeContainerWidth = _useState8[1];\n  useResizeObserver(virtualizeContainer);\n\n  // re-render data grid on size changes\n  var forceRender = useForceRender();\n  useUpdateEffect(forceRender, [gridWidth, forceRender]);\n  useEffect(function () {\n    if (virtualizeContainer !== null && virtualizeContainer !== void 0 && virtualizeContainer.clientWidth) {\n      setVirtualizeContainerWidth(virtualizeContainer.clientWidth);\n    }\n  }, [virtualizeContainer === null || virtualizeContainer === void 0 ? void 0 : virtualizeContainer.clientWidth]);\n  useEffect(function () {\n    // wait for layout to settle, then measure virtualize container\n    setTimeout(function () {\n      if (virtualizeContainer !== null && virtualizeContainer !== void 0 && virtualizeContainer.clientWidth) {\n        var containerWidth = virtualizeContainer.clientWidth;\n        setVirtualizeContainerWidth(containerWidth);\n      }\n    }, 100);\n  }, [pageSize, virtualizeContainer]);\n\n  // Use clientWidth of the virtualization container to take scroll bar into account\n  // If that's not possible, fall back to the width of the wrapper element\n  return virtualizeContainerWidth || gridWidth;\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}