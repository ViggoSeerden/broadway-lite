{"ast":null,"code":"/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n\nvar GROUP_NUMERIC = /^([\\d.]+)(s|ms)/;\nfunction getMilliseconds(value, unit) {\n  // Given the regex match and capture groups, we can assume `unit` to be either 's' or 'ms'\n  var multiplier = unit === 's' ? 1000 : 1;\n  return parseFloat(value) * multiplier;\n}\n// Find CSS `transition-duration` and `transition-delay` intervals\n// and return the value of each computed property in 'ms'\nexport var getTransitionTimings = function getTransitionTimings(element) {\n  var computedStyle = window.getComputedStyle(element);\n  var computedDuration = computedStyle.getPropertyValue('transition-duration');\n  var durationMatchArray = computedDuration.match(GROUP_NUMERIC);\n  var durationMatch = durationMatchArray ? getMilliseconds(durationMatchArray[1], durationMatchArray[2]) : 0;\n  var computedDelay = computedStyle.getPropertyValue('transition-delay');\n  var delayMatchArray = computedDelay.match(GROUP_NUMERIC);\n  var delayMatch = delayMatchArray ? getMilliseconds(delayMatchArray[1], delayMatchArray[2]) : 0;\n  return {\n    durationMatch: durationMatch,\n    delayMatch: delayMatch\n  };\n};\nfunction isElementNode(element) {\n  return element.nodeType === document.ELEMENT_NODE;\n}\n// Uses `getTransitionTimings` to find the total transition time for\n// all elements targeted by a MutationObserver callback\nexport var getWaitDuration = function getWaitDuration(records) {\n  return records.reduce(function (waitDuration, record) {\n    // only check for CSS transition values for ELEMENT nodes\n    if (isElementNode(record.target)) {\n      var _getTransitionTimings = getTransitionTimings(record.target),\n        durationMatch = _getTransitionTimings.durationMatch,\n        delayMatch = _getTransitionTimings.delayMatch;\n      waitDuration = Math.max(waitDuration, durationMatch + delayMatch);\n    }\n    return waitDuration;\n  }, 0);\n};\n\n// Uses `requestAnimationFrame` to perform a given callback after a specified waiting period\nexport var performOnFrame = function performOnFrame(waitDuration, toPerform) {\n  if (waitDuration > 0) {\n    var startTime = Date.now();\n    var endTime = startTime + waitDuration;\n    var onFrame = function onFrame() {\n      toPerform();\n      if (endTime > Date.now()) {\n        requestAnimationFrame(onFrame);\n      }\n    };\n    requestAnimationFrame(onFrame);\n  }\n};\n\n// Convenience method for combining the result of 'getWaitDuration' directly with 'performOnFrame'\nexport var getDurationAndPerformOnFrame = function getDurationAndPerformOnFrame(records, toPerform) {\n  performOnFrame(getWaitDuration(records), toPerform);\n};","map":{"version":3,"names":["GROUP_NUMERIC","getMilliseconds","value","unit","multiplier","parseFloat","getTransitionTimings","element","computedStyle","window","getComputedStyle","computedDuration","getPropertyValue","durationMatchArray","match","durationMatch","computedDelay","delayMatchArray","delayMatch","isElementNode","nodeType","document","ELEMENT_NODE","getWaitDuration","records","reduce","waitDuration","record","target","_getTransitionTimings","Math","max","performOnFrame","toPerform","startTime","Date","now","endTime","onFrame","requestAnimationFrame","getDurationAndPerformOnFrame"],"sources":["/home/runner/work/broadway-lite/broadway-lite/node_modules/@elastic/eui/es/services/transition/transition.js"],"sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n\nvar GROUP_NUMERIC = /^([\\d.]+)(s|ms)/;\nfunction getMilliseconds(value, unit) {\n  // Given the regex match and capture groups, we can assume `unit` to be either 's' or 'ms'\n  var multiplier = unit === 's' ? 1000 : 1;\n  return parseFloat(value) * multiplier;\n}\n// Find CSS `transition-duration` and `transition-delay` intervals\n// and return the value of each computed property in 'ms'\nexport var getTransitionTimings = function getTransitionTimings(element) {\n  var computedStyle = window.getComputedStyle(element);\n  var computedDuration = computedStyle.getPropertyValue('transition-duration');\n  var durationMatchArray = computedDuration.match(GROUP_NUMERIC);\n  var durationMatch = durationMatchArray ? getMilliseconds(durationMatchArray[1], durationMatchArray[2]) : 0;\n  var computedDelay = computedStyle.getPropertyValue('transition-delay');\n  var delayMatchArray = computedDelay.match(GROUP_NUMERIC);\n  var delayMatch = delayMatchArray ? getMilliseconds(delayMatchArray[1], delayMatchArray[2]) : 0;\n  return {\n    durationMatch: durationMatch,\n    delayMatch: delayMatch\n  };\n};\nfunction isElementNode(element) {\n  return element.nodeType === document.ELEMENT_NODE;\n}\n// Uses `getTransitionTimings` to find the total transition time for\n// all elements targeted by a MutationObserver callback\nexport var getWaitDuration = function getWaitDuration(records) {\n  return records.reduce(function (waitDuration, record) {\n    // only check for CSS transition values for ELEMENT nodes\n    if (isElementNode(record.target)) {\n      var _getTransitionTimings = getTransitionTimings(record.target),\n        durationMatch = _getTransitionTimings.durationMatch,\n        delayMatch = _getTransitionTimings.delayMatch;\n      waitDuration = Math.max(waitDuration, durationMatch + delayMatch);\n    }\n    return waitDuration;\n  }, 0);\n};\n\n// Uses `requestAnimationFrame` to perform a given callback after a specified waiting period\nexport var performOnFrame = function performOnFrame(waitDuration, toPerform) {\n  if (waitDuration > 0) {\n    var startTime = Date.now();\n    var endTime = startTime + waitDuration;\n    var onFrame = function onFrame() {\n      toPerform();\n      if (endTime > Date.now()) {\n        requestAnimationFrame(onFrame);\n      }\n    };\n    requestAnimationFrame(onFrame);\n  }\n};\n\n// Convenience method for combining the result of 'getWaitDuration' directly with 'performOnFrame'\nexport var getDurationAndPerformOnFrame = function getDurationAndPerformOnFrame(records, toPerform) {\n  performOnFrame(getWaitDuration(records), toPerform);\n};"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIA,aAAa,GAAG,iBAAiB;AACrC,SAASC,eAAeA,CAACC,KAAK,EAAEC,IAAI,EAAE;EACpC;EACA,IAAIC,UAAU,GAAGD,IAAI,KAAK,GAAG,GAAG,IAAI,GAAG,CAAC;EACxC,OAAOE,UAAU,CAACH,KAAK,CAAC,GAAGE,UAAU;AACvC;AACA;AACA;AACA,OAAO,IAAIE,oBAAoB,GAAG,SAASA,oBAAoBA,CAACC,OAAO,EAAE;EACvE,IAAIC,aAAa,GAAGC,MAAM,CAACC,gBAAgB,CAACH,OAAO,CAAC;EACpD,IAAII,gBAAgB,GAAGH,aAAa,CAACI,gBAAgB,CAAC,qBAAqB,CAAC;EAC5E,IAAIC,kBAAkB,GAAGF,gBAAgB,CAACG,KAAK,CAACd,aAAa,CAAC;EAC9D,IAAIe,aAAa,GAAGF,kBAAkB,GAAGZ,eAAe,CAACY,kBAAkB,CAAC,CAAC,CAAC,EAAEA,kBAAkB,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;EAC1G,IAAIG,aAAa,GAAGR,aAAa,CAACI,gBAAgB,CAAC,kBAAkB,CAAC;EACtE,IAAIK,eAAe,GAAGD,aAAa,CAACF,KAAK,CAACd,aAAa,CAAC;EACxD,IAAIkB,UAAU,GAAGD,eAAe,GAAGhB,eAAe,CAACgB,eAAe,CAAC,CAAC,CAAC,EAAEA,eAAe,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;EAC9F,OAAO;IACLF,aAAa,EAAEA,aAAa;IAC5BG,UAAU,EAAEA;EACd,CAAC;AACH,CAAC;AACD,SAASC,aAAaA,CAACZ,OAAO,EAAE;EAC9B,OAAOA,OAAO,CAACa,QAAQ,KAAKC,QAAQ,CAACC,YAAY;AACnD;AACA;AACA;AACA,OAAO,IAAIC,eAAe,GAAG,SAASA,eAAeA,CAACC,OAAO,EAAE;EAC7D,OAAOA,OAAO,CAACC,MAAM,CAAC,UAAUC,YAAY,EAAEC,MAAM,EAAE;IACpD;IACA,IAAIR,aAAa,CAACQ,MAAM,CAACC,MAAM,CAAC,EAAE;MAChC,IAAIC,qBAAqB,GAAGvB,oBAAoB,CAACqB,MAAM,CAACC,MAAM,CAAC;QAC7Db,aAAa,GAAGc,qBAAqB,CAACd,aAAa;QACnDG,UAAU,GAAGW,qBAAqB,CAACX,UAAU;MAC/CQ,YAAY,GAAGI,IAAI,CAACC,GAAG,CAACL,YAAY,EAAEX,aAAa,GAAGG,UAAU,CAAC;IACnE;IACA,OAAOQ,YAAY;EACrB,CAAC,EAAE,CAAC,CAAC;AACP,CAAC;;AAED;AACA,OAAO,IAAIM,cAAc,GAAG,SAASA,cAAcA,CAACN,YAAY,EAAEO,SAAS,EAAE;EAC3E,IAAIP,YAAY,GAAG,CAAC,EAAE;IACpB,IAAIQ,SAAS,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC;IAC1B,IAAIC,OAAO,GAAGH,SAAS,GAAGR,YAAY;IACtC,IAAIY,OAAO,GAAG,SAASA,OAAOA,CAAA,EAAG;MAC/BL,SAAS,CAAC,CAAC;MACX,IAAII,OAAO,GAAGF,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE;QACxBG,qBAAqB,CAACD,OAAO,CAAC;MAChC;IACF,CAAC;IACDC,qBAAqB,CAACD,OAAO,CAAC;EAChC;AACF,CAAC;;AAED;AACA,OAAO,IAAIE,4BAA4B,GAAG,SAASA,4BAA4BA,CAAChB,OAAO,EAAES,SAAS,EAAE;EAClGD,cAAc,CAACT,eAAe,CAACC,OAAO,CAAC,EAAES,SAAS,CAAC;AACrD,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}