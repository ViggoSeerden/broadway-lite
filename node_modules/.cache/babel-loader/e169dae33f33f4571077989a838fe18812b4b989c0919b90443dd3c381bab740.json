{"ast":null,"code":"/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n\nimport React from 'react';\nimport { ThemeProvider } from '@emotion/react';\nimport { useEuiTheme } from './hooks';\n\n/**\n * @see https://emotion.sh/docs/theming\n * This Emotion theme provider is added for *consumer usage* & convenience only.\n *\n * EUI should stick to using our own context/`useEuiTheme` internally\n * instead of Emotion's shorthand `css={theme => {}}` API. If consumers\n * set their own theme via <ThemeProvider>; EUI's styles should continue\n * working as-is.\n */\nimport { jsx as ___EmotionJSX } from \"@emotion/react\";\nexport var EuiEmotionThemeProvider = function EuiEmotionThemeProvider(_ref) {\n  var children = _ref.children;\n  var euiThemeContext = useEuiTheme();\n  return ___EmotionJSX(ThemeProvider, {\n    theme: euiThemeContext\n  }, children);\n};","map":{"version":3,"names":["React","ThemeProvider","useEuiTheme","jsx","___EmotionJSX","EuiEmotionThemeProvider","_ref","children","euiThemeContext","theme"],"sources":["/home/runner/work/broadway-lite/broadway-lite/node_modules/@elastic/eui/es/services/theme/emotion.js"],"sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n\nimport React from 'react';\nimport { ThemeProvider } from '@emotion/react';\nimport { useEuiTheme } from './hooks';\n\n/**\n * @see https://emotion.sh/docs/theming\n * This Emotion theme provider is added for *consumer usage* & convenience only.\n *\n * EUI should stick to using our own context/`useEuiTheme` internally\n * instead of Emotion's shorthand `css={theme => {}}` API. If consumers\n * set their own theme via <ThemeProvider>; EUI's styles should continue\n * working as-is.\n */\nimport { jsx as ___EmotionJSX } from \"@emotion/react\";\nexport var EuiEmotionThemeProvider = function EuiEmotionThemeProvider(_ref) {\n  var children = _ref.children;\n  var euiThemeContext = useEuiTheme();\n  return ___EmotionJSX(ThemeProvider, {\n    theme: euiThemeContext\n  }, children);\n};"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,QAAQ,gBAAgB;AAC9C,SAASC,WAAW,QAAQ,SAAS;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,GAAG,IAAIC,aAAa,QAAQ,gBAAgB;AACrD,OAAO,IAAIC,uBAAuB,GAAG,SAASA,uBAAuBA,CAACC,IAAI,EAAE;EAC1E,IAAIC,QAAQ,GAAGD,IAAI,CAACC,QAAQ;EAC5B,IAAIC,eAAe,GAAGN,WAAW,CAAC,CAAC;EACnC,OAAOE,aAAa,CAACH,aAAa,EAAE;IAClCQ,KAAK,EAAED;EACT,CAAC,EAAED,QAAQ,CAAC;AACd,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}