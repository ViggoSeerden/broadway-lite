{"ast":null,"code":"/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n\n// since react-window doesn't export a type with the imperative api only we can\n// use this to omit the react-specific class component methods\n/**\n * Props which are available for a custom toolbar rendering\n */\n// An array of [x,y] coordinates. Note that the `y` value expected internally is a `visibleRowIndex`\n// Force either aria-label or aria-labelledby to be defined\n/**\n * Props shared between renderCellValue and renderCellPopover\n */\n// The empty control column array fallbacks need to be cached, or\n// they'll cause rerendering/remount issues in memoized dependencies\nexport var emptyControlColumns = [];\n\n// Types for styling options, passed down through the `gridStyle` prop\n\n// ideally this would use a generic to enforce `pageSize` exists in `pageSizeOptions`,\n// but TypeScript's default understanding of an array is number[] unless `as const` is used\n// which defeats the generic's purpose & functionality as it would check for `number` in `number[]`","map":{"version":3,"names":["emptyControlColumns"],"sources":["/home/runner/work/broadway-lite/broadway-lite/node_modules/@elastic/eui/es/components/datagrid/data_grid_types.js"],"sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n\n// since react-window doesn't export a type with the imperative api only we can\n// use this to omit the react-specific class component methods\n/**\n * Props which are available for a custom toolbar rendering\n */\n// An array of [x,y] coordinates. Note that the `y` value expected internally is a `visibleRowIndex`\n// Force either aria-label or aria-labelledby to be defined\n/**\n * Props shared between renderCellValue and renderCellPopover\n */\n// The empty control column array fallbacks need to be cached, or\n// they'll cause rerendering/remount issues in memoized dependencies\nexport var emptyControlColumns = [];\n\n// Types for styling options, passed down through the `gridStyle` prop\n\n// ideally this would use a generic to enforce `pageSize` exists in `pageSizeOptions`,\n// but TypeScript's default understanding of an array is number[] unless `as const` is used\n// which defeats the generic's purpose & functionality as it would check for `number` in `number[]`"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIA,mBAAmB,GAAG,EAAE;;AAEnC;;AAEA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}