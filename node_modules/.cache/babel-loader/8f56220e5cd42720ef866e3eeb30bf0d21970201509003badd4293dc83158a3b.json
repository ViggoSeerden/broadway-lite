{"ast":null,"code":"/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n\nimport { useCallback } from 'react';\n/*\n * For use when a component needs to set `ref` objects from multiple sources.\n * For instance, if a component accepts a `ref` prop but also needs its own\n * local reference for calculations, etc.\n * This hook handles setting multiple `ref`s of any available `ref` type\n * in a single callback function.\n */\nexport var useCombinedRefs = function useCombinedRefs(refs) {\n  return useCallback(function (node) {\n    return setMultipleRefs(refs, node);\n  }, [refs]);\n};\n\n/**\n * Non-hook util for setting multiple refs/ref types.\n * Useful for non-functional components\n */\nexport var setMultipleRefs = function setMultipleRefs(refs, node) {\n  refs.forEach(function (ref) {\n    if (!ref) return;\n    if (typeof ref === 'function') {\n      ref(node);\n    } else {\n      ref.current = node;\n    }\n  });\n};","map":{"version":3,"names":["useCallback","useCombinedRefs","refs","node","setMultipleRefs","forEach","ref","current"],"sources":["/home/runner/work/broadway-lite/broadway-lite/node_modules/@elastic/eui/es/services/hooks/useCombinedRefs.js"],"sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n\nimport { useCallback } from 'react';\n/*\n * For use when a component needs to set `ref` objects from multiple sources.\n * For instance, if a component accepts a `ref` prop but also needs its own\n * local reference for calculations, etc.\n * This hook handles setting multiple `ref`s of any available `ref` type\n * in a single callback function.\n */\nexport var useCombinedRefs = function useCombinedRefs(refs) {\n  return useCallback(function (node) {\n    return setMultipleRefs(refs, node);\n  }, [refs]);\n};\n\n/**\n * Non-hook util for setting multiple refs/ref types.\n * Useful for non-functional components\n */\nexport var setMultipleRefs = function setMultipleRefs(refs, node) {\n  refs.forEach(function (ref) {\n    if (!ref) return;\n    if (typeof ref === 'function') {\n      ref(node);\n    } else {\n      ref.current = node;\n    }\n  });\n};"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,WAAW,QAAQ,OAAO;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIC,eAAe,GAAG,SAASA,eAAeA,CAACC,IAAI,EAAE;EAC1D,OAAOF,WAAW,CAAC,UAAUG,IAAI,EAAE;IACjC,OAAOC,eAAe,CAACF,IAAI,EAAEC,IAAI,CAAC;EACpC,CAAC,EAAE,CAACD,IAAI,CAAC,CAAC;AACZ,CAAC;;AAED;AACA;AACA;AACA;AACA,OAAO,IAAIE,eAAe,GAAG,SAASA,eAAeA,CAACF,IAAI,EAAEC,IAAI,EAAE;EAChED,IAAI,CAACG,OAAO,CAAC,UAAUC,GAAG,EAAE;IAC1B,IAAI,CAACA,GAAG,EAAE;IACV,IAAI,OAAOA,GAAG,KAAK,UAAU,EAAE;MAC7BA,GAAG,CAACH,IAAI,CAAC;IACX,CAAC,MAAM;MACLG,GAAG,CAACC,OAAO,GAAGJ,IAAI;IACpB;EACF,CAAC,CAAC;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}