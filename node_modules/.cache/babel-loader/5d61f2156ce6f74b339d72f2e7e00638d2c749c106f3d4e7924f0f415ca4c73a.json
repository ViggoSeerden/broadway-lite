{"ast":null,"code":"function _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"];\n  if (null != _i) {\n    var _s,\n      _e,\n      _x,\n      _r,\n      _arr = [],\n      _n = !0,\n      _d = !1;\n    try {\n      if (_x = (_i = _i.call(arr)).next, 0 === i) {\n        if (Object(_i) !== _i) return;\n        _n = !1;\n      } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0);\n    } catch (err) {\n      _d = !0, _e = err;\n    } finally {\n      try {\n        if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return;\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n    return _arr;\n  }\n}\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport PropTypes from \"prop-types\";\nimport { EuiScreenReaderOnly } from '../screen_reader_only';\nimport { jsx as ___EmotionJSX } from \"@emotion/react\";\nexport var EuiScreenReaderLive = function EuiScreenReaderLive(_ref) {\n  var children = _ref.children,\n    _ref$isActive = _ref.isActive,\n    isActive = _ref$isActive === void 0 ? true : _ref$isActive,\n    _ref$role = _ref.role,\n    role = _ref$role === void 0 ? 'status' : _ref$role,\n    _ref$ariaLive = _ref['aria-live'],\n    ariaLive = _ref$ariaLive === void 0 ? 'polite' : _ref$ariaLive,\n    _ref$focusRegionOnTex = _ref.focusRegionOnTextChange,\n    focusRegionOnTextChange = _ref$focusRegionOnTex === void 0 ? false : _ref$focusRegionOnTex;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    toggle = _useState2[0],\n    setToggle = _useState2[1];\n  var focusRef = useRef(null);\n  useEffect(function () {\n    setToggle(function (toggle) {\n      return !toggle;\n    });\n  }, [children]);\n  useEffect(function () {\n    if (focusRef.current !== null && focusRegionOnTextChange) {\n      focusRef.current.focus();\n    }\n  }, [toggle, focusRegionOnTextChange]);\n  return (\n    /**\n     * Intentionally uses two persistent live regions with oscillating content updates.\n     * This resolves the problem of duplicate screen reader announcements in rapid succession\n     * caused by React's virtual DOM behaviour (https://github.com/nvaccess/nvda/issues/7996#issuecomment-413641709)\n     *\n     * Adapted from https://github.com/alphagov/accessible-autocomplete/blob/a7106f03150941fc15e6c1ceb0a90e8872fa86ef/src/status.js\n     * Debouncing was not needed for this case, but could prove to be useful for future use cases.\n     * See also https://github.com/AlmeroSteyn/react-aria-live and https://github.com/dequelabs/ngA11y\n     * for more examples of the double region approach.\n     */\n    ___EmotionJSX(EuiScreenReaderOnly, null, ___EmotionJSX(\"div\", {\n      ref: focusRef,\n      tabIndex: focusRegionOnTextChange ? -1 : undefined\n    }, ___EmotionJSX(\"div\", {\n      role: role,\n      \"aria-atomic\": \"true\"\n      // Setting `aria-hidden` and setting `aria-live` to \"off\" prevents\n      // double announcements from VO when `focusRegionOnTextChange` is true\n      ,\n\n      \"aria-hidden\": toggle ? undefined : 'true',\n      \"aria-live\": !toggle || focusRegionOnTextChange ? 'off' : ariaLive\n    }, isActive && toggle ? children : ''), ___EmotionJSX(\"div\", {\n      role: role,\n      \"aria-atomic\": \"true\",\n      \"aria-hidden\": !toggle ? undefined : 'true',\n      \"aria-live\": toggle || focusRegionOnTextChange ? 'off' : ariaLive\n    }, isActive && !toggle ? children : '')))\n  );\n};\nEuiScreenReaderLive.propTypes = {\n  /**\n     * Whether to make screen readers aware of the content\n     */\n  isActive: PropTypes.bool,\n  /**\n     * Content for screen readers to announce\n     */\n  children: PropTypes.node,\n  /**\n     * `role` attribute for both live regions.\n     *\n     * https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Live_Regions#roles_with_implicit_live_region_attributes\n     */\n  role: PropTypes.any,\n  /**\n     * `aria-live` attribute for both live regions\n     */\n  \"aria-live\": PropTypes.any,\n  /**\n     * On `children`/text change, the region will auto-focus itself, causing screen readers\n     * to automatically read out the text content. This prop should primarily be used for\n     * navigation or page changes, where programmatically resetting focus location back to\n     * a certain part of the page is desired.\n     */\n  focusRegionOnTextChange: PropTypes.bool\n};","map":{"version":3,"names":["_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","TypeError","o","minLen","_arrayLikeToArray","n","Object","prototype","toString","call","slice","constructor","name","Array","from","test","len","length","arr2","_i","Symbol","iterator","_s","_e","_x","_r","_arr","_n","_d","next","done","push","value","err","return","isArray","React","useEffect","useRef","useState","PropTypes","EuiScreenReaderOnly","jsx","___EmotionJSX","EuiScreenReaderLive","_ref","children","_ref$isActive","isActive","_ref$role","role","_ref$ariaLive","ariaLive","_ref$focusRegionOnTex","focusRegionOnTextChange","_useState","_useState2","toggle","setToggle","focusRef","current","focus","ref","tabIndex","undefined","propTypes","bool","node","any"],"sources":["/home/runner/work/broadway-lite/broadway-lite/node_modules/@elastic/eui/es/components/accessibility/screen_reader_live/screen_reader_live.js"],"sourcesContent":["function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport PropTypes from \"prop-types\";\nimport { EuiScreenReaderOnly } from '../screen_reader_only';\nimport { jsx as ___EmotionJSX } from \"@emotion/react\";\nexport var EuiScreenReaderLive = function EuiScreenReaderLive(_ref) {\n  var children = _ref.children,\n    _ref$isActive = _ref.isActive,\n    isActive = _ref$isActive === void 0 ? true : _ref$isActive,\n    _ref$role = _ref.role,\n    role = _ref$role === void 0 ? 'status' : _ref$role,\n    _ref$ariaLive = _ref['aria-live'],\n    ariaLive = _ref$ariaLive === void 0 ? 'polite' : _ref$ariaLive,\n    _ref$focusRegionOnTex = _ref.focusRegionOnTextChange,\n    focusRegionOnTextChange = _ref$focusRegionOnTex === void 0 ? false : _ref$focusRegionOnTex;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    toggle = _useState2[0],\n    setToggle = _useState2[1];\n  var focusRef = useRef(null);\n  useEffect(function () {\n    setToggle(function (toggle) {\n      return !toggle;\n    });\n  }, [children]);\n  useEffect(function () {\n    if (focusRef.current !== null && focusRegionOnTextChange) {\n      focusRef.current.focus();\n    }\n  }, [toggle, focusRegionOnTextChange]);\n  return (\n    /**\n     * Intentionally uses two persistent live regions with oscillating content updates.\n     * This resolves the problem of duplicate screen reader announcements in rapid succession\n     * caused by React's virtual DOM behaviour (https://github.com/nvaccess/nvda/issues/7996#issuecomment-413641709)\n     *\n     * Adapted from https://github.com/alphagov/accessible-autocomplete/blob/a7106f03150941fc15e6c1ceb0a90e8872fa86ef/src/status.js\n     * Debouncing was not needed for this case, but could prove to be useful for future use cases.\n     * See also https://github.com/AlmeroSteyn/react-aria-live and https://github.com/dequelabs/ngA11y\n     * for more examples of the double region approach.\n     */\n    ___EmotionJSX(EuiScreenReaderOnly, null, ___EmotionJSX(\"div\", {\n      ref: focusRef,\n      tabIndex: focusRegionOnTextChange ? -1 : undefined\n    }, ___EmotionJSX(\"div\", {\n      role: role,\n      \"aria-atomic\": \"true\"\n      // Setting `aria-hidden` and setting `aria-live` to \"off\" prevents\n      // double announcements from VO when `focusRegionOnTextChange` is true\n      ,\n      \"aria-hidden\": toggle ? undefined : 'true',\n      \"aria-live\": !toggle || focusRegionOnTextChange ? 'off' : ariaLive\n    }, isActive && toggle ? children : ''), ___EmotionJSX(\"div\", {\n      role: role,\n      \"aria-atomic\": \"true\",\n      \"aria-hidden\": !toggle ? undefined : 'true',\n      \"aria-live\": toggle || focusRegionOnTextChange ? 'off' : ariaLive\n    }, isActive && !toggle ? children : '')))\n  );\n};\nEuiScreenReaderLive.propTypes = {\n  /**\n     * Whether to make screen readers aware of the content\n     */\n  isActive: PropTypes.bool,\n  /**\n     * Content for screen readers to announce\n     */\n  children: PropTypes.node,\n  /**\n     * `role` attribute for both live regions.\n     *\n     * https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Live_Regions#roles_with_implicit_live_region_attributes\n     */\n  role: PropTypes.any,\n  /**\n     * `aria-live` attribute for both live regions\n     */\n  \"aria-live\": PropTypes.any,\n  /**\n     * On `children`/text change, the region will auto-focus itself, causing screen readers\n     * to automatically read out the text content. This prop should primarily be used for\n     * navigation or page changes, where programmatically resetting focus location back to\n     * a certain part of the page is desired.\n     */\n  focusRegionOnTextChange: PropTypes.bool\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}