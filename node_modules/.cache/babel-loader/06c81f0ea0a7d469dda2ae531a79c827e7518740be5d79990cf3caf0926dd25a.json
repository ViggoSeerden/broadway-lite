{"ast":null,"code":"function _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"];\n  if (null != _i) {\n    var _s,\n      _e,\n      _x,\n      _r,\n      _arr = [],\n      _n = !0,\n      _d = !1;\n    try {\n      if (_x = (_i = _i.call(arr)).next, 0 === i) {\n        if (Object(_i) !== _i) return;\n        _n = !1;\n      } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0);\n    } catch (err) {\n      _d = !0, _e = err;\n    } finally {\n      try {\n        if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return;\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n    return _arr;\n  }\n}\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n\nimport { useMemo, useReducer } from 'react';\nimport { assertNever } from '../common';\nfunction isMouseEvent(event) {\n  return _typeof(event) === 'object' && 'pageX' in event && 'pageY' in event;\n}\nexport var pxToPercent = function pxToPercent(proportion, whole) {\n  if (whole < 1 || proportion < 0) return 0;\n  return proportion / whole * 100;\n};\nexport var sizesOnly = function sizesOnly(panelObject) {\n  return Object.values(panelObject).reduce(function (out, panel) {\n    out[panel.id] = panel.size;\n    return out;\n  }, {});\n};\nvar _getPanelMinSize = function _getPanelMinSize(panelMinSize, containerSize) {\n  var panelMinSizePercent = 0;\n  var panelMinSizeInt = parseFloat(panelMinSize);\n  if (panelMinSize.indexOf('px') > -1) {\n    panelMinSizePercent = pxToPercent(panelMinSizeInt, containerSize);\n  } else if (panelMinSize.indexOf('%') > -1) {\n    panelMinSizePercent = pxToPercent(containerSize * (panelMinSizeInt / 100), containerSize);\n  }\n  return panelMinSizePercent;\n};\nexport var getPanelMinSize = function getPanelMinSize(panelMinSize, containerSize) {\n  var paddingMin = _getPanelMinSize(panelMinSize[1], containerSize);\n  var configMin = _getPanelMinSize(panelMinSize[0], containerSize);\n  return Math.max(configMin, paddingMin);\n};\nexport var getPosition = function getPosition(event, isHorizontal) {\n  var clientX = isMouseEvent(event) ? event.clientX : event.touches[0].clientX;\n  var clientY = isMouseEvent(event) ? event.clientY : event.touches[0].clientY;\n  return isHorizontal ? clientX : clientY;\n};\nvar getSiblingPanel = function getSiblingPanel(element, adjacency) {\n  if (!element) return null;\n  var method = adjacency === 'prev' ? 'previousElementSibling' : 'nextElementSibling';\n  var sibling = element[method];\n  while (sibling) {\n    if (sibling.matches('.euiResizablePanel:not([data-collapsed])')) {\n      return sibling;\n    }\n    sibling = sibling[method];\n  }\n};\n\n// lazy initialization to prevent rerender on initial interaction\nvar init = function init(state) {\n  return state;\n};\nexport var useContainerCallbacks = function useContainerCallbacks(_ref) {\n  var initialState = _ref.initialState,\n    containerRef = _ref.containerRef,\n    onPanelWidthChange = _ref.onPanelWidthChange;\n  function reducer(state, action) {\n    var getContainerSize = function getContainerSize(isHorizontal) {\n      return isHorizontal ? containerRef.current.getBoundingClientRect().width : containerRef.current.getBoundingClientRect().height;\n    };\n    var runSideEffect = function runSideEffect(panels) {\n      if (onPanelWidthChange) {\n        onPanelWidthChange(sizesOnly(panels));\n      }\n    };\n    var withSideEffect = function withSideEffect(newState) {\n      runSideEffect(newState.panels);\n      return newState;\n    };\n    switch (action.type) {\n      case 'EUI_RESIZABLE_CONTAINER_INIT':\n        {\n          var isHorizontal = action.payload.isHorizontal;\n          return _objectSpread(_objectSpread({}, state), {}, {\n            isHorizontal: isHorizontal,\n            containerSize: getContainerSize(isHorizontal)\n          });\n        }\n      case 'EUI_RESIZABLE_PANEL_REGISTER':\n        {\n          var panel = action.payload.panel;\n          return _objectSpread(_objectSpread({}, state), {}, {\n            panels: _objectSpread(_objectSpread({}, state.panels), {}, _defineProperty({}, panel.id, panel))\n          });\n        }\n      case 'EUI_RESIZABLE_PANEL_DEREGISTER':\n        {\n          var panelId = action.payload.panelId;\n          return _objectSpread(_objectSpread({}, state), {}, {\n            panels: Object.values(state.panels).reduce(function (out, panel) {\n              if (panel.id !== panelId) {\n                out[panel.id] = panel;\n              }\n              return out;\n            }, {})\n          });\n        }\n      case 'EUI_RESIZABLE_BUTTON_REGISTER':\n        {\n          var resizer = action.payload.resizer;\n          return _objectSpread(_objectSpread({}, state), {}, {\n            resizers: _objectSpread(_objectSpread({}, state.resizers), {}, _defineProperty({}, resizer.id, resizer))\n          });\n        }\n      case 'EUI_RESIZABLE_BUTTON_DEREGISTER':\n        {\n          var resizerId = action.payload.resizerId;\n          return _objectSpread(_objectSpread({}, state), {}, {\n            resizers: Object.values(state.resizers).reduce(function (out, panel) {\n              if (panel.id !== resizerId) {\n                out[panel.id] = panel;\n              }\n              return out;\n            }, {})\n          });\n        }\n      case 'EUI_RESIZABLE_DRAG_START':\n        {\n          var _action$payload = action.payload,\n            position = _action$payload.position,\n            prevPanelId = _action$payload.prevPanelId,\n            nextPanelId = _action$payload.nextPanelId;\n          return _objectSpread(_objectSpread({}, state), {}, {\n            isDragging: true,\n            currentResizerPos: position,\n            prevPanelId: prevPanelId,\n            nextPanelId: nextPanelId\n          });\n        }\n      case 'EUI_RESIZABLE_DRAG_MOVE':\n        {\n          if (!state.isDragging) {\n            return state;\n          }\n          var _action$payload2 = action.payload,\n            _position = _action$payload2.position,\n            _prevPanelId = _action$payload2.prevPanelId,\n            _nextPanelId = _action$payload2.nextPanelId;\n          var prevPanel = state.panels[_prevPanelId];\n          var nextPanel = state.panels[_nextPanelId];\n          var delta = _position - state.currentResizerPos;\n          var prevPanelMin = getPanelMinSize(prevPanel.minSize, state.containerSize);\n          var nextPanelMin = getPanelMinSize(nextPanel.minSize, state.containerSize);\n          var prevPanelSize = pxToPercent(prevPanel.getSizePx() + delta, state.containerSize);\n          var nextPanelSize = pxToPercent(nextPanel.getSizePx() - delta, state.containerSize);\n          if (prevPanelSize >= prevPanelMin && nextPanelSize >= nextPanelMin) {\n            var _objectSpread4;\n            return withSideEffect(_objectSpread(_objectSpread({}, state), {}, {\n              currentResizerPos: _position,\n              panels: _objectSpread(_objectSpread({}, state.panels), {}, (_objectSpread4 = {}, _defineProperty(_objectSpread4, _prevPanelId, _objectSpread(_objectSpread({}, state.panels[_prevPanelId]), {}, {\n                size: prevPanelSize\n              })), _defineProperty(_objectSpread4, _nextPanelId, _objectSpread(_objectSpread({}, state.panels[_nextPanelId]), {}, {\n                size: nextPanelSize\n              })), _objectSpread4))\n            }));\n          }\n          return state;\n        }\n      case 'EUI_RESIZABLE_KEY_MOVE':\n        {\n          var _action$payload3 = action.payload,\n            _prevPanelId2 = _action$payload3.prevPanelId,\n            _nextPanelId2 = _action$payload3.nextPanelId,\n            direction = _action$payload3.direction;\n          var _prevPanel = state.panels[_prevPanelId2];\n          var _nextPanel = state.panels[_nextPanelId2];\n          var _prevPanelMin = getPanelMinSize(_prevPanel.minSize, state.containerSize);\n          var _nextPanelMin = getPanelMinSize(_nextPanel.minSize, state.containerSize);\n          var _prevPanelSize = pxToPercent(_prevPanel.getSizePx() - (direction === 'backward' ? 10 : -10), state.containerSize);\n          var _nextPanelSize = pxToPercent(_nextPanel.getSizePx() - (direction === 'forward' ? 10 : -10), state.containerSize);\n          if (_prevPanelSize >= _prevPanelMin && _nextPanelSize >= _nextPanelMin) {\n            var _objectSpread5;\n            return withSideEffect(_objectSpread(_objectSpread({}, state), {}, {\n              isDragging: false,\n              panels: _objectSpread(_objectSpread({}, state.panels), {}, (_objectSpread5 = {}, _defineProperty(_objectSpread5, _prevPanelId2, _objectSpread(_objectSpread({}, state.panels[_prevPanelId2]), {}, {\n                size: _prevPanelSize\n              })), _defineProperty(_objectSpread5, _nextPanelId2, _objectSpread(_objectSpread({}, state.panels[_nextPanelId2]), {}, {\n                size: _nextPanelSize\n              })), _objectSpread5))\n            }));\n          }\n          return state;\n        }\n      case 'EUI_RESIZABLE_TOGGLE':\n        {\n          var _action$payload4 = action.payload,\n            options = _action$payload4.options,\n            currentPanelId = _action$payload4.panelId;\n          var currentPanel = state.panels[currentPanelId];\n          var shouldCollapse = !currentPanel.isCollapsed;\n          var panelElement = document.getElementById(currentPanelId);\n          var prevResizer = panelElement.previousElementSibling;\n          var _prevPanel2 = prevResizer ? prevResizer.previousElementSibling : null;\n          var nextResizer = panelElement.nextElementSibling;\n          var _nextPanel2 = nextResizer ? nextResizer.nextElementSibling : null;\n          var resizersToDisable = {};\n          if (prevResizer && _prevPanel2) {\n            resizersToDisable[prevResizer.id] = state.panels[_prevPanel2.id].isCollapsed ? true : shouldCollapse;\n          }\n          if (nextResizer && _nextPanel2) {\n            resizersToDisable[nextResizer.id] = state.panels[_nextPanel2.id].isCollapsed ? true : shouldCollapse;\n          }\n          var otherPanels = {};\n          if (_prevPanel2 && !state.panels[_prevPanel2.id].isCollapsed && options.direction === 'right') {\n            otherPanels[_prevPanel2.id] = state.panels[_prevPanel2.id];\n          }\n          if (_nextPanel2 && !state.panels[_nextPanel2.id].isCollapsed && options.direction === 'left') {\n            otherPanels[_nextPanel2.id] = state.panels[_nextPanel2.id];\n          }\n          var siblings = Object.keys(otherPanels).length;\n\n          // A toggling sequence has occurred where an immediate sibling panel\n          // has not been found. We need to move more broadly through the DOM\n          // to find the next most suitable panel or space affordance.\n          // Can only occur when multiple immediate sibling panels are collapsed.\n          if (!siblings) {\n            var maybePrevPanel = getSiblingPanel(panelElement, 'prev');\n            var maybeNextPanel = getSiblingPanel(panelElement, 'next');\n            var validPrevPanel = maybePrevPanel ? state.panels[maybePrevPanel.id] : null;\n            var validNextPanel = maybeNextPanel ? state.panels[maybeNextPanel.id] : null;\n            // Intentional, preferential redistribution order\n            if (validPrevPanel && options.direction === 'right') {\n              otherPanels[validPrevPanel.id] = validPrevPanel;\n            } else if (validNextPanel && options.direction === 'left') {\n              otherPanels[validNextPanel.id] = validNextPanel;\n            } else {\n              if (validPrevPanel) otherPanels[validPrevPanel.id] = validPrevPanel;\n              if (validNextPanel) otherPanels[validNextPanel.id] = validNextPanel;\n            }\n            siblings = Object.keys(otherPanels).length;\n          }\n          var newPanelSize = shouldCollapse ? pxToPercent(!currentPanel.mode ? 0 : 24,\n          // size of the default toggle button\n          state.containerSize) : currentPanel.prevSize;\n          var _delta = shouldCollapse ? (currentPanel.size - newPanelSize) / siblings : (newPanelSize - currentPanel.size) / siblings * -1;\n          var collapsedPanelsSize = Object.values(state.panels).reduce(function (sum, panel) {\n            if (panel.id !== currentPanelId && panel.isCollapsed) {\n              sum += panel.size;\n            }\n            return sum;\n          }, 0);\n\n          // A toggling sequence has occurred where a to-be-opened panel will\n          // become the only open panel. Rather than reopen to its previous\n          // size, give it the full width, less size occupied by collapsed panels.\n          // Can only occur with external toggling.\n          if (!shouldCollapse && !siblings) {\n            newPanelSize = 100 - collapsedPanelsSize;\n          }\n          var updatedPanels = {};\n          if (_delta < 0 && Object.values(otherPanels).some(function (panel) {\n            return panel.size + _delta < getPanelMinSize(panel.minSize, state.containerSize);\n          })) {\n            // A toggling sequence has occurred where a to-be-opened panel is\n            // requesting more space than its logical sibling panel can afford.\n            // Rather than choose another single panel to sacrifice space,\n            // or try to pull proportionally from all availble panels\n            // (neither of which is guaranteed to prevent negative resulting widths),\n            // or attempt something even more complex,\n            // we redistribute _all_ space evenly to non-collapsed panels\n            // as something of a reset.\n            // This situation can only occur when (n-1) panels are collapsed at once\n            // and the most recently collapsed panel gains significant width\n            // during the previously occurring collapse.\n            // That is (largely), external toggling where the default logic has\n            // been negated by the lack of panel mode distinction.\n            otherPanels = Object.values(state.panels).reduce(function (out, panel) {\n              if (panel.id !== currentPanelId && !panel.isCollapsed) {\n                out[panel.id] = _objectSpread({}, panel);\n              }\n              return out;\n            }, {});\n            newPanelSize = (100 - collapsedPanelsSize) / (Object.keys(otherPanels).length + 1);\n            updatedPanels = Object.values(otherPanels).reduce(function (out, panel) {\n              out[panel.id] = _objectSpread(_objectSpread({}, panel), {}, {\n                size: newPanelSize\n              });\n              return out;\n            }, {});\n          } else {\n            // A toggling sequence has occurred that is standard and predictable\n            updatedPanels = Object.values(otherPanels).reduce(function (out, panel) {\n              out[panel.id] = _objectSpread(_objectSpread({}, panel), {}, {\n                size: panel.size + _delta\n              });\n              return out;\n            }, {});\n          }\n          return withSideEffect(_objectSpread(_objectSpread({}, state), {}, {\n            panels: _objectSpread(_objectSpread(_objectSpread({}, state.panels), updatedPanels), {}, _defineProperty({}, currentPanelId, _objectSpread(_objectSpread({}, state.panels[currentPanelId]), {}, {\n              size: newPanelSize,\n              isCollapsed: shouldCollapse,\n              prevSize: shouldCollapse ? currentPanel.size : newPanelSize\n            }))),\n            resizers: Object.values(state.resizers).reduce(function (out, resizer) {\n              var _resizersToDisable$re;\n              out[resizer.id] = _objectSpread(_objectSpread({}, resizer), {}, {\n                isFocused: false,\n                isDisabled: (_resizersToDisable$re = resizersToDisable[resizer.id]) !== null && _resizersToDisable$re !== void 0 ? _resizersToDisable$re : resizer.isDisabled\n              });\n              return out;\n            }, {})\n          }));\n        }\n      case 'EUI_RESIZABLE_BUTTON_FOCUS':\n        {\n          var _resizerId = action.payload.resizerId;\n          return _objectSpread(_objectSpread({}, state), {}, {\n            resizers: Object.values(state.resizers).reduce(function (out, resizer) {\n              out[resizer.id] = _objectSpread(_objectSpread({}, resizer), {}, {\n                isFocused: resizer.id === _resizerId\n              });\n              return out;\n            }, {})\n          });\n        }\n      case 'EUI_RESIZABLE_BUTTON_BLUR':\n        {\n          return _objectSpread(_objectSpread({}, state), {}, {\n            resizers: Object.values(state.resizers).reduce(function (out, resizer) {\n              out[resizer.id] = _objectSpread(_objectSpread({}, resizer), {}, {\n                isFocused: false\n              });\n              return out;\n            }, {})\n          });\n        }\n      case 'EUI_RESIZABLE_RESET':\n        {\n          return _objectSpread(_objectSpread({}, initialState), {}, {\n            panels: state.panels,\n            resizers: state.resizers,\n            containerSize: state.containerSize\n          });\n        }\n      case 'EUI_RESIZABLE_ONCHANGE':\n        {\n          onPanelWidthChange(sizesOnly(state.panels));\n          return state;\n        }\n      // TODO: Implement more generic version of\n      // 'EUI_RESIZABLE_DRAG_MOVE' to expose to consumers\n      case 'EUI_RESIZABLE_RESIZE':\n        {\n          return state;\n        }\n      default:\n        assertNever(action);\n        return state;\n    }\n  }\n  var _useReducer = useReducer(reducer, initialState, init),\n    _useReducer2 = _slicedToArray(_useReducer, 2),\n    reducerState = _useReducer2[0],\n    dispatch = _useReducer2[1];\n  var actions = useMemo(function () {\n    return {\n      reset: function reset() {\n        return dispatch({\n          type: 'EUI_RESIZABLE_RESET'\n        });\n      },\n      initContainer: function initContainer(isHorizontal) {\n        return dispatch({\n          type: 'EUI_RESIZABLE_CONTAINER_INIT',\n          payload: {\n            isHorizontal: isHorizontal\n          }\n        });\n      },\n      registerPanel: function registerPanel(panel) {\n        return dispatch({\n          type: 'EUI_RESIZABLE_PANEL_REGISTER',\n          payload: {\n            panel: panel\n          }\n        });\n      },\n      deregisterPanel: function deregisterPanel(panelId) {\n        return dispatch({\n          type: 'EUI_RESIZABLE_PANEL_DEREGISTER',\n          payload: {\n            panelId: panelId\n          }\n        });\n      },\n      registerResizer: function registerResizer(resizer) {\n        return dispatch({\n          type: 'EUI_RESIZABLE_BUTTON_REGISTER',\n          payload: {\n            resizer: resizer\n          }\n        });\n      },\n      deregisterResizer: function deregisterResizer(resizerId) {\n        return dispatch({\n          type: 'EUI_RESIZABLE_BUTTON_DEREGISTER',\n          payload: {\n            resizerId: resizerId\n          }\n        });\n      },\n      dragStart: function dragStart(_ref2) {\n        var prevPanelId = _ref2.prevPanelId,\n          nextPanelId = _ref2.nextPanelId,\n          position = _ref2.position;\n        return dispatch({\n          type: 'EUI_RESIZABLE_DRAG_START',\n          payload: {\n            position: position,\n            prevPanelId: prevPanelId,\n            nextPanelId: nextPanelId\n          }\n        });\n      },\n      dragMove: function dragMove(_ref3) {\n        var prevPanelId = _ref3.prevPanelId,\n          nextPanelId = _ref3.nextPanelId,\n          position = _ref3.position;\n        return dispatch({\n          type: 'EUI_RESIZABLE_DRAG_MOVE',\n          payload: {\n            position: position,\n            prevPanelId: prevPanelId,\n            nextPanelId: nextPanelId\n          }\n        });\n      },\n      keyMove: function keyMove(_ref4) {\n        var prevPanelId = _ref4.prevPanelId,\n          nextPanelId = _ref4.nextPanelId,\n          direction = _ref4.direction;\n        return dispatch({\n          type: 'EUI_RESIZABLE_KEY_MOVE',\n          payload: {\n            prevPanelId: prevPanelId,\n            nextPanelId: nextPanelId,\n            direction: direction\n          }\n        });\n      },\n      togglePanel: function togglePanel(panelId, options) {\n        return dispatch({\n          type: 'EUI_RESIZABLE_TOGGLE',\n          payload: {\n            panelId: panelId,\n            options: options\n          }\n        });\n      },\n      resizerFocus: function resizerFocus(resizerId) {\n        return dispatch({\n          type: 'EUI_RESIZABLE_BUTTON_FOCUS',\n          payload: {\n            resizerId: resizerId\n          }\n        });\n      },\n      resizerBlur: function resizerBlur() {\n        return dispatch({\n          type: 'EUI_RESIZABLE_BUTTON_BLUR'\n        });\n      }\n    };\n  }, []);\n  return [actions, reducerState];\n};","map":{"version":3,"names":["_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","TypeError","o","minLen","_arrayLikeToArray","n","Object","prototype","toString","call","slice","constructor","name","Array","from","test","len","length","arr2","_i","Symbol","iterator","_s","_e","_x","_r","_arr","_n","_d","next","done","push","value","err","return","isArray","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","apply","_objectSpread","target","arguments","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","_toPropertyKey","configurable","writable","arg","_toPrimitive","_typeof","String","input","hint","prim","toPrimitive","undefined","res","Number","useMemo","useReducer","assertNever","isMouseEvent","event","pxToPercent","proportion","whole","sizesOnly","panelObject","values","reduce","out","panel","id","size","_getPanelMinSize","panelMinSize","containerSize","panelMinSizePercent","panelMinSizeInt","parseFloat","indexOf","getPanelMinSize","paddingMin","configMin","Math","max","getPosition","isHorizontal","clientX","touches","clientY","getSiblingPanel","element","adjacency","method","sibling","matches","init","state","useContainerCallbacks","_ref","initialState","containerRef","onPanelWidthChange","reducer","action","getContainerSize","current","getBoundingClientRect","width","height","runSideEffect","panels","withSideEffect","newState","type","payload","panelId","resizer","resizers","resizerId","_action$payload","position","prevPanelId","nextPanelId","isDragging","currentResizerPos","_action$payload2","_position","_prevPanelId","_nextPanelId","prevPanel","nextPanel","delta","prevPanelMin","minSize","nextPanelMin","prevPanelSize","getSizePx","nextPanelSize","_objectSpread4","_action$payload3","_prevPanelId2","_nextPanelId2","direction","_prevPanel","_nextPanel","_prevPanelMin","_nextPanelMin","_prevPanelSize","_nextPanelSize","_objectSpread5","_action$payload4","options","currentPanelId","currentPanel","shouldCollapse","isCollapsed","panelElement","document","getElementById","prevResizer","previousElementSibling","_prevPanel2","nextResizer","nextElementSibling","_nextPanel2","resizersToDisable","otherPanels","siblings","maybePrevPanel","maybeNextPanel","validPrevPanel","validNextPanel","newPanelSize","mode","prevSize","_delta","collapsedPanelsSize","sum","updatedPanels","some","_resizersToDisable$re","isFocused","isDisabled","_resizerId","_useReducer","_useReducer2","reducerState","dispatch","actions","reset","initContainer","registerPanel","deregisterPanel","registerResizer","deregisterResizer","dragStart","_ref2","dragMove","_ref3","keyMove","_ref4","togglePanel","resizerFocus","resizerBlur"],"sources":["/home/runner/work/broadway-lite/broadway-lite/node_modules/@elastic/eui/es/components/resizable_container/helpers.js"],"sourcesContent":["function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n\nimport { useMemo, useReducer } from 'react';\nimport { assertNever } from '../common';\nfunction isMouseEvent(event) {\n  return _typeof(event) === 'object' && 'pageX' in event && 'pageY' in event;\n}\nexport var pxToPercent = function pxToPercent(proportion, whole) {\n  if (whole < 1 || proportion < 0) return 0;\n  return proportion / whole * 100;\n};\nexport var sizesOnly = function sizesOnly(panelObject) {\n  return Object.values(panelObject).reduce(function (out, panel) {\n    out[panel.id] = panel.size;\n    return out;\n  }, {});\n};\nvar _getPanelMinSize = function _getPanelMinSize(panelMinSize, containerSize) {\n  var panelMinSizePercent = 0;\n  var panelMinSizeInt = parseFloat(panelMinSize);\n  if (panelMinSize.indexOf('px') > -1) {\n    panelMinSizePercent = pxToPercent(panelMinSizeInt, containerSize);\n  } else if (panelMinSize.indexOf('%') > -1) {\n    panelMinSizePercent = pxToPercent(containerSize * (panelMinSizeInt / 100), containerSize);\n  }\n  return panelMinSizePercent;\n};\nexport var getPanelMinSize = function getPanelMinSize(panelMinSize, containerSize) {\n  var paddingMin = _getPanelMinSize(panelMinSize[1], containerSize);\n  var configMin = _getPanelMinSize(panelMinSize[0], containerSize);\n  return Math.max(configMin, paddingMin);\n};\nexport var getPosition = function getPosition(event, isHorizontal) {\n  var clientX = isMouseEvent(event) ? event.clientX : event.touches[0].clientX;\n  var clientY = isMouseEvent(event) ? event.clientY : event.touches[0].clientY;\n  return isHorizontal ? clientX : clientY;\n};\nvar getSiblingPanel = function getSiblingPanel(element, adjacency) {\n  if (!element) return null;\n  var method = adjacency === 'prev' ? 'previousElementSibling' : 'nextElementSibling';\n  var sibling = element[method];\n  while (sibling) {\n    if (sibling.matches('.euiResizablePanel:not([data-collapsed])')) {\n      return sibling;\n    }\n    sibling = sibling[method];\n  }\n};\n\n// lazy initialization to prevent rerender on initial interaction\nvar init = function init(state) {\n  return state;\n};\nexport var useContainerCallbacks = function useContainerCallbacks(_ref) {\n  var initialState = _ref.initialState,\n    containerRef = _ref.containerRef,\n    onPanelWidthChange = _ref.onPanelWidthChange;\n  function reducer(state, action) {\n    var getContainerSize = function getContainerSize(isHorizontal) {\n      return isHorizontal ? containerRef.current.getBoundingClientRect().width : containerRef.current.getBoundingClientRect().height;\n    };\n    var runSideEffect = function runSideEffect(panels) {\n      if (onPanelWidthChange) {\n        onPanelWidthChange(sizesOnly(panels));\n      }\n    };\n    var withSideEffect = function withSideEffect(newState) {\n      runSideEffect(newState.panels);\n      return newState;\n    };\n    switch (action.type) {\n      case 'EUI_RESIZABLE_CONTAINER_INIT':\n        {\n          var isHorizontal = action.payload.isHorizontal;\n          return _objectSpread(_objectSpread({}, state), {}, {\n            isHorizontal: isHorizontal,\n            containerSize: getContainerSize(isHorizontal)\n          });\n        }\n      case 'EUI_RESIZABLE_PANEL_REGISTER':\n        {\n          var panel = action.payload.panel;\n          return _objectSpread(_objectSpread({}, state), {}, {\n            panels: _objectSpread(_objectSpread({}, state.panels), {}, _defineProperty({}, panel.id, panel))\n          });\n        }\n      case 'EUI_RESIZABLE_PANEL_DEREGISTER':\n        {\n          var panelId = action.payload.panelId;\n          return _objectSpread(_objectSpread({}, state), {}, {\n            panels: Object.values(state.panels).reduce(function (out, panel) {\n              if (panel.id !== panelId) {\n                out[panel.id] = panel;\n              }\n              return out;\n            }, {})\n          });\n        }\n      case 'EUI_RESIZABLE_BUTTON_REGISTER':\n        {\n          var resizer = action.payload.resizer;\n          return _objectSpread(_objectSpread({}, state), {}, {\n            resizers: _objectSpread(_objectSpread({}, state.resizers), {}, _defineProperty({}, resizer.id, resizer))\n          });\n        }\n      case 'EUI_RESIZABLE_BUTTON_DEREGISTER':\n        {\n          var resizerId = action.payload.resizerId;\n          return _objectSpread(_objectSpread({}, state), {}, {\n            resizers: Object.values(state.resizers).reduce(function (out, panel) {\n              if (panel.id !== resizerId) {\n                out[panel.id] = panel;\n              }\n              return out;\n            }, {})\n          });\n        }\n      case 'EUI_RESIZABLE_DRAG_START':\n        {\n          var _action$payload = action.payload,\n            position = _action$payload.position,\n            prevPanelId = _action$payload.prevPanelId,\n            nextPanelId = _action$payload.nextPanelId;\n          return _objectSpread(_objectSpread({}, state), {}, {\n            isDragging: true,\n            currentResizerPos: position,\n            prevPanelId: prevPanelId,\n            nextPanelId: nextPanelId\n          });\n        }\n      case 'EUI_RESIZABLE_DRAG_MOVE':\n        {\n          if (!state.isDragging) {\n            return state;\n          }\n          var _action$payload2 = action.payload,\n            _position = _action$payload2.position,\n            _prevPanelId = _action$payload2.prevPanelId,\n            _nextPanelId = _action$payload2.nextPanelId;\n          var prevPanel = state.panels[_prevPanelId];\n          var nextPanel = state.panels[_nextPanelId];\n          var delta = _position - state.currentResizerPos;\n          var prevPanelMin = getPanelMinSize(prevPanel.minSize, state.containerSize);\n          var nextPanelMin = getPanelMinSize(nextPanel.minSize, state.containerSize);\n          var prevPanelSize = pxToPercent(prevPanel.getSizePx() + delta, state.containerSize);\n          var nextPanelSize = pxToPercent(nextPanel.getSizePx() - delta, state.containerSize);\n          if (prevPanelSize >= prevPanelMin && nextPanelSize >= nextPanelMin) {\n            var _objectSpread4;\n            return withSideEffect(_objectSpread(_objectSpread({}, state), {}, {\n              currentResizerPos: _position,\n              panels: _objectSpread(_objectSpread({}, state.panels), {}, (_objectSpread4 = {}, _defineProperty(_objectSpread4, _prevPanelId, _objectSpread(_objectSpread({}, state.panels[_prevPanelId]), {}, {\n                size: prevPanelSize\n              })), _defineProperty(_objectSpread4, _nextPanelId, _objectSpread(_objectSpread({}, state.panels[_nextPanelId]), {}, {\n                size: nextPanelSize\n              })), _objectSpread4))\n            }));\n          }\n          return state;\n        }\n      case 'EUI_RESIZABLE_KEY_MOVE':\n        {\n          var _action$payload3 = action.payload,\n            _prevPanelId2 = _action$payload3.prevPanelId,\n            _nextPanelId2 = _action$payload3.nextPanelId,\n            direction = _action$payload3.direction;\n          var _prevPanel = state.panels[_prevPanelId2];\n          var _nextPanel = state.panels[_nextPanelId2];\n          var _prevPanelMin = getPanelMinSize(_prevPanel.minSize, state.containerSize);\n          var _nextPanelMin = getPanelMinSize(_nextPanel.minSize, state.containerSize);\n          var _prevPanelSize = pxToPercent(_prevPanel.getSizePx() - (direction === 'backward' ? 10 : -10), state.containerSize);\n          var _nextPanelSize = pxToPercent(_nextPanel.getSizePx() - (direction === 'forward' ? 10 : -10), state.containerSize);\n          if (_prevPanelSize >= _prevPanelMin && _nextPanelSize >= _nextPanelMin) {\n            var _objectSpread5;\n            return withSideEffect(_objectSpread(_objectSpread({}, state), {}, {\n              isDragging: false,\n              panels: _objectSpread(_objectSpread({}, state.panels), {}, (_objectSpread5 = {}, _defineProperty(_objectSpread5, _prevPanelId2, _objectSpread(_objectSpread({}, state.panels[_prevPanelId2]), {}, {\n                size: _prevPanelSize\n              })), _defineProperty(_objectSpread5, _nextPanelId2, _objectSpread(_objectSpread({}, state.panels[_nextPanelId2]), {}, {\n                size: _nextPanelSize\n              })), _objectSpread5))\n            }));\n          }\n          return state;\n        }\n      case 'EUI_RESIZABLE_TOGGLE':\n        {\n          var _action$payload4 = action.payload,\n            options = _action$payload4.options,\n            currentPanelId = _action$payload4.panelId;\n          var currentPanel = state.panels[currentPanelId];\n          var shouldCollapse = !currentPanel.isCollapsed;\n          var panelElement = document.getElementById(currentPanelId);\n          var prevResizer = panelElement.previousElementSibling;\n          var _prevPanel2 = prevResizer ? prevResizer.previousElementSibling : null;\n          var nextResizer = panelElement.nextElementSibling;\n          var _nextPanel2 = nextResizer ? nextResizer.nextElementSibling : null;\n          var resizersToDisable = {};\n          if (prevResizer && _prevPanel2) {\n            resizersToDisable[prevResizer.id] = state.panels[_prevPanel2.id].isCollapsed ? true : shouldCollapse;\n          }\n          if (nextResizer && _nextPanel2) {\n            resizersToDisable[nextResizer.id] = state.panels[_nextPanel2.id].isCollapsed ? true : shouldCollapse;\n          }\n          var otherPanels = {};\n          if (_prevPanel2 && !state.panels[_prevPanel2.id].isCollapsed && options.direction === 'right') {\n            otherPanels[_prevPanel2.id] = state.panels[_prevPanel2.id];\n          }\n          if (_nextPanel2 && !state.panels[_nextPanel2.id].isCollapsed && options.direction === 'left') {\n            otherPanels[_nextPanel2.id] = state.panels[_nextPanel2.id];\n          }\n          var siblings = Object.keys(otherPanels).length;\n\n          // A toggling sequence has occurred where an immediate sibling panel\n          // has not been found. We need to move more broadly through the DOM\n          // to find the next most suitable panel or space affordance.\n          // Can only occur when multiple immediate sibling panels are collapsed.\n          if (!siblings) {\n            var maybePrevPanel = getSiblingPanel(panelElement, 'prev');\n            var maybeNextPanel = getSiblingPanel(panelElement, 'next');\n            var validPrevPanel = maybePrevPanel ? state.panels[maybePrevPanel.id] : null;\n            var validNextPanel = maybeNextPanel ? state.panels[maybeNextPanel.id] : null;\n            // Intentional, preferential redistribution order\n            if (validPrevPanel && options.direction === 'right') {\n              otherPanels[validPrevPanel.id] = validPrevPanel;\n            } else if (validNextPanel && options.direction === 'left') {\n              otherPanels[validNextPanel.id] = validNextPanel;\n            } else {\n              if (validPrevPanel) otherPanels[validPrevPanel.id] = validPrevPanel;\n              if (validNextPanel) otherPanels[validNextPanel.id] = validNextPanel;\n            }\n            siblings = Object.keys(otherPanels).length;\n          }\n          var newPanelSize = shouldCollapse ? pxToPercent(!currentPanel.mode ? 0 : 24,\n          // size of the default toggle button\n          state.containerSize) : currentPanel.prevSize;\n          var _delta = shouldCollapse ? (currentPanel.size - newPanelSize) / siblings : (newPanelSize - currentPanel.size) / siblings * -1;\n          var collapsedPanelsSize = Object.values(state.panels).reduce(function (sum, panel) {\n            if (panel.id !== currentPanelId && panel.isCollapsed) {\n              sum += panel.size;\n            }\n            return sum;\n          }, 0);\n\n          // A toggling sequence has occurred where a to-be-opened panel will\n          // become the only open panel. Rather than reopen to its previous\n          // size, give it the full width, less size occupied by collapsed panels.\n          // Can only occur with external toggling.\n          if (!shouldCollapse && !siblings) {\n            newPanelSize = 100 - collapsedPanelsSize;\n          }\n          var updatedPanels = {};\n          if (_delta < 0 && Object.values(otherPanels).some(function (panel) {\n            return panel.size + _delta < getPanelMinSize(panel.minSize, state.containerSize);\n          })) {\n            // A toggling sequence has occurred where a to-be-opened panel is\n            // requesting more space than its logical sibling panel can afford.\n            // Rather than choose another single panel to sacrifice space,\n            // or try to pull proportionally from all availble panels\n            // (neither of which is guaranteed to prevent negative resulting widths),\n            // or attempt something even more complex,\n            // we redistribute _all_ space evenly to non-collapsed panels\n            // as something of a reset.\n            // This situation can only occur when (n-1) panels are collapsed at once\n            // and the most recently collapsed panel gains significant width\n            // during the previously occurring collapse.\n            // That is (largely), external toggling where the default logic has\n            // been negated by the lack of panel mode distinction.\n            otherPanels = Object.values(state.panels).reduce(function (out, panel) {\n              if (panel.id !== currentPanelId && !panel.isCollapsed) {\n                out[panel.id] = _objectSpread({}, panel);\n              }\n              return out;\n            }, {});\n            newPanelSize = (100 - collapsedPanelsSize) / (Object.keys(otherPanels).length + 1);\n            updatedPanels = Object.values(otherPanels).reduce(function (out, panel) {\n              out[panel.id] = _objectSpread(_objectSpread({}, panel), {}, {\n                size: newPanelSize\n              });\n              return out;\n            }, {});\n          } else {\n            // A toggling sequence has occurred that is standard and predictable\n            updatedPanels = Object.values(otherPanels).reduce(function (out, panel) {\n              out[panel.id] = _objectSpread(_objectSpread({}, panel), {}, {\n                size: panel.size + _delta\n              });\n              return out;\n            }, {});\n          }\n          return withSideEffect(_objectSpread(_objectSpread({}, state), {}, {\n            panels: _objectSpread(_objectSpread(_objectSpread({}, state.panels), updatedPanels), {}, _defineProperty({}, currentPanelId, _objectSpread(_objectSpread({}, state.panels[currentPanelId]), {}, {\n              size: newPanelSize,\n              isCollapsed: shouldCollapse,\n              prevSize: shouldCollapse ? currentPanel.size : newPanelSize\n            }))),\n            resizers: Object.values(state.resizers).reduce(function (out, resizer) {\n              var _resizersToDisable$re;\n              out[resizer.id] = _objectSpread(_objectSpread({}, resizer), {}, {\n                isFocused: false,\n                isDisabled: (_resizersToDisable$re = resizersToDisable[resizer.id]) !== null && _resizersToDisable$re !== void 0 ? _resizersToDisable$re : resizer.isDisabled\n              });\n              return out;\n            }, {})\n          }));\n        }\n      case 'EUI_RESIZABLE_BUTTON_FOCUS':\n        {\n          var _resizerId = action.payload.resizerId;\n          return _objectSpread(_objectSpread({}, state), {}, {\n            resizers: Object.values(state.resizers).reduce(function (out, resizer) {\n              out[resizer.id] = _objectSpread(_objectSpread({}, resizer), {}, {\n                isFocused: resizer.id === _resizerId\n              });\n              return out;\n            }, {})\n          });\n        }\n      case 'EUI_RESIZABLE_BUTTON_BLUR':\n        {\n          return _objectSpread(_objectSpread({}, state), {}, {\n            resizers: Object.values(state.resizers).reduce(function (out, resizer) {\n              out[resizer.id] = _objectSpread(_objectSpread({}, resizer), {}, {\n                isFocused: false\n              });\n              return out;\n            }, {})\n          });\n        }\n      case 'EUI_RESIZABLE_RESET':\n        {\n          return _objectSpread(_objectSpread({}, initialState), {}, {\n            panels: state.panels,\n            resizers: state.resizers,\n            containerSize: state.containerSize\n          });\n        }\n      case 'EUI_RESIZABLE_ONCHANGE':\n        {\n          onPanelWidthChange(sizesOnly(state.panels));\n          return state;\n        }\n      // TODO: Implement more generic version of\n      // 'EUI_RESIZABLE_DRAG_MOVE' to expose to consumers\n      case 'EUI_RESIZABLE_RESIZE':\n        {\n          return state;\n        }\n      default:\n        assertNever(action);\n        return state;\n    }\n  }\n  var _useReducer = useReducer(reducer, initialState, init),\n    _useReducer2 = _slicedToArray(_useReducer, 2),\n    reducerState = _useReducer2[0],\n    dispatch = _useReducer2[1];\n  var actions = useMemo(function () {\n    return {\n      reset: function reset() {\n        return dispatch({\n          type: 'EUI_RESIZABLE_RESET'\n        });\n      },\n      initContainer: function initContainer(isHorizontal) {\n        return dispatch({\n          type: 'EUI_RESIZABLE_CONTAINER_INIT',\n          payload: {\n            isHorizontal: isHorizontal\n          }\n        });\n      },\n      registerPanel: function registerPanel(panel) {\n        return dispatch({\n          type: 'EUI_RESIZABLE_PANEL_REGISTER',\n          payload: {\n            panel: panel\n          }\n        });\n      },\n      deregisterPanel: function deregisterPanel(panelId) {\n        return dispatch({\n          type: 'EUI_RESIZABLE_PANEL_DEREGISTER',\n          payload: {\n            panelId: panelId\n          }\n        });\n      },\n      registerResizer: function registerResizer(resizer) {\n        return dispatch({\n          type: 'EUI_RESIZABLE_BUTTON_REGISTER',\n          payload: {\n            resizer: resizer\n          }\n        });\n      },\n      deregisterResizer: function deregisterResizer(resizerId) {\n        return dispatch({\n          type: 'EUI_RESIZABLE_BUTTON_DEREGISTER',\n          payload: {\n            resizerId: resizerId\n          }\n        });\n      },\n      dragStart: function dragStart(_ref2) {\n        var prevPanelId = _ref2.prevPanelId,\n          nextPanelId = _ref2.nextPanelId,\n          position = _ref2.position;\n        return dispatch({\n          type: 'EUI_RESIZABLE_DRAG_START',\n          payload: {\n            position: position,\n            prevPanelId: prevPanelId,\n            nextPanelId: nextPanelId\n          }\n        });\n      },\n      dragMove: function dragMove(_ref3) {\n        var prevPanelId = _ref3.prevPanelId,\n          nextPanelId = _ref3.nextPanelId,\n          position = _ref3.position;\n        return dispatch({\n          type: 'EUI_RESIZABLE_DRAG_MOVE',\n          payload: {\n            position: position,\n            prevPanelId: prevPanelId,\n            nextPanelId: nextPanelId\n          }\n        });\n      },\n      keyMove: function keyMove(_ref4) {\n        var prevPanelId = _ref4.prevPanelId,\n          nextPanelId = _ref4.nextPanelId,\n          direction = _ref4.direction;\n        return dispatch({\n          type: 'EUI_RESIZABLE_KEY_MOVE',\n          payload: {\n            prevPanelId: prevPanelId,\n            nextPanelId: nextPanelId,\n            direction: direction\n          }\n        });\n      },\n      togglePanel: function togglePanel(panelId, options) {\n        return dispatch({\n          type: 'EUI_RESIZABLE_TOGGLE',\n          payload: {\n            panelId: panelId,\n            options: options\n          }\n        });\n      },\n      resizerFocus: function resizerFocus(resizerId) {\n        return dispatch({\n          type: 'EUI_RESIZABLE_BUTTON_FOCUS',\n          payload: {\n            resizerId: resizerId\n          }\n        });\n      },\n      resizerBlur: function resizerBlur() {\n        return dispatch({\n          type: 'EUI_RESIZABLE_BUTTON_BLUR'\n        });\n      }\n    };\n  }, []);\n  return [actions, reducerState];\n};"],"mappings":"AAAA,SAASA,cAAcA,CAACC,GAAG,EAAEC,CAAC,EAAE;EAAE,OAAOC,eAAe,CAACF,GAAG,CAAC,IAAIG,qBAAqB,CAACH,GAAG,EAAEC,CAAC,CAAC,IAAIG,2BAA2B,CAACJ,GAAG,EAAEC,CAAC,CAAC,IAAII,gBAAgB,CAAC,CAAC;AAAE;AAC7J,SAASA,gBAAgBA,CAAA,EAAG;EAAE,MAAM,IAAIC,SAAS,CAAC,2IAA2I,CAAC;AAAE;AAChM,SAASF,2BAA2BA,CAACG,CAAC,EAAEC,MAAM,EAAE;EAAE,IAAI,CAACD,CAAC,EAAE;EAAQ,IAAI,OAAOA,CAAC,KAAK,QAAQ,EAAE,OAAOE,iBAAiB,CAACF,CAAC,EAAEC,MAAM,CAAC;EAAE,IAAIE,CAAC,GAAGC,MAAM,CAACC,SAAS,CAACC,QAAQ,CAACC,IAAI,CAACP,CAAC,CAAC,CAACQ,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EAAE,IAAIL,CAAC,KAAK,QAAQ,IAAIH,CAAC,CAACS,WAAW,EAAEN,CAAC,GAAGH,CAAC,CAACS,WAAW,CAACC,IAAI;EAAE,IAAIP,CAAC,KAAK,KAAK,IAAIA,CAAC,KAAK,KAAK,EAAE,OAAOQ,KAAK,CAACC,IAAI,CAACZ,CAAC,CAAC;EAAE,IAAIG,CAAC,KAAK,WAAW,IAAI,0CAA0C,CAACU,IAAI,CAACV,CAAC,CAAC,EAAE,OAAOD,iBAAiB,CAACF,CAAC,EAAEC,MAAM,CAAC;AAAE;AAC/Z,SAASC,iBAAiBA,CAACT,GAAG,EAAEqB,GAAG,EAAE;EAAE,IAAIA,GAAG,IAAI,IAAI,IAAIA,GAAG,GAAGrB,GAAG,CAACsB,MAAM,EAAED,GAAG,GAAGrB,GAAG,CAACsB,MAAM;EAAE,KAAK,IAAIrB,CAAC,GAAG,CAAC,EAAEsB,IAAI,GAAG,IAAIL,KAAK,CAACG,GAAG,CAAC,EAAEpB,CAAC,GAAGoB,GAAG,EAAEpB,CAAC,EAAE,EAAEsB,IAAI,CAACtB,CAAC,CAAC,GAAGD,GAAG,CAACC,CAAC,CAAC;EAAE,OAAOsB,IAAI;AAAE;AAClL,SAASpB,qBAAqBA,CAACH,GAAG,EAAEC,CAAC,EAAE;EAAE,IAAIuB,EAAE,GAAG,IAAI,IAAIxB,GAAG,GAAG,IAAI,GAAG,WAAW,IAAI,OAAOyB,MAAM,IAAIzB,GAAG,CAACyB,MAAM,CAACC,QAAQ,CAAC,IAAI1B,GAAG,CAAC,YAAY,CAAC;EAAE,IAAI,IAAI,IAAIwB,EAAE,EAAE;IAAE,IAAIG,EAAE;MAAEC,EAAE;MAAEC,EAAE;MAAEC,EAAE;MAAEC,IAAI,GAAG,EAAE;MAAEC,EAAE,GAAG,CAAC,CAAC;MAAEC,EAAE,GAAG,CAAC,CAAC;IAAE,IAAI;MAAE,IAAIJ,EAAE,GAAG,CAACL,EAAE,GAAGA,EAAE,CAACV,IAAI,CAACd,GAAG,CAAC,EAAEkC,IAAI,EAAE,CAAC,KAAKjC,CAAC,EAAE;QAAE,IAAIU,MAAM,CAACa,EAAE,CAAC,KAAKA,EAAE,EAAE;QAAQQ,EAAE,GAAG,CAAC,CAAC;MAAE,CAAC,MAAM,OAAO,EAAEA,EAAE,GAAG,CAACL,EAAE,GAAGE,EAAE,CAACf,IAAI,CAACU,EAAE,CAAC,EAAEW,IAAI,CAAC,KAAKJ,IAAI,CAACK,IAAI,CAACT,EAAE,CAACU,KAAK,CAAC,EAAEN,IAAI,CAACT,MAAM,KAAKrB,CAAC,CAAC,EAAE+B,EAAE,GAAG,CAAC,CAAC,CAAC;IAAE,CAAC,CAAC,OAAOM,GAAG,EAAE;MAAEL,EAAE,GAAG,CAAC,CAAC,EAAEL,EAAE,GAAGU,GAAG;IAAE,CAAC,SAAS;MAAE,IAAI;QAAE,IAAI,CAACN,EAAE,IAAI,IAAI,IAAIR,EAAE,CAACe,MAAM,KAAKT,EAAE,GAAGN,EAAE,CAACe,MAAM,CAAC,CAAC,EAAE5B,MAAM,CAACmB,EAAE,CAAC,KAAKA,EAAE,CAAC,EAAE;MAAQ,CAAC,SAAS;QAAE,IAAIG,EAAE,EAAE,MAAML,EAAE;MAAE;IAAE;IAAE,OAAOG,IAAI;EAAE;AAAE;AAC3kB,SAAS7B,eAAeA,CAACF,GAAG,EAAE;EAAE,IAAIkB,KAAK,CAACsB,OAAO,CAACxC,GAAG,CAAC,EAAE,OAAOA,GAAG;AAAE;AACpE,SAASyC,OAAOA,CAACC,MAAM,EAAEC,cAAc,EAAE;EAAE,IAAIC,IAAI,GAAGjC,MAAM,CAACiC,IAAI,CAACF,MAAM,CAAC;EAAE,IAAI/B,MAAM,CAACkC,qBAAqB,EAAE;IAAE,IAAIC,OAAO,GAAGnC,MAAM,CAACkC,qBAAqB,CAACH,MAAM,CAAC;IAAEC,cAAc,KAAKG,OAAO,GAAGA,OAAO,CAACC,MAAM,CAAC,UAAUC,GAAG,EAAE;MAAE,OAAOrC,MAAM,CAACsC,wBAAwB,CAACP,MAAM,EAAEM,GAAG,CAAC,CAACE,UAAU;IAAE,CAAC,CAAC,CAAC,EAAEN,IAAI,CAACR,IAAI,CAACe,KAAK,CAACP,IAAI,EAAEE,OAAO,CAAC;EAAE;EAAE,OAAOF,IAAI;AAAE;AACpV,SAASQ,aAAaA,CAACC,MAAM,EAAE;EAAE,KAAK,IAAIpD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGqD,SAAS,CAAChC,MAAM,EAAErB,CAAC,EAAE,EAAE;IAAE,IAAIsD,MAAM,GAAG,IAAI,IAAID,SAAS,CAACrD,CAAC,CAAC,GAAGqD,SAAS,CAACrD,CAAC,CAAC,GAAG,CAAC,CAAC;IAAEA,CAAC,GAAG,CAAC,GAAGwC,OAAO,CAAC9B,MAAM,CAAC4C,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAACC,OAAO,CAAC,UAAUC,GAAG,EAAE;MAAEC,eAAe,CAACL,MAAM,EAAEI,GAAG,EAAEF,MAAM,CAACE,GAAG,CAAC,CAAC;IAAE,CAAC,CAAC,GAAG9C,MAAM,CAACgD,yBAAyB,GAAGhD,MAAM,CAACiD,gBAAgB,CAACP,MAAM,EAAE1C,MAAM,CAACgD,yBAAyB,CAACJ,MAAM,CAAC,CAAC,GAAGd,OAAO,CAAC9B,MAAM,CAAC4C,MAAM,CAAC,CAAC,CAACC,OAAO,CAAC,UAAUC,GAAG,EAAE;MAAE9C,MAAM,CAACkD,cAAc,CAACR,MAAM,EAAEI,GAAG,EAAE9C,MAAM,CAACsC,wBAAwB,CAACM,MAAM,EAAEE,GAAG,CAAC,CAAC;IAAE,CAAC,CAAC;EAAE;EAAE,OAAOJ,MAAM;AAAE;AACzf,SAASK,eAAeA,CAACI,GAAG,EAAEL,GAAG,EAAEpB,KAAK,EAAE;EAAEoB,GAAG,GAAGM,cAAc,CAACN,GAAG,CAAC;EAAE,IAAIA,GAAG,IAAIK,GAAG,EAAE;IAAEnD,MAAM,CAACkD,cAAc,CAACC,GAAG,EAAEL,GAAG,EAAE;MAAEpB,KAAK,EAAEA,KAAK;MAAEa,UAAU,EAAE,IAAI;MAAEc,YAAY,EAAE,IAAI;MAAEC,QAAQ,EAAE;IAAK,CAAC,CAAC;EAAE,CAAC,MAAM;IAAEH,GAAG,CAACL,GAAG,CAAC,GAAGpB,KAAK;EAAE;EAAE,OAAOyB,GAAG;AAAE;AAC3O,SAASC,cAAcA,CAACG,GAAG,EAAE;EAAE,IAAIT,GAAG,GAAGU,YAAY,CAACD,GAAG,EAAE,QAAQ,CAAC;EAAE,OAAOE,OAAO,CAACX,GAAG,CAAC,KAAK,QAAQ,GAAGA,GAAG,GAAGY,MAAM,CAACZ,GAAG,CAAC;AAAE;AAC5H,SAASU,YAAYA,CAACG,KAAK,EAAEC,IAAI,EAAE;EAAE,IAAIH,OAAO,CAACE,KAAK,CAAC,KAAK,QAAQ,IAAIA,KAAK,KAAK,IAAI,EAAE,OAAOA,KAAK;EAAE,IAAIE,IAAI,GAAGF,KAAK,CAAC7C,MAAM,CAACgD,WAAW,CAAC;EAAE,IAAID,IAAI,KAAKE,SAAS,EAAE;IAAE,IAAIC,GAAG,GAAGH,IAAI,CAAC1D,IAAI,CAACwD,KAAK,EAAEC,IAAI,IAAI,SAAS,CAAC;IAAE,IAAIH,OAAO,CAACO,GAAG,CAAC,KAAK,QAAQ,EAAE,OAAOA,GAAG;IAAE,MAAM,IAAIrE,SAAS,CAAC,8CAA8C,CAAC;EAAE;EAAE,OAAO,CAACiE,IAAI,KAAK,QAAQ,GAAGF,MAAM,GAAGO,MAAM,EAAEN,KAAK,CAAC;AAAE;AAC5X,SAASF,OAAOA,CAACN,GAAG,EAAE;EAAE,yBAAyB;;EAAE,OAAOM,OAAO,GAAG,UAAU,IAAI,OAAO3C,MAAM,IAAI,QAAQ,IAAI,OAAOA,MAAM,CAACC,QAAQ,GAAG,UAAUoC,GAAG,EAAE;IAAE,OAAO,OAAOA,GAAG;EAAE,CAAC,GAAG,UAAUA,GAAG,EAAE;IAAE,OAAOA,GAAG,IAAI,UAAU,IAAI,OAAOrC,MAAM,IAAIqC,GAAG,CAAC9C,WAAW,KAAKS,MAAM,IAAIqC,GAAG,KAAKrC,MAAM,CAACb,SAAS,GAAG,QAAQ,GAAG,OAAOkD,GAAG;EAAE,CAAC,EAAEM,OAAO,CAACN,GAAG,CAAC;AAAE;AAC/U;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASe,OAAO,EAAEC,UAAU,QAAQ,OAAO;AAC3C,SAASC,WAAW,QAAQ,WAAW;AACvC,SAASC,YAAYA,CAACC,KAAK,EAAE;EAC3B,OAAOb,OAAO,CAACa,KAAK,CAAC,KAAK,QAAQ,IAAI,OAAO,IAAIA,KAAK,IAAI,OAAO,IAAIA,KAAK;AAC5E;AACA,OAAO,IAAIC,WAAW,GAAG,SAASA,WAAWA,CAACC,UAAU,EAAEC,KAAK,EAAE;EAC/D,IAAIA,KAAK,GAAG,CAAC,IAAID,UAAU,GAAG,CAAC,EAAE,OAAO,CAAC;EACzC,OAAOA,UAAU,GAAGC,KAAK,GAAG,GAAG;AACjC,CAAC;AACD,OAAO,IAAIC,SAAS,GAAG,SAASA,SAASA,CAACC,WAAW,EAAE;EACrD,OAAO3E,MAAM,CAAC4E,MAAM,CAACD,WAAW,CAAC,CAACE,MAAM,CAAC,UAAUC,GAAG,EAAEC,KAAK,EAAE;IAC7DD,GAAG,CAACC,KAAK,CAACC,EAAE,CAAC,GAAGD,KAAK,CAACE,IAAI;IAC1B,OAAOH,GAAG;EACZ,CAAC,EAAE,CAAC,CAAC,CAAC;AACR,CAAC;AACD,IAAII,gBAAgB,GAAG,SAASA,gBAAgBA,CAACC,YAAY,EAAEC,aAAa,EAAE;EAC5E,IAAIC,mBAAmB,GAAG,CAAC;EAC3B,IAAIC,eAAe,GAAGC,UAAU,CAACJ,YAAY,CAAC;EAC9C,IAAIA,YAAY,CAACK,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE;IACnCH,mBAAmB,GAAGd,WAAW,CAACe,eAAe,EAAEF,aAAa,CAAC;EACnE,CAAC,MAAM,IAAID,YAAY,CAACK,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE;IACzCH,mBAAmB,GAAGd,WAAW,CAACa,aAAa,IAAIE,eAAe,GAAG,GAAG,CAAC,EAAEF,aAAa,CAAC;EAC3F;EACA,OAAOC,mBAAmB;AAC5B,CAAC;AACD,OAAO,IAAII,eAAe,GAAG,SAASA,eAAeA,CAACN,YAAY,EAAEC,aAAa,EAAE;EACjF,IAAIM,UAAU,GAAGR,gBAAgB,CAACC,YAAY,CAAC,CAAC,CAAC,EAAEC,aAAa,CAAC;EACjE,IAAIO,SAAS,GAAGT,gBAAgB,CAACC,YAAY,CAAC,CAAC,CAAC,EAAEC,aAAa,CAAC;EAChE,OAAOQ,IAAI,CAACC,GAAG,CAACF,SAAS,EAAED,UAAU,CAAC;AACxC,CAAC;AACD,OAAO,IAAII,WAAW,GAAG,SAASA,WAAWA,CAACxB,KAAK,EAAEyB,YAAY,EAAE;EACjE,IAAIC,OAAO,GAAG3B,YAAY,CAACC,KAAK,CAAC,GAAGA,KAAK,CAAC0B,OAAO,GAAG1B,KAAK,CAAC2B,OAAO,CAAC,CAAC,CAAC,CAACD,OAAO;EAC5E,IAAIE,OAAO,GAAG7B,YAAY,CAACC,KAAK,CAAC,GAAGA,KAAK,CAAC4B,OAAO,GAAG5B,KAAK,CAAC2B,OAAO,CAAC,CAAC,CAAC,CAACC,OAAO;EAC5E,OAAOH,YAAY,GAAGC,OAAO,GAAGE,OAAO;AACzC,CAAC;AACD,IAAIC,eAAe,GAAG,SAASA,eAAeA,CAACC,OAAO,EAAEC,SAAS,EAAE;EACjE,IAAI,CAACD,OAAO,EAAE,OAAO,IAAI;EACzB,IAAIE,MAAM,GAAGD,SAAS,KAAK,MAAM,GAAG,wBAAwB,GAAG,oBAAoB;EACnF,IAAIE,OAAO,GAAGH,OAAO,CAACE,MAAM,CAAC;EAC7B,OAAOC,OAAO,EAAE;IACd,IAAIA,OAAO,CAACC,OAAO,CAAC,0CAA0C,CAAC,EAAE;MAC/D,OAAOD,OAAO;IAChB;IACAA,OAAO,GAAGA,OAAO,CAACD,MAAM,CAAC;EAC3B;AACF,CAAC;;AAED;AACA,IAAIG,IAAI,GAAG,SAASA,IAAIA,CAACC,KAAK,EAAE;EAC9B,OAAOA,KAAK;AACd,CAAC;AACD,OAAO,IAAIC,qBAAqB,GAAG,SAASA,qBAAqBA,CAACC,IAAI,EAAE;EACtE,IAAIC,YAAY,GAAGD,IAAI,CAACC,YAAY;IAClCC,YAAY,GAAGF,IAAI,CAACE,YAAY;IAChCC,kBAAkB,GAAGH,IAAI,CAACG,kBAAkB;EAC9C,SAASC,OAAOA,CAACN,KAAK,EAAEO,MAAM,EAAE;IAC9B,IAAIC,gBAAgB,GAAG,SAASA,gBAAgBA,CAACnB,YAAY,EAAE;MAC7D,OAAOA,YAAY,GAAGe,YAAY,CAACK,OAAO,CAACC,qBAAqB,CAAC,CAAC,CAACC,KAAK,GAAGP,YAAY,CAACK,OAAO,CAACC,qBAAqB,CAAC,CAAC,CAACE,MAAM;IAChI,CAAC;IACD,IAAIC,aAAa,GAAG,SAASA,aAAaA,CAACC,MAAM,EAAE;MACjD,IAAIT,kBAAkB,EAAE;QACtBA,kBAAkB,CAACrC,SAAS,CAAC8C,MAAM,CAAC,CAAC;MACvC;IACF,CAAC;IACD,IAAIC,cAAc,GAAG,SAASA,cAAcA,CAACC,QAAQ,EAAE;MACrDH,aAAa,CAACG,QAAQ,CAACF,MAAM,CAAC;MAC9B,OAAOE,QAAQ;IACjB,CAAC;IACD,QAAQT,MAAM,CAACU,IAAI;MACjB,KAAK,8BAA8B;QACjC;UACE,IAAI5B,YAAY,GAAGkB,MAAM,CAACW,OAAO,CAAC7B,YAAY;UAC9C,OAAOtD,aAAa,CAACA,aAAa,CAAC,CAAC,CAAC,EAAEiE,KAAK,CAAC,EAAE,CAAC,CAAC,EAAE;YACjDX,YAAY,EAAEA,YAAY;YAC1BX,aAAa,EAAE8B,gBAAgB,CAACnB,YAAY;UAC9C,CAAC,CAAC;QACJ;MACF,KAAK,8BAA8B;QACjC;UACE,IAAIhB,KAAK,GAAGkC,MAAM,CAACW,OAAO,CAAC7C,KAAK;UAChC,OAAOtC,aAAa,CAACA,aAAa,CAAC,CAAC,CAAC,EAAEiE,KAAK,CAAC,EAAE,CAAC,CAAC,EAAE;YACjDc,MAAM,EAAE/E,aAAa,CAACA,aAAa,CAAC,CAAC,CAAC,EAAEiE,KAAK,CAACc,MAAM,CAAC,EAAE,CAAC,CAAC,EAAEzE,eAAe,CAAC,CAAC,CAAC,EAAEgC,KAAK,CAACC,EAAE,EAAED,KAAK,CAAC;UACjG,CAAC,CAAC;QACJ;MACF,KAAK,gCAAgC;QACnC;UACE,IAAI8C,OAAO,GAAGZ,MAAM,CAACW,OAAO,CAACC,OAAO;UACpC,OAAOpF,aAAa,CAACA,aAAa,CAAC,CAAC,CAAC,EAAEiE,KAAK,CAAC,EAAE,CAAC,CAAC,EAAE;YACjDc,MAAM,EAAExH,MAAM,CAAC4E,MAAM,CAAC8B,KAAK,CAACc,MAAM,CAAC,CAAC3C,MAAM,CAAC,UAAUC,GAAG,EAAEC,KAAK,EAAE;cAC/D,IAAIA,KAAK,CAACC,EAAE,KAAK6C,OAAO,EAAE;gBACxB/C,GAAG,CAACC,KAAK,CAACC,EAAE,CAAC,GAAGD,KAAK;cACvB;cACA,OAAOD,GAAG;YACZ,CAAC,EAAE,CAAC,CAAC;UACP,CAAC,CAAC;QACJ;MACF,KAAK,+BAA+B;QAClC;UACE,IAAIgD,OAAO,GAAGb,MAAM,CAACW,OAAO,CAACE,OAAO;UACpC,OAAOrF,aAAa,CAACA,aAAa,CAAC,CAAC,CAAC,EAAEiE,KAAK,CAAC,EAAE,CAAC,CAAC,EAAE;YACjDqB,QAAQ,EAAEtF,aAAa,CAACA,aAAa,CAAC,CAAC,CAAC,EAAEiE,KAAK,CAACqB,QAAQ,CAAC,EAAE,CAAC,CAAC,EAAEhF,eAAe,CAAC,CAAC,CAAC,EAAE+E,OAAO,CAAC9C,EAAE,EAAE8C,OAAO,CAAC;UACzG,CAAC,CAAC;QACJ;MACF,KAAK,iCAAiC;QACpC;UACE,IAAIE,SAAS,GAAGf,MAAM,CAACW,OAAO,CAACI,SAAS;UACxC,OAAOvF,aAAa,CAACA,aAAa,CAAC,CAAC,CAAC,EAAEiE,KAAK,CAAC,EAAE,CAAC,CAAC,EAAE;YACjDqB,QAAQ,EAAE/H,MAAM,CAAC4E,MAAM,CAAC8B,KAAK,CAACqB,QAAQ,CAAC,CAAClD,MAAM,CAAC,UAAUC,GAAG,EAAEC,KAAK,EAAE;cACnE,IAAIA,KAAK,CAACC,EAAE,KAAKgD,SAAS,EAAE;gBAC1BlD,GAAG,CAACC,KAAK,CAACC,EAAE,CAAC,GAAGD,KAAK;cACvB;cACA,OAAOD,GAAG;YACZ,CAAC,EAAE,CAAC,CAAC;UACP,CAAC,CAAC;QACJ;MACF,KAAK,0BAA0B;QAC7B;UACE,IAAImD,eAAe,GAAGhB,MAAM,CAACW,OAAO;YAClCM,QAAQ,GAAGD,eAAe,CAACC,QAAQ;YACnCC,WAAW,GAAGF,eAAe,CAACE,WAAW;YACzCC,WAAW,GAAGH,eAAe,CAACG,WAAW;UAC3C,OAAO3F,aAAa,CAACA,aAAa,CAAC,CAAC,CAAC,EAAEiE,KAAK,CAAC,EAAE,CAAC,CAAC,EAAE;YACjD2B,UAAU,EAAE,IAAI;YAChBC,iBAAiB,EAAEJ,QAAQ;YAC3BC,WAAW,EAAEA,WAAW;YACxBC,WAAW,EAAEA;UACf,CAAC,CAAC;QACJ;MACF,KAAK,yBAAyB;QAC5B;UACE,IAAI,CAAC1B,KAAK,CAAC2B,UAAU,EAAE;YACrB,OAAO3B,KAAK;UACd;UACA,IAAI6B,gBAAgB,GAAGtB,MAAM,CAACW,OAAO;YACnCY,SAAS,GAAGD,gBAAgB,CAACL,QAAQ;YACrCO,YAAY,GAAGF,gBAAgB,CAACJ,WAAW;YAC3CO,YAAY,GAAGH,gBAAgB,CAACH,WAAW;UAC7C,IAAIO,SAAS,GAAGjC,KAAK,CAACc,MAAM,CAACiB,YAAY,CAAC;UAC1C,IAAIG,SAAS,GAAGlC,KAAK,CAACc,MAAM,CAACkB,YAAY,CAAC;UAC1C,IAAIG,KAAK,GAAGL,SAAS,GAAG9B,KAAK,CAAC4B,iBAAiB;UAC/C,IAAIQ,YAAY,GAAGrD,eAAe,CAACkD,SAAS,CAACI,OAAO,EAAErC,KAAK,CAACtB,aAAa,CAAC;UAC1E,IAAI4D,YAAY,GAAGvD,eAAe,CAACmD,SAAS,CAACG,OAAO,EAAErC,KAAK,CAACtB,aAAa,CAAC;UAC1E,IAAI6D,aAAa,GAAG1E,WAAW,CAACoE,SAAS,CAACO,SAAS,CAAC,CAAC,GAAGL,KAAK,EAAEnC,KAAK,CAACtB,aAAa,CAAC;UACnF,IAAI+D,aAAa,GAAG5E,WAAW,CAACqE,SAAS,CAACM,SAAS,CAAC,CAAC,GAAGL,KAAK,EAAEnC,KAAK,CAACtB,aAAa,CAAC;UACnF,IAAI6D,aAAa,IAAIH,YAAY,IAAIK,aAAa,IAAIH,YAAY,EAAE;YAClE,IAAII,cAAc;YAClB,OAAO3B,cAAc,CAAChF,aAAa,CAACA,aAAa,CAAC,CAAC,CAAC,EAAEiE,KAAK,CAAC,EAAE,CAAC,CAAC,EAAE;cAChE4B,iBAAiB,EAAEE,SAAS;cAC5BhB,MAAM,EAAE/E,aAAa,CAACA,aAAa,CAAC,CAAC,CAAC,EAAEiE,KAAK,CAACc,MAAM,CAAC,EAAE,CAAC,CAAC,GAAG4B,cAAc,GAAG,CAAC,CAAC,EAAErG,eAAe,CAACqG,cAAc,EAAEX,YAAY,EAAEhG,aAAa,CAACA,aAAa,CAAC,CAAC,CAAC,EAAEiE,KAAK,CAACc,MAAM,CAACiB,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE;gBAC9LxD,IAAI,EAAEgE;cACR,CAAC,CAAC,CAAC,EAAElG,eAAe,CAACqG,cAAc,EAAEV,YAAY,EAAEjG,aAAa,CAACA,aAAa,CAAC,CAAC,CAAC,EAAEiE,KAAK,CAACc,MAAM,CAACkB,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE;gBAClHzD,IAAI,EAAEkE;cACR,CAAC,CAAC,CAAC,EAAEC,cAAc,CAAC;YACtB,CAAC,CAAC,CAAC;UACL;UACA,OAAO1C,KAAK;QACd;MACF,KAAK,wBAAwB;QAC3B;UACE,IAAI2C,gBAAgB,GAAGpC,MAAM,CAACW,OAAO;YACnC0B,aAAa,GAAGD,gBAAgB,CAAClB,WAAW;YAC5CoB,aAAa,GAAGF,gBAAgB,CAACjB,WAAW;YAC5CoB,SAAS,GAAGH,gBAAgB,CAACG,SAAS;UACxC,IAAIC,UAAU,GAAG/C,KAAK,CAACc,MAAM,CAAC8B,aAAa,CAAC;UAC5C,IAAII,UAAU,GAAGhD,KAAK,CAACc,MAAM,CAAC+B,aAAa,CAAC;UAC5C,IAAII,aAAa,GAAGlE,eAAe,CAACgE,UAAU,CAACV,OAAO,EAAErC,KAAK,CAACtB,aAAa,CAAC;UAC5E,IAAIwE,aAAa,GAAGnE,eAAe,CAACiE,UAAU,CAACX,OAAO,EAAErC,KAAK,CAACtB,aAAa,CAAC;UAC5E,IAAIyE,cAAc,GAAGtF,WAAW,CAACkF,UAAU,CAACP,SAAS,CAAC,CAAC,IAAIM,SAAS,KAAK,UAAU,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE9C,KAAK,CAACtB,aAAa,CAAC;UACrH,IAAI0E,cAAc,GAAGvF,WAAW,CAACmF,UAAU,CAACR,SAAS,CAAC,CAAC,IAAIM,SAAS,KAAK,SAAS,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE9C,KAAK,CAACtB,aAAa,CAAC;UACpH,IAAIyE,cAAc,IAAIF,aAAa,IAAIG,cAAc,IAAIF,aAAa,EAAE;YACtE,IAAIG,cAAc;YAClB,OAAOtC,cAAc,CAAChF,aAAa,CAACA,aAAa,CAAC,CAAC,CAAC,EAAEiE,KAAK,CAAC,EAAE,CAAC,CAAC,EAAE;cAChE2B,UAAU,EAAE,KAAK;cACjBb,MAAM,EAAE/E,aAAa,CAACA,aAAa,CAAC,CAAC,CAAC,EAAEiE,KAAK,CAACc,MAAM,CAAC,EAAE,CAAC,CAAC,GAAGuC,cAAc,GAAG,CAAC,CAAC,EAAEhH,eAAe,CAACgH,cAAc,EAAET,aAAa,EAAE7G,aAAa,CAACA,aAAa,CAAC,CAAC,CAAC,EAAEiE,KAAK,CAACc,MAAM,CAAC8B,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE;gBAChMrE,IAAI,EAAE4E;cACR,CAAC,CAAC,CAAC,EAAE9G,eAAe,CAACgH,cAAc,EAAER,aAAa,EAAE9G,aAAa,CAACA,aAAa,CAAC,CAAC,CAAC,EAAEiE,KAAK,CAACc,MAAM,CAAC+B,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE;gBACpHtE,IAAI,EAAE6E;cACR,CAAC,CAAC,CAAC,EAAEC,cAAc,CAAC;YACtB,CAAC,CAAC,CAAC;UACL;UACA,OAAOrD,KAAK;QACd;MACF,KAAK,sBAAsB;QACzB;UACE,IAAIsD,gBAAgB,GAAG/C,MAAM,CAACW,OAAO;YACnCqC,OAAO,GAAGD,gBAAgB,CAACC,OAAO;YAClCC,cAAc,GAAGF,gBAAgB,CAACnC,OAAO;UAC3C,IAAIsC,YAAY,GAAGzD,KAAK,CAACc,MAAM,CAAC0C,cAAc,CAAC;UAC/C,IAAIE,cAAc,GAAG,CAACD,YAAY,CAACE,WAAW;UAC9C,IAAIC,YAAY,GAAGC,QAAQ,CAACC,cAAc,CAACN,cAAc,CAAC;UAC1D,IAAIO,WAAW,GAAGH,YAAY,CAACI,sBAAsB;UACrD,IAAIC,WAAW,GAAGF,WAAW,GAAGA,WAAW,CAACC,sBAAsB,GAAG,IAAI;UACzE,IAAIE,WAAW,GAAGN,YAAY,CAACO,kBAAkB;UACjD,IAAIC,WAAW,GAAGF,WAAW,GAAGA,WAAW,CAACC,kBAAkB,GAAG,IAAI;UACrE,IAAIE,iBAAiB,GAAG,CAAC,CAAC;UAC1B,IAAIN,WAAW,IAAIE,WAAW,EAAE;YAC9BI,iBAAiB,CAACN,WAAW,CAACzF,EAAE,CAAC,GAAG0B,KAAK,CAACc,MAAM,CAACmD,WAAW,CAAC3F,EAAE,CAAC,CAACqF,WAAW,GAAG,IAAI,GAAGD,cAAc;UACtG;UACA,IAAIQ,WAAW,IAAIE,WAAW,EAAE;YAC9BC,iBAAiB,CAACH,WAAW,CAAC5F,EAAE,CAAC,GAAG0B,KAAK,CAACc,MAAM,CAACsD,WAAW,CAAC9F,EAAE,CAAC,CAACqF,WAAW,GAAG,IAAI,GAAGD,cAAc;UACtG;UACA,IAAIY,WAAW,GAAG,CAAC,CAAC;UACpB,IAAIL,WAAW,IAAI,CAACjE,KAAK,CAACc,MAAM,CAACmD,WAAW,CAAC3F,EAAE,CAAC,CAACqF,WAAW,IAAIJ,OAAO,CAACT,SAAS,KAAK,OAAO,EAAE;YAC7FwB,WAAW,CAACL,WAAW,CAAC3F,EAAE,CAAC,GAAG0B,KAAK,CAACc,MAAM,CAACmD,WAAW,CAAC3F,EAAE,CAAC;UAC5D;UACA,IAAI8F,WAAW,IAAI,CAACpE,KAAK,CAACc,MAAM,CAACsD,WAAW,CAAC9F,EAAE,CAAC,CAACqF,WAAW,IAAIJ,OAAO,CAACT,SAAS,KAAK,MAAM,EAAE;YAC5FwB,WAAW,CAACF,WAAW,CAAC9F,EAAE,CAAC,GAAG0B,KAAK,CAACc,MAAM,CAACsD,WAAW,CAAC9F,EAAE,CAAC;UAC5D;UACA,IAAIiG,QAAQ,GAAGjL,MAAM,CAACiC,IAAI,CAAC+I,WAAW,CAAC,CAACrK,MAAM;;UAE9C;UACA;UACA;UACA;UACA,IAAI,CAACsK,QAAQ,EAAE;YACb,IAAIC,cAAc,GAAG/E,eAAe,CAACmE,YAAY,EAAE,MAAM,CAAC;YAC1D,IAAIa,cAAc,GAAGhF,eAAe,CAACmE,YAAY,EAAE,MAAM,CAAC;YAC1D,IAAIc,cAAc,GAAGF,cAAc,GAAGxE,KAAK,CAACc,MAAM,CAAC0D,cAAc,CAAClG,EAAE,CAAC,GAAG,IAAI;YAC5E,IAAIqG,cAAc,GAAGF,cAAc,GAAGzE,KAAK,CAACc,MAAM,CAAC2D,cAAc,CAACnG,EAAE,CAAC,GAAG,IAAI;YAC5E;YACA,IAAIoG,cAAc,IAAInB,OAAO,CAACT,SAAS,KAAK,OAAO,EAAE;cACnDwB,WAAW,CAACI,cAAc,CAACpG,EAAE,CAAC,GAAGoG,cAAc;YACjD,CAAC,MAAM,IAAIC,cAAc,IAAIpB,OAAO,CAACT,SAAS,KAAK,MAAM,EAAE;cACzDwB,WAAW,CAACK,cAAc,CAACrG,EAAE,CAAC,GAAGqG,cAAc;YACjD,CAAC,MAAM;cACL,IAAID,cAAc,EAAEJ,WAAW,CAACI,cAAc,CAACpG,EAAE,CAAC,GAAGoG,cAAc;cACnE,IAAIC,cAAc,EAAEL,WAAW,CAACK,cAAc,CAACrG,EAAE,CAAC,GAAGqG,cAAc;YACrE;YACAJ,QAAQ,GAAGjL,MAAM,CAACiC,IAAI,CAAC+I,WAAW,CAAC,CAACrK,MAAM;UAC5C;UACA,IAAI2K,YAAY,GAAGlB,cAAc,GAAG7F,WAAW,CAAC,CAAC4F,YAAY,CAACoB,IAAI,GAAG,CAAC,GAAG,EAAE;UAC3E;UACA7E,KAAK,CAACtB,aAAa,CAAC,GAAG+E,YAAY,CAACqB,QAAQ;UAC5C,IAAIC,MAAM,GAAGrB,cAAc,GAAG,CAACD,YAAY,CAAClF,IAAI,GAAGqG,YAAY,IAAIL,QAAQ,GAAG,CAACK,YAAY,GAAGnB,YAAY,CAAClF,IAAI,IAAIgG,QAAQ,GAAG,CAAC,CAAC;UAChI,IAAIS,mBAAmB,GAAG1L,MAAM,CAAC4E,MAAM,CAAC8B,KAAK,CAACc,MAAM,CAAC,CAAC3C,MAAM,CAAC,UAAU8G,GAAG,EAAE5G,KAAK,EAAE;YACjF,IAAIA,KAAK,CAACC,EAAE,KAAKkF,cAAc,IAAInF,KAAK,CAACsF,WAAW,EAAE;cACpDsB,GAAG,IAAI5G,KAAK,CAACE,IAAI;YACnB;YACA,OAAO0G,GAAG;UACZ,CAAC,EAAE,CAAC,CAAC;;UAEL;UACA;UACA;UACA;UACA,IAAI,CAACvB,cAAc,IAAI,CAACa,QAAQ,EAAE;YAChCK,YAAY,GAAG,GAAG,GAAGI,mBAAmB;UAC1C;UACA,IAAIE,aAAa,GAAG,CAAC,CAAC;UACtB,IAAIH,MAAM,GAAG,CAAC,IAAIzL,MAAM,CAAC4E,MAAM,CAACoG,WAAW,CAAC,CAACa,IAAI,CAAC,UAAU9G,KAAK,EAAE;YACjE,OAAOA,KAAK,CAACE,IAAI,GAAGwG,MAAM,GAAGhG,eAAe,CAACV,KAAK,CAACgE,OAAO,EAAErC,KAAK,CAACtB,aAAa,CAAC;UAClF,CAAC,CAAC,EAAE;YACF;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA4F,WAAW,GAAGhL,MAAM,CAAC4E,MAAM,CAAC8B,KAAK,CAACc,MAAM,CAAC,CAAC3C,MAAM,CAAC,UAAUC,GAAG,EAAEC,KAAK,EAAE;cACrE,IAAIA,KAAK,CAACC,EAAE,KAAKkF,cAAc,IAAI,CAACnF,KAAK,CAACsF,WAAW,EAAE;gBACrDvF,GAAG,CAACC,KAAK,CAACC,EAAE,CAAC,GAAGvC,aAAa,CAAC,CAAC,CAAC,EAAEsC,KAAK,CAAC;cAC1C;cACA,OAAOD,GAAG;YACZ,CAAC,EAAE,CAAC,CAAC,CAAC;YACNwG,YAAY,GAAG,CAAC,GAAG,GAAGI,mBAAmB,KAAK1L,MAAM,CAACiC,IAAI,CAAC+I,WAAW,CAAC,CAACrK,MAAM,GAAG,CAAC,CAAC;YAClFiL,aAAa,GAAG5L,MAAM,CAAC4E,MAAM,CAACoG,WAAW,CAAC,CAACnG,MAAM,CAAC,UAAUC,GAAG,EAAEC,KAAK,EAAE;cACtED,GAAG,CAACC,KAAK,CAACC,EAAE,CAAC,GAAGvC,aAAa,CAACA,aAAa,CAAC,CAAC,CAAC,EAAEsC,KAAK,CAAC,EAAE,CAAC,CAAC,EAAE;gBAC1DE,IAAI,EAAEqG;cACR,CAAC,CAAC;cACF,OAAOxG,GAAG;YACZ,CAAC,EAAE,CAAC,CAAC,CAAC;UACR,CAAC,MAAM;YACL;YACA8G,aAAa,GAAG5L,MAAM,CAAC4E,MAAM,CAACoG,WAAW,CAAC,CAACnG,MAAM,CAAC,UAAUC,GAAG,EAAEC,KAAK,EAAE;cACtED,GAAG,CAACC,KAAK,CAACC,EAAE,CAAC,GAAGvC,aAAa,CAACA,aAAa,CAAC,CAAC,CAAC,EAAEsC,KAAK,CAAC,EAAE,CAAC,CAAC,EAAE;gBAC1DE,IAAI,EAAEF,KAAK,CAACE,IAAI,GAAGwG;cACrB,CAAC,CAAC;cACF,OAAO3G,GAAG;YACZ,CAAC,EAAE,CAAC,CAAC,CAAC;UACR;UACA,OAAO2C,cAAc,CAAChF,aAAa,CAACA,aAAa,CAAC,CAAC,CAAC,EAAEiE,KAAK,CAAC,EAAE,CAAC,CAAC,EAAE;YAChEc,MAAM,EAAE/E,aAAa,CAACA,aAAa,CAACA,aAAa,CAAC,CAAC,CAAC,EAAEiE,KAAK,CAACc,MAAM,CAAC,EAAEoE,aAAa,CAAC,EAAE,CAAC,CAAC,EAAE7I,eAAe,CAAC,CAAC,CAAC,EAAEmH,cAAc,EAAEzH,aAAa,CAACA,aAAa,CAAC,CAAC,CAAC,EAAEiE,KAAK,CAACc,MAAM,CAAC0C,cAAc,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE;cAC9LjF,IAAI,EAAEqG,YAAY;cAClBjB,WAAW,EAAED,cAAc;cAC3BoB,QAAQ,EAAEpB,cAAc,GAAGD,YAAY,CAAClF,IAAI,GAAGqG;YACjD,CAAC,CAAC,CAAC,CAAC;YACJvD,QAAQ,EAAE/H,MAAM,CAAC4E,MAAM,CAAC8B,KAAK,CAACqB,QAAQ,CAAC,CAAClD,MAAM,CAAC,UAAUC,GAAG,EAAEgD,OAAO,EAAE;cACrE,IAAIgE,qBAAqB;cACzBhH,GAAG,CAACgD,OAAO,CAAC9C,EAAE,CAAC,GAAGvC,aAAa,CAACA,aAAa,CAAC,CAAC,CAAC,EAAEqF,OAAO,CAAC,EAAE,CAAC,CAAC,EAAE;gBAC9DiE,SAAS,EAAE,KAAK;gBAChBC,UAAU,EAAE,CAACF,qBAAqB,GAAGf,iBAAiB,CAACjD,OAAO,CAAC9C,EAAE,CAAC,MAAM,IAAI,IAAI8G,qBAAqB,KAAK,KAAK,CAAC,GAAGA,qBAAqB,GAAGhE,OAAO,CAACkE;cACrJ,CAAC,CAAC;cACF,OAAOlH,GAAG;YACZ,CAAC,EAAE,CAAC,CAAC;UACP,CAAC,CAAC,CAAC;QACL;MACF,KAAK,4BAA4B;QAC/B;UACE,IAAImH,UAAU,GAAGhF,MAAM,CAACW,OAAO,CAACI,SAAS;UACzC,OAAOvF,aAAa,CAACA,aAAa,CAAC,CAAC,CAAC,EAAEiE,KAAK,CAAC,EAAE,CAAC,CAAC,EAAE;YACjDqB,QAAQ,EAAE/H,MAAM,CAAC4E,MAAM,CAAC8B,KAAK,CAACqB,QAAQ,CAAC,CAAClD,MAAM,CAAC,UAAUC,GAAG,EAAEgD,OAAO,EAAE;cACrEhD,GAAG,CAACgD,OAAO,CAAC9C,EAAE,CAAC,GAAGvC,aAAa,CAACA,aAAa,CAAC,CAAC,CAAC,EAAEqF,OAAO,CAAC,EAAE,CAAC,CAAC,EAAE;gBAC9DiE,SAAS,EAAEjE,OAAO,CAAC9C,EAAE,KAAKiH;cAC5B,CAAC,CAAC;cACF,OAAOnH,GAAG;YACZ,CAAC,EAAE,CAAC,CAAC;UACP,CAAC,CAAC;QACJ;MACF,KAAK,2BAA2B;QAC9B;UACE,OAAOrC,aAAa,CAACA,aAAa,CAAC,CAAC,CAAC,EAAEiE,KAAK,CAAC,EAAE,CAAC,CAAC,EAAE;YACjDqB,QAAQ,EAAE/H,MAAM,CAAC4E,MAAM,CAAC8B,KAAK,CAACqB,QAAQ,CAAC,CAAClD,MAAM,CAAC,UAAUC,GAAG,EAAEgD,OAAO,EAAE;cACrEhD,GAAG,CAACgD,OAAO,CAAC9C,EAAE,CAAC,GAAGvC,aAAa,CAACA,aAAa,CAAC,CAAC,CAAC,EAAEqF,OAAO,CAAC,EAAE,CAAC,CAAC,EAAE;gBAC9DiE,SAAS,EAAE;cACb,CAAC,CAAC;cACF,OAAOjH,GAAG;YACZ,CAAC,EAAE,CAAC,CAAC;UACP,CAAC,CAAC;QACJ;MACF,KAAK,qBAAqB;QACxB;UACE,OAAOrC,aAAa,CAACA,aAAa,CAAC,CAAC,CAAC,EAAEoE,YAAY,CAAC,EAAE,CAAC,CAAC,EAAE;YACxDW,MAAM,EAAEd,KAAK,CAACc,MAAM;YACpBO,QAAQ,EAAErB,KAAK,CAACqB,QAAQ;YACxB3C,aAAa,EAAEsB,KAAK,CAACtB;UACvB,CAAC,CAAC;QACJ;MACF,KAAK,wBAAwB;QAC3B;UACE2B,kBAAkB,CAACrC,SAAS,CAACgC,KAAK,CAACc,MAAM,CAAC,CAAC;UAC3C,OAAOd,KAAK;QACd;MACF;MACA;MACA,KAAK,sBAAsB;QACzB;UACE,OAAOA,KAAK;QACd;MACF;QACEtC,WAAW,CAAC6C,MAAM,CAAC;QACnB,OAAOP,KAAK;IAChB;EACF;EACA,IAAIwF,WAAW,GAAG/H,UAAU,CAAC6C,OAAO,EAAEH,YAAY,EAAEJ,IAAI,CAAC;IACvD0F,YAAY,GAAG/M,cAAc,CAAC8M,WAAW,EAAE,CAAC,CAAC;IAC7CE,YAAY,GAAGD,YAAY,CAAC,CAAC,CAAC;IAC9BE,QAAQ,GAAGF,YAAY,CAAC,CAAC,CAAC;EAC5B,IAAIG,OAAO,GAAGpI,OAAO,CAAC,YAAY;IAChC,OAAO;MACLqI,KAAK,EAAE,SAASA,KAAKA,CAAA,EAAG;QACtB,OAAOF,QAAQ,CAAC;UACd1E,IAAI,EAAE;QACR,CAAC,CAAC;MACJ,CAAC;MACD6E,aAAa,EAAE,SAASA,aAAaA,CAACzG,YAAY,EAAE;QAClD,OAAOsG,QAAQ,CAAC;UACd1E,IAAI,EAAE,8BAA8B;UACpCC,OAAO,EAAE;YACP7B,YAAY,EAAEA;UAChB;QACF,CAAC,CAAC;MACJ,CAAC;MACD0G,aAAa,EAAE,SAASA,aAAaA,CAAC1H,KAAK,EAAE;QAC3C,OAAOsH,QAAQ,CAAC;UACd1E,IAAI,EAAE,8BAA8B;UACpCC,OAAO,EAAE;YACP7C,KAAK,EAAEA;UACT;QACF,CAAC,CAAC;MACJ,CAAC;MACD2H,eAAe,EAAE,SAASA,eAAeA,CAAC7E,OAAO,EAAE;QACjD,OAAOwE,QAAQ,CAAC;UACd1E,IAAI,EAAE,gCAAgC;UACtCC,OAAO,EAAE;YACPC,OAAO,EAAEA;UACX;QACF,CAAC,CAAC;MACJ,CAAC;MACD8E,eAAe,EAAE,SAASA,eAAeA,CAAC7E,OAAO,EAAE;QACjD,OAAOuE,QAAQ,CAAC;UACd1E,IAAI,EAAE,+BAA+B;UACrCC,OAAO,EAAE;YACPE,OAAO,EAAEA;UACX;QACF,CAAC,CAAC;MACJ,CAAC;MACD8E,iBAAiB,EAAE,SAASA,iBAAiBA,CAAC5E,SAAS,EAAE;QACvD,OAAOqE,QAAQ,CAAC;UACd1E,IAAI,EAAE,iCAAiC;UACvCC,OAAO,EAAE;YACPI,SAAS,EAAEA;UACb;QACF,CAAC,CAAC;MACJ,CAAC;MACD6E,SAAS,EAAE,SAASA,SAASA,CAACC,KAAK,EAAE;QACnC,IAAI3E,WAAW,GAAG2E,KAAK,CAAC3E,WAAW;UACjCC,WAAW,GAAG0E,KAAK,CAAC1E,WAAW;UAC/BF,QAAQ,GAAG4E,KAAK,CAAC5E,QAAQ;QAC3B,OAAOmE,QAAQ,CAAC;UACd1E,IAAI,EAAE,0BAA0B;UAChCC,OAAO,EAAE;YACPM,QAAQ,EAAEA,QAAQ;YAClBC,WAAW,EAAEA,WAAW;YACxBC,WAAW,EAAEA;UACf;QACF,CAAC,CAAC;MACJ,CAAC;MACD2E,QAAQ,EAAE,SAASA,QAAQA,CAACC,KAAK,EAAE;QACjC,IAAI7E,WAAW,GAAG6E,KAAK,CAAC7E,WAAW;UACjCC,WAAW,GAAG4E,KAAK,CAAC5E,WAAW;UAC/BF,QAAQ,GAAG8E,KAAK,CAAC9E,QAAQ;QAC3B,OAAOmE,QAAQ,CAAC;UACd1E,IAAI,EAAE,yBAAyB;UAC/BC,OAAO,EAAE;YACPM,QAAQ,EAAEA,QAAQ;YAClBC,WAAW,EAAEA,WAAW;YACxBC,WAAW,EAAEA;UACf;QACF,CAAC,CAAC;MACJ,CAAC;MACD6E,OAAO,EAAE,SAASA,OAAOA,CAACC,KAAK,EAAE;QAC/B,IAAI/E,WAAW,GAAG+E,KAAK,CAAC/E,WAAW;UACjCC,WAAW,GAAG8E,KAAK,CAAC9E,WAAW;UAC/BoB,SAAS,GAAG0D,KAAK,CAAC1D,SAAS;QAC7B,OAAO6C,QAAQ,CAAC;UACd1E,IAAI,EAAE,wBAAwB;UAC9BC,OAAO,EAAE;YACPO,WAAW,EAAEA,WAAW;YACxBC,WAAW,EAAEA,WAAW;YACxBoB,SAAS,EAAEA;UACb;QACF,CAAC,CAAC;MACJ,CAAC;MACD2D,WAAW,EAAE,SAASA,WAAWA,CAACtF,OAAO,EAAEoC,OAAO,EAAE;QAClD,OAAOoC,QAAQ,CAAC;UACd1E,IAAI,EAAE,sBAAsB;UAC5BC,OAAO,EAAE;YACPC,OAAO,EAAEA,OAAO;YAChBoC,OAAO,EAAEA;UACX;QACF,CAAC,CAAC;MACJ,CAAC;MACDmD,YAAY,EAAE,SAASA,YAAYA,CAACpF,SAAS,EAAE;QAC7C,OAAOqE,QAAQ,CAAC;UACd1E,IAAI,EAAE,4BAA4B;UAClCC,OAAO,EAAE;YACPI,SAAS,EAAEA;UACb;QACF,CAAC,CAAC;MACJ,CAAC;MACDqF,WAAW,EAAE,SAASA,WAAWA,CAAA,EAAG;QAClC,OAAOhB,QAAQ,CAAC;UACd1E,IAAI,EAAE;QACR,CAAC,CAAC;MACJ;IACF,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EACN,OAAO,CAAC2E,OAAO,EAAEF,YAAY,CAAC;AAChC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}