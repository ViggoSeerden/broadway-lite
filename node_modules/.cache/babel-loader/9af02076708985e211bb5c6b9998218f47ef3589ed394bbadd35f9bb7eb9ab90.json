{"ast":null,"code":"/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n\nimport { css } from '@emotion/react';\nimport { logicalCSS } from '../../global_styling';\nvar _gutterSizeAdjustment = function _gutterSizeAdjustment(gutterSize) {\n  return \"\\n    gap: \".concat(gutterSize, \";\\n\\n    // The vertical line height needs to be adjusted with the gutter size\\n    [class*='euiTimelineItem-']:not(:last-child) > [class*='euiTimelineItemIcon-']::before {\\n      \").concat(logicalCSS('height', \"calc(100% + \".concat(gutterSize, \")\")), \";\\n    }\\n  \");\n};\n\n// The vertical line should only appear when the EuiTimelineItem's\n// are wrapped in a EuiTimeline. That's why these styles live here.\nvar timelineVerticalLine = function timelineVerticalLine(euiTheme) {\n  return \"  \\n    [class*='euiTimelineItem-'] > [class*='euiTimelineItemIcon-']::before {\\n      content: '';\\n      position: absolute;\\n      \".concat(logicalCSS('top', 0), \";\\n      \").concat(logicalCSS('width', euiTheme.size.xxs), \";\\n      background-color: \").concat(euiTheme.colors.lightShade, \";\\n    }\\n\\n    > [class*='euiTimelineItem-center']:first-child > [class*='euiTimelineItemIcon-']::before {\\n      \").concat(logicalCSS('top', '50%'), \";\\n    }\\n  \\n    > [class*='euiTimelineItem-center']:last-child:not(:only-child) > [class*='euiTimelineItemIcon-']::before {\\n      \").concat(logicalCSS('height', '50%'), \";\\n    }\\n  \");\n};\nexport var euiTimelineStyles = function euiTimelineStyles(_ref) {\n  var euiTheme = _ref.euiTheme;\n  return {\n    euiTimeline: /*#__PURE__*/css(\"display:flex;flex-direction:column;\", timelineVerticalLine(euiTheme), \";;label:euiTimeline;\"),\n    m: /*#__PURE__*/css(_gutterSizeAdjustment(euiTheme.size.base), \";label:m;\"),\n    l: /*#__PURE__*/css(_gutterSizeAdjustment(euiTheme.size.l), \";label:l;\"),\n    xl: /*#__PURE__*/css(_gutterSizeAdjustment(euiTheme.size.xl), \";label:xl;\")\n  };\n};","map":{"version":3,"names":["css","logicalCSS","_gutterSizeAdjustment","gutterSize","concat","timelineVerticalLine","euiTheme","size","xxs","colors","lightShade","euiTimelineStyles","_ref","euiTimeline","m","base","l","xl"],"sources":["/home/runner/work/broadway-lite/broadway-lite/node_modules/@elastic/eui/es/components/timeline/timeline.styles.js"],"sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n\nimport { css } from '@emotion/react';\nimport { logicalCSS } from '../../global_styling';\nvar _gutterSizeAdjustment = function _gutterSizeAdjustment(gutterSize) {\n  return \"\\n    gap: \".concat(gutterSize, \";\\n\\n    // The vertical line height needs to be adjusted with the gutter size\\n    [class*='euiTimelineItem-']:not(:last-child) > [class*='euiTimelineItemIcon-']::before {\\n      \").concat(logicalCSS('height', \"calc(100% + \".concat(gutterSize, \")\")), \";\\n    }\\n  \");\n};\n\n// The vertical line should only appear when the EuiTimelineItem's\n// are wrapped in a EuiTimeline. That's why these styles live here.\nvar timelineVerticalLine = function timelineVerticalLine(euiTheme) {\n  return \"  \\n    [class*='euiTimelineItem-'] > [class*='euiTimelineItemIcon-']::before {\\n      content: '';\\n      position: absolute;\\n      \".concat(logicalCSS('top', 0), \";\\n      \").concat(logicalCSS('width', euiTheme.size.xxs), \";\\n      background-color: \").concat(euiTheme.colors.lightShade, \";\\n    }\\n\\n    > [class*='euiTimelineItem-center']:first-child > [class*='euiTimelineItemIcon-']::before {\\n      \").concat(logicalCSS('top', '50%'), \";\\n    }\\n  \\n    > [class*='euiTimelineItem-center']:last-child:not(:only-child) > [class*='euiTimelineItemIcon-']::before {\\n      \").concat(logicalCSS('height', '50%'), \";\\n    }\\n  \");\n};\nexport var euiTimelineStyles = function euiTimelineStyles(_ref) {\n  var euiTheme = _ref.euiTheme;\n  return {\n    euiTimeline: /*#__PURE__*/css(\"display:flex;flex-direction:column;\", timelineVerticalLine(euiTheme), \";;label:euiTimeline;\"),\n    m: /*#__PURE__*/css(_gutterSizeAdjustment(euiTheme.size.base), \";label:m;\"),\n    l: /*#__PURE__*/css(_gutterSizeAdjustment(euiTheme.size.l), \";label:l;\"),\n    xl: /*#__PURE__*/css(_gutterSizeAdjustment(euiTheme.size.xl), \";label:xl;\")\n  };\n};"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,GAAG,QAAQ,gBAAgB;AACpC,SAASC,UAAU,QAAQ,sBAAsB;AACjD,IAAIC,qBAAqB,GAAG,SAASA,qBAAqBA,CAACC,UAAU,EAAE;EACrE,OAAO,aAAa,CAACC,MAAM,CAACD,UAAU,EAAE,sLAAsL,CAAC,CAACC,MAAM,CAACH,UAAU,CAAC,QAAQ,EAAE,cAAc,CAACG,MAAM,CAACD,UAAU,EAAE,GAAG,CAAC,CAAC,EAAE,cAAc,CAAC;AACtT,CAAC;;AAED;AACA;AACA,IAAIE,oBAAoB,GAAG,SAASA,oBAAoBA,CAACC,QAAQ,EAAE;EACjE,OAAO,wIAAwI,CAACF,MAAM,CAACH,UAAU,CAAC,KAAK,EAAE,CAAC,CAAC,EAAE,WAAW,CAAC,CAACG,MAAM,CAACH,UAAU,CAAC,OAAO,EAAEK,QAAQ,CAACC,IAAI,CAACC,GAAG,CAAC,EAAE,6BAA6B,CAAC,CAACJ,MAAM,CAACE,QAAQ,CAACG,MAAM,CAACC,UAAU,EAAE,qHAAqH,CAAC,CAACN,MAAM,CAACH,UAAU,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE,uIAAuI,CAAC,CAACG,MAAM,CAACH,UAAU,CAAC,QAAQ,EAAE,KAAK,CAAC,EAAE,cAAc,CAAC;AACjoB,CAAC;AACD,OAAO,IAAIU,iBAAiB,GAAG,SAASA,iBAAiBA,CAACC,IAAI,EAAE;EAC9D,IAAIN,QAAQ,GAAGM,IAAI,CAACN,QAAQ;EAC5B,OAAO;IACLO,WAAW,EAAE,aAAab,GAAG,CAAC,qCAAqC,EAAEK,oBAAoB,CAACC,QAAQ,CAAC,EAAE,sBAAsB,CAAC;IAC5HQ,CAAC,EAAE,aAAad,GAAG,CAACE,qBAAqB,CAACI,QAAQ,CAACC,IAAI,CAACQ,IAAI,CAAC,EAAE,WAAW,CAAC;IAC3EC,CAAC,EAAE,aAAahB,GAAG,CAACE,qBAAqB,CAACI,QAAQ,CAACC,IAAI,CAACS,CAAC,CAAC,EAAE,WAAW,CAAC;IACxEC,EAAE,EAAE,aAAajB,GAAG,CAACE,qBAAqB,CAACI,QAAQ,CAACC,IAAI,CAACU,EAAE,CAAC,EAAE,YAAY;EAC5E,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}