{"ast":null,"code":"/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n\n/**\n * The `getFormControlClassNameForIconCount` function helps setup the className appendum\n * depending on the form control's current settings/state.\n *\n * @param icon {boolean} Does it contain a static icon like arrowDown\n * @param clear {boolean} Is it currently clearable\n * @param isLoading {boolean} Is is currently loading\n * @param isInvalid {boolean} It is currently invalid\n * @param isDropdown {boolean} It is as dropdown\n * @returns {string | undefined} Returns the string to append to the base className of the form control; or `undefined` if all evaluate to false\n */\n\nexport function getFormControlClassNameForIconCount(_ref) {\n  var icon = _ref.icon,\n    clear = _ref.clear,\n    isLoading = _ref.isLoading,\n    isInvalid = _ref.isInvalid,\n    isDropdown = _ref.isDropdown;\n  var numIcons = [icon, clear, isInvalid, isLoading, isDropdown].filter(function (item) {\n    return item === true;\n  }).length;\n\n  // This className is also specifically used in `src/global_styling/mixins/_form.scss`\n  return numIcons > 0 ? \"euiFormControlLayout--\".concat(numIcons, \"icons\") : undefined;\n}","map":{"version":3,"names":["getFormControlClassNameForIconCount","_ref","icon","clear","isLoading","isInvalid","isDropdown","numIcons","filter","item","length","concat","undefined"],"sources":["/home/runner/work/broadway-lite/broadway-lite/node_modules/@elastic/eui/es/components/form/form_control_layout/_num_icons.js"],"sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n\n/**\n * The `getFormControlClassNameForIconCount` function helps setup the className appendum\n * depending on the form control's current settings/state.\n *\n * @param icon {boolean} Does it contain a static icon like arrowDown\n * @param clear {boolean} Is it currently clearable\n * @param isLoading {boolean} Is is currently loading\n * @param isInvalid {boolean} It is currently invalid\n * @param isDropdown {boolean} It is as dropdown\n * @returns {string | undefined} Returns the string to append to the base className of the form control; or `undefined` if all evaluate to false\n */\n\nexport function getFormControlClassNameForIconCount(_ref) {\n  var icon = _ref.icon,\n    clear = _ref.clear,\n    isLoading = _ref.isLoading,\n    isInvalid = _ref.isInvalid,\n    isDropdown = _ref.isDropdown;\n  var numIcons = [icon, clear, isInvalid, isLoading, isDropdown].filter(function (item) {\n    return item === true;\n  }).length;\n\n  // This className is also specifically used in `src/global_styling/mixins/_form.scss`\n  return numIcons > 0 ? \"euiFormControlLayout--\".concat(numIcons, \"icons\") : undefined;\n}"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASA,mCAAmCA,CAACC,IAAI,EAAE;EACxD,IAAIC,IAAI,GAAGD,IAAI,CAACC,IAAI;IAClBC,KAAK,GAAGF,IAAI,CAACE,KAAK;IAClBC,SAAS,GAAGH,IAAI,CAACG,SAAS;IAC1BC,SAAS,GAAGJ,IAAI,CAACI,SAAS;IAC1BC,UAAU,GAAGL,IAAI,CAACK,UAAU;EAC9B,IAAIC,QAAQ,GAAG,CAACL,IAAI,EAAEC,KAAK,EAAEE,SAAS,EAAED,SAAS,EAAEE,UAAU,CAAC,CAACE,MAAM,CAAC,UAAUC,IAAI,EAAE;IACpF,OAAOA,IAAI,KAAK,IAAI;EACtB,CAAC,CAAC,CAACC,MAAM;;EAET;EACA,OAAOH,QAAQ,GAAG,CAAC,GAAG,wBAAwB,CAACI,MAAM,CAACJ,QAAQ,EAAE,OAAO,CAAC,GAAGK,SAAS;AACtF"},"metadata":{},"sourceType":"module","externalDependencies":[]}