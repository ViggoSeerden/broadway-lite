{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it.return != null) it.return();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n\nimport { isArray, isDateLike, isString } from '../../../services/predicate';\nimport { keysOf } from '../../common';\nimport { AST } from './ast';\nimport { printIso8601 } from './date_format';\nimport { dateValue, isDateValue } from './date_value';\nvar processDateOperation = function processDateOperation(value, operator) {\n  var granularity = value.granularity,\n    resolve = value.resolve;\n  var expression = printIso8601(resolve());\n  if (!granularity) {\n    return {\n      operator: operator,\n      expression: expression\n    };\n  }\n  switch (operator) {\n    case AST.Operator.GT:\n      expression = \"\".concat(expression, \"||+1\").concat(granularity.es, \"/\").concat(granularity.es);\n      return {\n        operator: AST.Operator.GTE,\n        expression: expression\n      };\n    case AST.Operator.GTE:\n      expression = \"\".concat(expression, \"||/\").concat(granularity.es);\n      return {\n        operator: operator,\n        expression: expression\n      };\n    case AST.Operator.LT:\n      expression = \"\".concat(expression, \"||/\").concat(granularity.es);\n      return {\n        operator: operator,\n        expression: expression\n      };\n    case AST.Operator.LTE:\n      expression = \"\".concat(expression, \"||+1\").concat(granularity.es, \"/\").concat(granularity.es);\n      return {\n        operator: AST.Operator.LT,\n        expression: expression\n      };\n    default:\n      expression = \"\".concat(expression, \"||/\").concat(granularity.es);\n      return {\n        expression: expression\n      };\n  }\n};\nexport var _termValuesToQuery = function _termValuesToQuery(values, options) {\n  var body = {\n    query: values.map(function (value) {\n      if (isString(value) && value.match(/\\s/)) {\n        return \"+\\\"\".concat(value, \"\\\"\");\n      }\n      return \"+\".concat(value);\n    }).join(' ')\n  };\n  if (body.query === '') {\n    return;\n  }\n  if (options.defaultFields) {\n    body.fields = options.defaultFields;\n  }\n  return {\n    simple_query_string: body\n  };\n};\nexport var _fieldValuesToQuery = function _fieldValuesToQuery(field, operations, andOr) {\n  var queries = [];\n  keysOf(operations).forEach(function (operator) {\n    var values = operations[operator];\n    switch (operator) {\n      case AST.Operator.EQ:\n        var _terms = [];\n        var phrases = [];\n        var dates = [];\n        values.forEach(function (value) {\n          if (isDateValue(value)) {\n            dates.push(value);\n          } else if (isDateLike(value)) {\n            dates.push(dateValue(value));\n          } else if (isString(value) && value.match(/\\s/)) {\n            phrases.push(value);\n          } else {\n            _terms.push(value);\n          }\n        });\n        if (_terms.length > 1) {\n          queries.push({\n            bool: _defineProperty({}, andOr === 'and' ? 'must' : 'should', _toConsumableArray(_terms.map(function (value) {\n              return {\n                match: _defineProperty({}, field, {\n                  query: value,\n                  operator: andOr\n                })\n              };\n            })))\n          });\n        } else if (_terms.length === 1) {\n          queries.push({\n            match: _defineProperty({}, field, {\n              query: _terms[0],\n              operator: andOr\n            })\n          });\n        }\n        if (phrases.length > 0) {\n          queries.push.apply(queries, _toConsumableArray(phrases.map(function (phrase) {\n            return {\n              match_phrase: _defineProperty({}, field, phrase)\n            };\n          })));\n        }\n        if (dates.length > 0) {\n          queries.push.apply(queries, _toConsumableArray(dates.map(function (value) {\n            return {\n              match: _defineProperty({}, field, processDateOperation(value).expression)\n            };\n          })));\n        }\n        break;\n      default:\n        values.forEach(function (value) {\n          if (isDateValue(value)) {\n            var operation = processDateOperation(value, operator);\n            queries.push({\n              range: _defineProperty({}, field, _defineProperty({}, operation.operator, operation.expression))\n            });\n          } else {\n            queries.push({\n              range: _defineProperty({}, field, _defineProperty({}, operator, value))\n            });\n          }\n        });\n    }\n  });\n  if (queries.length === 1) {\n    return queries[0];\n  }\n  var key = andOr === 'and' ? 'must' : 'should';\n  return {\n    bool: _defineProperty({}, key, [].concat(queries))\n  };\n};\nexport var _isFlagToQuery = function _isFlagToQuery(flag, on) {\n  return {\n    term: _defineProperty({}, flag, on)\n  };\n};\nvar collectTerms = function collectTerms(clauses) {\n  var values = {\n    must: [],\n    mustNot: []\n  };\n  var _iterator = _createForOfIteratorHelper(clauses),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var clause = _step.value;\n      if (AST.Match.isMustClause(clause)) {\n        values.must.push(clause.value);\n      } else {\n        values.mustNot.push(clause.value);\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  return values;\n};\nvar collectFields = function collectFields(clauses) {\n  var fieldArray = function fieldArray(obj, field, operator) {\n    if (!obj[field]) {\n      obj[field] = {};\n    }\n    if (!obj[field][operator]) {\n      obj[field][operator] = [];\n    }\n    return obj[field][operator];\n  };\n  return clauses.reduce(function (fields, clause) {\n    if (AST.Match.isMustClause(clause)) {\n      if (isArray(clause.value)) {\n        var _fieldArray;\n        (_fieldArray = fieldArray(fields.must.or, clause.field, clause.operator)).push.apply(_fieldArray, _toConsumableArray(clause.value));\n      } else {\n        fieldArray(fields.must.and, clause.field, clause.operator).push(clause.value);\n      }\n    } else {\n      if (isArray(clause.value)) {\n        var _fieldArray2;\n        (_fieldArray2 = fieldArray(fields.mustNot.or, clause.field, clause.operator)).push.apply(_fieldArray2, _toConsumableArray(clause.value));\n      } else {\n        fieldArray(fields.mustNot.and, clause.field, clause.operator).push(clause.value);\n      }\n    }\n    return fields;\n  }, {\n    must: {\n      and: {},\n      or: {}\n    },\n    mustNot: {\n      and: {},\n      or: {}\n    }\n  });\n};\nvar clausesToEsQueryDsl = function clausesToEsQueryDsl(_ref) {\n  var fields = _ref.fields,\n    terms = _ref.terms,\n    is = _ref.is;\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var extraMustQueries = options.extraMustQueries || [];\n  var extraMustNotQueries = options.extraMustNotQueries || [];\n  var termValuesToQuery = options.termValuesToQuery || _termValuesToQuery;\n  var fieldValuesToQuery = options.fieldValuesToQuery || _fieldValuesToQuery;\n  var isFlagToQuery = options.isFlagToQuery || _isFlagToQuery;\n  var must = [];\n  must.push.apply(must, _toConsumableArray(extraMustQueries));\n  var termMustQuery = termValuesToQuery(terms.must, options);\n  if (termMustQuery) {\n    must.push(termMustQuery);\n  }\n  Object.keys(fields.must.and).forEach(function (field) {\n    must.push(fieldValuesToQuery(field, fields.must.and[field], 'and'));\n  });\n  Object.keys(fields.must.or).forEach(function (field) {\n    must.push(fieldValuesToQuery(field, fields.must.or[field], 'or'));\n  });\n  is.forEach(function (clause) {\n    must.push(isFlagToQuery(clause.flag, AST.Match.isMustClause(clause)));\n  });\n  var mustNot = [];\n  mustNot.push.apply(mustNot, _toConsumableArray(extraMustNotQueries));\n  var termMustNotQuery = termValuesToQuery(terms.mustNot, options);\n  if (termMustNotQuery) {\n    mustNot.push(termMustNotQuery);\n  }\n  Object.keys(fields.mustNot.and).forEach(function (field) {\n    mustNot.push(fieldValuesToQuery(field, fields.mustNot.and[field], 'and'));\n  });\n  Object.keys(fields.mustNot.or).forEach(function (field) {\n    mustNot.push(fieldValuesToQuery(field, fields.mustNot.or[field], 'or'));\n  });\n  var bool = {};\n  if (must.length !== 0) {\n    bool.must = must;\n  }\n  if (mustNot.length !== 0) {\n    bool.must_not = mustNot;\n  }\n  return bool;\n};\nvar EMPTY_TERMS = {\n  must: [],\n  mustNot: []\n};\nvar EMPTY_FIELDS = {\n  must: {\n    and: {},\n    or: {}\n  },\n  mustNot: {\n    and: {},\n    or: {}\n  }\n};\nexport var astToEsQueryDsl = function astToEsQueryDsl(ast) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  if (ast.clauses.length === 0) {\n    return {\n      match_all: {}\n    };\n  }\n  var terms = collectTerms(ast.getTermClauses());\n  var fields = collectFields(ast.getFieldClauses());\n  var is = ast.getIsClauses();\n  var matchesBool = clausesToEsQueryDsl({\n    terms: terms,\n    fields: fields,\n    is: is\n  }, options);\n  var hasTopMatches = Object.keys(matchesBool).length > 0;\n  var groupClauses = ast.getGroupClauses();\n  if (groupClauses.length === 0) {\n    // there are no GroupClauses, everything at top level is combined as a must\n    return {\n      bool: matchesBool\n    };\n  } else {\n    // there is at least one GroupClause, wrap the above clauses in another layer and append the ORs\n    var must = groupClauses.reduce(function (must, groupClause) {\n      var clauses = groupClause.value.reduce(function (clauses, clause) {\n        if (AST.Term.isInstance(clause)) {\n          clauses.push(clausesToEsQueryDsl({\n            terms: collectTerms([clause]),\n            fields: EMPTY_FIELDS,\n            is: []\n          }));\n        } else if (AST.Field.isInstance(clause)) {\n          clauses.push(clausesToEsQueryDsl({\n            terms: EMPTY_TERMS,\n            fields: collectFields([clause]),\n            is: []\n          }));\n        } else if (AST.Is.isInstance(clause)) {\n          clauses.push(clausesToEsQueryDsl({\n            terms: EMPTY_TERMS,\n            fields: EMPTY_FIELDS,\n            is: [clause]\n          }));\n        }\n        return clauses;\n      }, []);\n      must.push({\n        bool: {\n          should: clauses.map(function (clause) {\n            return {\n              bool: clause\n            };\n          })\n        }\n      });\n      return must;\n    }, hasTopMatches // only include the first match group if there are any conditions\n    ? [{\n      bool: matchesBool\n    }] : []);\n    return {\n      bool: {\n        must: must\n      }\n    };\n  }\n};","map":{"version":3,"names":["_typeof","obj","Symbol","iterator","constructor","prototype","_createForOfIteratorHelper","o","allowArrayLike","it","Array","isArray","_unsupportedIterableToArray","length","i","F","s","n","done","value","e","_e","f","TypeError","normalCompletion","didErr","err","call","step","next","_e2","return","_defineProperty","key","_toPropertyKey","Object","defineProperty","enumerable","configurable","writable","arg","_toPrimitive","String","input","hint","prim","toPrimitive","undefined","res","Number","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","minLen","_arrayLikeToArray","toString","slice","name","from","test","iter","len","arr2","isDateLike","isString","keysOf","AST","printIso8601","dateValue","isDateValue","processDateOperation","operator","granularity","resolve","expression","Operator","GT","concat","es","GTE","LT","LTE","_termValuesToQuery","values","options","body","query","map","match","join","defaultFields","fields","simple_query_string","_fieldValuesToQuery","field","operations","andOr","queries","forEach","EQ","_terms","phrases","dates","push","bool","apply","phrase","match_phrase","operation","range","_isFlagToQuery","flag","on","term","collectTerms","clauses","must","mustNot","_iterator","_step","clause","Match","isMustClause","collectFields","fieldArray","reduce","_fieldArray","or","and","_fieldArray2","clausesToEsQueryDsl","_ref","terms","is","arguments","extraMustQueries","extraMustNotQueries","termValuesToQuery","fieldValuesToQuery","isFlagToQuery","termMustQuery","keys","termMustNotQuery","must_not","EMPTY_TERMS","EMPTY_FIELDS","astToEsQueryDsl","ast","match_all","getTermClauses","getFieldClauses","getIsClauses","matchesBool","hasTopMatches","groupClauses","getGroupClauses","groupClause","Term","isInstance","Field","Is","should"],"sources":["/home/runner/work/broadway-lite/broadway-lite/node_modules/@elastic/eui/es/components/search_bar/query/ast_to_es_query_dsl.js"],"sourcesContent":["function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n\nimport { isArray, isDateLike, isString } from '../../../services/predicate';\nimport { keysOf } from '../../common';\nimport { AST } from './ast';\nimport { printIso8601 } from './date_format';\nimport { dateValue, isDateValue } from './date_value';\nvar processDateOperation = function processDateOperation(value, operator) {\n  var granularity = value.granularity,\n    resolve = value.resolve;\n  var expression = printIso8601(resolve());\n  if (!granularity) {\n    return {\n      operator: operator,\n      expression: expression\n    };\n  }\n  switch (operator) {\n    case AST.Operator.GT:\n      expression = \"\".concat(expression, \"||+1\").concat(granularity.es, \"/\").concat(granularity.es);\n      return {\n        operator: AST.Operator.GTE,\n        expression: expression\n      };\n    case AST.Operator.GTE:\n      expression = \"\".concat(expression, \"||/\").concat(granularity.es);\n      return {\n        operator: operator,\n        expression: expression\n      };\n    case AST.Operator.LT:\n      expression = \"\".concat(expression, \"||/\").concat(granularity.es);\n      return {\n        operator: operator,\n        expression: expression\n      };\n    case AST.Operator.LTE:\n      expression = \"\".concat(expression, \"||+1\").concat(granularity.es, \"/\").concat(granularity.es);\n      return {\n        operator: AST.Operator.LT,\n        expression: expression\n      };\n    default:\n      expression = \"\".concat(expression, \"||/\").concat(granularity.es);\n      return {\n        expression: expression\n      };\n  }\n};\nexport var _termValuesToQuery = function _termValuesToQuery(values, options) {\n  var body = {\n    query: values.map(function (value) {\n      if (isString(value) && value.match(/\\s/)) {\n        return \"+\\\"\".concat(value, \"\\\"\");\n      }\n      return \"+\".concat(value);\n    }).join(' ')\n  };\n  if (body.query === '') {\n    return;\n  }\n  if (options.defaultFields) {\n    body.fields = options.defaultFields;\n  }\n  return {\n    simple_query_string: body\n  };\n};\nexport var _fieldValuesToQuery = function _fieldValuesToQuery(field, operations, andOr) {\n  var queries = [];\n  keysOf(operations).forEach(function (operator) {\n    var values = operations[operator];\n    switch (operator) {\n      case AST.Operator.EQ:\n        var _terms = [];\n        var phrases = [];\n        var dates = [];\n        values.forEach(function (value) {\n          if (isDateValue(value)) {\n            dates.push(value);\n          } else if (isDateLike(value)) {\n            dates.push(dateValue(value));\n          } else if (isString(value) && value.match(/\\s/)) {\n            phrases.push(value);\n          } else {\n            _terms.push(value);\n          }\n        });\n        if (_terms.length > 1) {\n          queries.push({\n            bool: _defineProperty({}, andOr === 'and' ? 'must' : 'should', _toConsumableArray(_terms.map(function (value) {\n              return {\n                match: _defineProperty({}, field, {\n                  query: value,\n                  operator: andOr\n                })\n              };\n            })))\n          });\n        } else if (_terms.length === 1) {\n          queries.push({\n            match: _defineProperty({}, field, {\n              query: _terms[0],\n              operator: andOr\n            })\n          });\n        }\n        if (phrases.length > 0) {\n          queries.push.apply(queries, _toConsumableArray(phrases.map(function (phrase) {\n            return {\n              match_phrase: _defineProperty({}, field, phrase)\n            };\n          })));\n        }\n        if (dates.length > 0) {\n          queries.push.apply(queries, _toConsumableArray(dates.map(function (value) {\n            return {\n              match: _defineProperty({}, field, processDateOperation(value).expression)\n            };\n          })));\n        }\n        break;\n      default:\n        values.forEach(function (value) {\n          if (isDateValue(value)) {\n            var operation = processDateOperation(value, operator);\n            queries.push({\n              range: _defineProperty({}, field, _defineProperty({}, operation.operator, operation.expression))\n            });\n          } else {\n            queries.push({\n              range: _defineProperty({}, field, _defineProperty({}, operator, value))\n            });\n          }\n        });\n    }\n  });\n  if (queries.length === 1) {\n    return queries[0];\n  }\n  var key = andOr === 'and' ? 'must' : 'should';\n  return {\n    bool: _defineProperty({}, key, [].concat(queries))\n  };\n};\nexport var _isFlagToQuery = function _isFlagToQuery(flag, on) {\n  return {\n    term: _defineProperty({}, flag, on)\n  };\n};\nvar collectTerms = function collectTerms(clauses) {\n  var values = {\n    must: [],\n    mustNot: []\n  };\n  var _iterator = _createForOfIteratorHelper(clauses),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var clause = _step.value;\n      if (AST.Match.isMustClause(clause)) {\n        values.must.push(clause.value);\n      } else {\n        values.mustNot.push(clause.value);\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  return values;\n};\nvar collectFields = function collectFields(clauses) {\n  var fieldArray = function fieldArray(obj, field, operator) {\n    if (!obj[field]) {\n      obj[field] = {};\n    }\n    if (!obj[field][operator]) {\n      obj[field][operator] = [];\n    }\n    return obj[field][operator];\n  };\n  return clauses.reduce(function (fields, clause) {\n    if (AST.Match.isMustClause(clause)) {\n      if (isArray(clause.value)) {\n        var _fieldArray;\n        (_fieldArray = fieldArray(fields.must.or, clause.field, clause.operator)).push.apply(_fieldArray, _toConsumableArray(clause.value));\n      } else {\n        fieldArray(fields.must.and, clause.field, clause.operator).push(clause.value);\n      }\n    } else {\n      if (isArray(clause.value)) {\n        var _fieldArray2;\n        (_fieldArray2 = fieldArray(fields.mustNot.or, clause.field, clause.operator)).push.apply(_fieldArray2, _toConsumableArray(clause.value));\n      } else {\n        fieldArray(fields.mustNot.and, clause.field, clause.operator).push(clause.value);\n      }\n    }\n    return fields;\n  }, {\n    must: {\n      and: {},\n      or: {}\n    },\n    mustNot: {\n      and: {},\n      or: {}\n    }\n  });\n};\nvar clausesToEsQueryDsl = function clausesToEsQueryDsl(_ref) {\n  var fields = _ref.fields,\n    terms = _ref.terms,\n    is = _ref.is;\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var extraMustQueries = options.extraMustQueries || [];\n  var extraMustNotQueries = options.extraMustNotQueries || [];\n  var termValuesToQuery = options.termValuesToQuery || _termValuesToQuery;\n  var fieldValuesToQuery = options.fieldValuesToQuery || _fieldValuesToQuery;\n  var isFlagToQuery = options.isFlagToQuery || _isFlagToQuery;\n  var must = [];\n  must.push.apply(must, _toConsumableArray(extraMustQueries));\n  var termMustQuery = termValuesToQuery(terms.must, options);\n  if (termMustQuery) {\n    must.push(termMustQuery);\n  }\n  Object.keys(fields.must.and).forEach(function (field) {\n    must.push(fieldValuesToQuery(field, fields.must.and[field], 'and'));\n  });\n  Object.keys(fields.must.or).forEach(function (field) {\n    must.push(fieldValuesToQuery(field, fields.must.or[field], 'or'));\n  });\n  is.forEach(function (clause) {\n    must.push(isFlagToQuery(clause.flag, AST.Match.isMustClause(clause)));\n  });\n  var mustNot = [];\n  mustNot.push.apply(mustNot, _toConsumableArray(extraMustNotQueries));\n  var termMustNotQuery = termValuesToQuery(terms.mustNot, options);\n  if (termMustNotQuery) {\n    mustNot.push(termMustNotQuery);\n  }\n  Object.keys(fields.mustNot.and).forEach(function (field) {\n    mustNot.push(fieldValuesToQuery(field, fields.mustNot.and[field], 'and'));\n  });\n  Object.keys(fields.mustNot.or).forEach(function (field) {\n    mustNot.push(fieldValuesToQuery(field, fields.mustNot.or[field], 'or'));\n  });\n  var bool = {};\n  if (must.length !== 0) {\n    bool.must = must;\n  }\n  if (mustNot.length !== 0) {\n    bool.must_not = mustNot;\n  }\n  return bool;\n};\nvar EMPTY_TERMS = {\n  must: [],\n  mustNot: []\n};\nvar EMPTY_FIELDS = {\n  must: {\n    and: {},\n    or: {}\n  },\n  mustNot: {\n    and: {},\n    or: {}\n  }\n};\nexport var astToEsQueryDsl = function astToEsQueryDsl(ast) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  if (ast.clauses.length === 0) {\n    return {\n      match_all: {}\n    };\n  }\n  var terms = collectTerms(ast.getTermClauses());\n  var fields = collectFields(ast.getFieldClauses());\n  var is = ast.getIsClauses();\n  var matchesBool = clausesToEsQueryDsl({\n    terms: terms,\n    fields: fields,\n    is: is\n  }, options);\n  var hasTopMatches = Object.keys(matchesBool).length > 0;\n  var groupClauses = ast.getGroupClauses();\n  if (groupClauses.length === 0) {\n    // there are no GroupClauses, everything at top level is combined as a must\n    return {\n      bool: matchesBool\n    };\n  } else {\n    // there is at least one GroupClause, wrap the above clauses in another layer and append the ORs\n    var must = groupClauses.reduce(function (must, groupClause) {\n      var clauses = groupClause.value.reduce(function (clauses, clause) {\n        if (AST.Term.isInstance(clause)) {\n          clauses.push(clausesToEsQueryDsl({\n            terms: collectTerms([clause]),\n            fields: EMPTY_FIELDS,\n            is: []\n          }));\n        } else if (AST.Field.isInstance(clause)) {\n          clauses.push(clausesToEsQueryDsl({\n            terms: EMPTY_TERMS,\n            fields: collectFields([clause]),\n            is: []\n          }));\n        } else if (AST.Is.isInstance(clause)) {\n          clauses.push(clausesToEsQueryDsl({\n            terms: EMPTY_TERMS,\n            fields: EMPTY_FIELDS,\n            is: [clause]\n          }));\n        }\n        return clauses;\n      }, []);\n      must.push({\n        bool: {\n          should: clauses.map(function (clause) {\n            return {\n              bool: clause\n            };\n          })\n        }\n      });\n      return must;\n    }, hasTopMatches // only include the first match group if there are any conditions\n    ? [{\n      bool: matchesBool\n    }] : []);\n    return {\n      bool: {\n        must: must\n      }\n    };\n  }\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}