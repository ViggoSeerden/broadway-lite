{"ast":null,"code":"function _EMOTION_STRINGIFIED_CSS_ERROR__() {\n  return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";\n}\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n\nimport { css } from '@emotion/react';\nimport { euiFontSize, logicalTextAlignCSS } from '../../global_styling';\nimport { euiTitle } from '../title/title.styles';\nvar _ref = process.env.NODE_ENV === \"production\" ? {\n  name: \"1yn9gig-inline\",\n  styles: \"display:inline;label:inline;\"\n} : {\n  name: \"1yn9gig-inline\",\n  styles: \"display:inline;label:inline;\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n};\nexport var euiDescriptionListDescriptionStyles = function euiDescriptionListDescriptionStyles(euiThemeContext) {\n  return {\n    euiDescriptionList__description: /*#__PURE__*/css(\";label:euiDescriptionList__description;\"),\n    // Types\n    row: /*#__PURE__*/css(\";label:row;\"),\n    column: /*#__PURE__*/css(\";label:column;\"),\n    inline: _ref,\n    // This nested block handles just the font styling based on compressed and reverse\n    fontStyles: {\n      normal: /*#__PURE__*/css(euiFontSize(euiThemeContext, 's'), \";;label:normal;\"),\n      reverse: /*#__PURE__*/css(euiTitle(euiThemeContext, 'xs'), \";;label:reverse;\"),\n      compressed: /*#__PURE__*/css(euiTitle(euiThemeContext, 'xxs'), \";;label:compressed;\")\n    },\n    // Nested inline styles for type and font\n    inlineStyles: {\n      compressed: /*#__PURE__*/css(euiFontSize(euiThemeContext, 'xs'), \";;label:compressed;\"),\n      normal: /*#__PURE__*/css(euiFontSize(euiThemeContext, 's'), \";;label:normal;\")\n    },\n    // Column types should align description text to the left when EuiDecriptionList is centered\n    left: /*#__PURE__*/css(logicalTextAlignCSS('left'), \";;label:left;\")\n  };\n};","map":{"version":3,"names":["_EMOTION_STRINGIFIED_CSS_ERROR__","css","euiFontSize","logicalTextAlignCSS","euiTitle","_ref","process","env","NODE_ENV","name","styles","toString","euiDescriptionListDescriptionStyles","euiThemeContext","euiDescriptionList__description","row","column","inline","fontStyles","normal","reverse","compressed","inlineStyles","left"],"sources":["/home/runner/work/broadway-lite/broadway-lite/node_modules/@elastic/eui/es/components/description_list/description_list_description.styles.js"],"sourcesContent":["function _EMOTION_STRINGIFIED_CSS_ERROR__() { return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\"; }\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n\nimport { css } from '@emotion/react';\nimport { euiFontSize, logicalTextAlignCSS } from '../../global_styling';\nimport { euiTitle } from '../title/title.styles';\nvar _ref = process.env.NODE_ENV === \"production\" ? {\n  name: \"1yn9gig-inline\",\n  styles: \"display:inline;label:inline;\"\n} : {\n  name: \"1yn9gig-inline\",\n  styles: \"display:inline;label:inline;\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n};\nexport var euiDescriptionListDescriptionStyles = function euiDescriptionListDescriptionStyles(euiThemeContext) {\n  return {\n    euiDescriptionList__description: /*#__PURE__*/css(\";label:euiDescriptionList__description;\"),\n    // Types\n    row: /*#__PURE__*/css(\";label:row;\"),\n    column: /*#__PURE__*/css(\";label:column;\"),\n    inline: _ref,\n    // This nested block handles just the font styling based on compressed and reverse\n    fontStyles: {\n      normal: /*#__PURE__*/css(euiFontSize(euiThemeContext, 's'), \";;label:normal;\"),\n      reverse: /*#__PURE__*/css(euiTitle(euiThemeContext, 'xs'), \";;label:reverse;\"),\n      compressed: /*#__PURE__*/css(euiTitle(euiThemeContext, 'xxs'), \";;label:compressed;\")\n    },\n    // Nested inline styles for type and font\n    inlineStyles: {\n      compressed: /*#__PURE__*/css(euiFontSize(euiThemeContext, 'xs'), \";;label:compressed;\"),\n      normal: /*#__PURE__*/css(euiFontSize(euiThemeContext, 's'), \";;label:normal;\")\n    },\n    // Column types should align description text to the left when EuiDecriptionList is centered\n    left: /*#__PURE__*/css(logicalTextAlignCSS('left'), \";;label:left;\")\n  };\n};"],"mappings":"AAAA,SAASA,gCAAgCA,CAAA,EAAG;EAAE,OAAO,iOAAiO;AAAE;AACxR;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,GAAG,QAAQ,gBAAgB;AACpC,SAASC,WAAW,EAAEC,mBAAmB,QAAQ,sBAAsB;AACvE,SAASC,QAAQ,QAAQ,uBAAuB;AAChD,IAAIC,IAAI,GAAGC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAG;EACjDC,IAAI,EAAE,gBAAgB;EACtBC,MAAM,EAAE;AACV,CAAC,GAAG;EACFD,IAAI,EAAE,gBAAgB;EACtBC,MAAM,EAAE,8BAA8B;EACtCC,QAAQ,EAAEX;AACZ,CAAC;AACD,OAAO,IAAIY,mCAAmC,GAAG,SAASA,mCAAmCA,CAACC,eAAe,EAAE;EAC7G,OAAO;IACLC,+BAA+B,EAAE,aAAab,GAAG,CAAC,yCAAyC,CAAC;IAC5F;IACAc,GAAG,EAAE,aAAad,GAAG,CAAC,aAAa,CAAC;IACpCe,MAAM,EAAE,aAAaf,GAAG,CAAC,gBAAgB,CAAC;IAC1CgB,MAAM,EAAEZ,IAAI;IACZ;IACAa,UAAU,EAAE;MACVC,MAAM,EAAE,aAAalB,GAAG,CAACC,WAAW,CAACW,eAAe,EAAE,GAAG,CAAC,EAAE,iBAAiB,CAAC;MAC9EO,OAAO,EAAE,aAAanB,GAAG,CAACG,QAAQ,CAACS,eAAe,EAAE,IAAI,CAAC,EAAE,kBAAkB,CAAC;MAC9EQ,UAAU,EAAE,aAAapB,GAAG,CAACG,QAAQ,CAACS,eAAe,EAAE,KAAK,CAAC,EAAE,qBAAqB;IACtF,CAAC;IACD;IACAS,YAAY,EAAE;MACZD,UAAU,EAAE,aAAapB,GAAG,CAACC,WAAW,CAACW,eAAe,EAAE,IAAI,CAAC,EAAE,qBAAqB,CAAC;MACvFM,MAAM,EAAE,aAAalB,GAAG,CAACC,WAAW,CAACW,eAAe,EAAE,GAAG,CAAC,EAAE,iBAAiB;IAC/E,CAAC;IACD;IACAU,IAAI,EAAE,aAAatB,GAAG,CAACE,mBAAmB,CAAC,MAAM,CAAC,EAAE,eAAe;EACrE,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}