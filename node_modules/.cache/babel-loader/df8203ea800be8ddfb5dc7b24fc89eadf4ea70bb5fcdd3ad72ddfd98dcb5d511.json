{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n\nimport React, { isValidElement } from 'react';\nimport { EuiScreenReaderOnly } from '../../accessibility';\nimport { IS_JEST_ENVIRONMENT } from '../../../utils';\n\n// When below this number the grid only shows the right control icon buttons\nimport { jsx as ___EmotionJSX } from \"@emotion/react\";\nvar MINIMUM_WIDTH_FOR_GRID_CONTROLS = 479;\nexport var EuiDataGridToolbar = function EuiDataGridToolbar(_ref) {\n  var gridWidth = _ref.gridWidth,\n    _ref$minSizeForContro = _ref.minSizeForControls,\n    minSizeForControls = _ref$minSizeForContro === void 0 ? MINIMUM_WIDTH_FOR_GRID_CONTROLS : _ref$minSizeForContro,\n    toolbarVisibility = _ref.toolbarVisibility,\n    isFullScreen = _ref.isFullScreen,\n    fullScreenSelector = _ref.fullScreenSelector,\n    keyboardShortcuts = _ref.keyboardShortcuts,\n    displaySelector = _ref.displaySelector,\n    columnSelector = _ref.columnSelector,\n    columnSorting = _ref.columnSorting,\n    renderCustomToolbar = _ref.renderCustomToolbar;\n  // Enables/disables grid controls based on available width\n  var hasRoomForGridControls = IS_JEST_ENVIRONMENT ? true : gridWidth > minSizeForControls || isFullScreen;\n  var columnControl = checkOrDefaultToolBarDisplayOptions(toolbarVisibility, 'showColumnSelector') ? columnSelector : null;\n  var columnSortingControl = checkOrDefaultToolBarDisplayOptions(toolbarVisibility, 'showSortSelector') ? columnSorting : null;\n  var keyboardShortcutsControl = checkOrDefaultToolBarDisplayOptions(toolbarVisibility, 'showKeyboardShortcuts') ? keyboardShortcuts : ___EmotionJSX(EuiScreenReaderOnly, {\n    showOnFocus: true\n  }, ___EmotionJSX(\"span\", null, keyboardShortcuts));\n  var displayControl = checkOrDefaultToolBarDisplayOptions(toolbarVisibility, 'showDisplaySelector') ? displaySelector : null;\n  var fullScreenControl = checkOrDefaultToolBarDisplayOptions(toolbarVisibility, 'showFullScreenSelector') ? fullScreenSelector : null;\n  if (renderCustomToolbar) {\n    return renderCustomToolbar({\n      hasRoomForGridControls: hasRoomForGridControls,\n      columnControl: columnControl,\n      columnSortingControl: columnSortingControl,\n      keyboardShortcutsControl: keyboardShortcutsControl,\n      displayControl: displayControl,\n      fullScreenControl: fullScreenControl\n    });\n  }\n  return ___EmotionJSX(\"div\", {\n    className: \"euiDataGrid__controls\",\n    \"data-test-subj\": \"dataGridControls\"\n  }, hasRoomForGridControls && ___EmotionJSX(\"div\", {\n    className: \"euiDataGrid__leftControls\"\n  }, renderAdditionalControls(toolbarVisibility, 'left.prepend'), columnControl, columnSortingControl, renderAdditionalControls(toolbarVisibility, 'left.append')), ___EmotionJSX(\"div\", {\n    className: \"euiDataGrid__rightControls\"\n  }, renderAdditionalControls(toolbarVisibility, 'right'), keyboardShortcutsControl, displayControl, fullScreenControl));\n};\n\n/**\n * Toolbar utilities\n */\n\n// Typeguards to see if toolbarVisibility has a certain boolean property assigned\n// If not, just set it to true and assume it's OK to show\nfunction objectHasKey(object, key) {\n  return object.hasOwnProperty(key);\n}\nexport function checkOrDefaultToolBarDisplayOptions(arg, option) {\n  if (arg === undefined) {\n    return true;\n  } else if (typeof arg === 'boolean') {\n    return arg;\n  } else if (objectHasKey(arg, option)) {\n    return arg[option];\n  } else {\n    return true;\n  }\n}\nexport var renderAdditionalControls = function renderAdditionalControls(toolbarVisibility, position) {\n  if (typeof toolbarVisibility === 'boolean') return null;\n  var _ref2 = toolbarVisibility || {},\n    additionalControls = _ref2.additionalControls;\n  if (!additionalControls) return null;\n\n  // API backwards compatability: if the consumer passed a single ReactNode\n  // to `additionalControls`, default to the left append position.\n  if ( /*#__PURE__*/isValidElement(additionalControls) && position === 'left.append') {\n    return additionalControls;\n  }\n  if (_typeof(additionalControls) !== 'object') {\n    return null;\n  }\n  var handleLeftObjectConfig = function handleLeftObjectConfig(leftConfig) {\n    if (position === 'left.prepend') {\n      return leftConfig.prepend;\n    }\n    if (position === 'left.append') {\n      return leftConfig.append;\n    }\n  };\n  var handleObjectConfig = function handleObjectConfig(additionalControls) {\n    if (position === 'right') {\n      return additionalControls.right;\n    }\n    // API backwards compatability: If the consumer passed a single ReactNode\n    // to `additionalControls.left`, default to the left append position\n    if ( /*#__PURE__*/isValidElement(additionalControls.left) && position === 'left.append') {\n      return additionalControls.left;\n    }\n    if (additionalControls.left && _typeof(additionalControls.left) === 'object') {\n      return handleLeftObjectConfig(additionalControls.left);\n    }\n  };\n  var rendered = handleObjectConfig(additionalControls);\n  return rendered || null;\n};\n\n/**\n * Utility helper for selectors/controls that allow nested options\n * (e.g. column selector, display selector)\n */\n\nexport function getNestedObjectOptions(controlOption, objectKey) {\n  var _controlOption$object;\n  // If the config is a boolean, nested options follow that boolean\n  if (typeof controlOption === 'boolean') return controlOption;\n  // If config is not defined, default to enabled\n  if (controlOption == null) return true;\n  // Otherwise, type should be an object of boolean values - dive into it and return the value\n  return !!((_controlOption$object = controlOption[objectKey]) !== null && _controlOption$object !== void 0 ? _controlOption$object : true);\n}","map":{"version":3,"names":["_typeof","obj","Symbol","iterator","constructor","prototype","React","isValidElement","EuiScreenReaderOnly","IS_JEST_ENVIRONMENT","jsx","___EmotionJSX","MINIMUM_WIDTH_FOR_GRID_CONTROLS","EuiDataGridToolbar","_ref","gridWidth","_ref$minSizeForContro","minSizeForControls","toolbarVisibility","isFullScreen","fullScreenSelector","keyboardShortcuts","displaySelector","columnSelector","columnSorting","renderCustomToolbar","hasRoomForGridControls","columnControl","checkOrDefaultToolBarDisplayOptions","columnSortingControl","keyboardShortcutsControl","showOnFocus","displayControl","fullScreenControl","className","renderAdditionalControls","objectHasKey","object","key","hasOwnProperty","arg","option","undefined","position","_ref2","additionalControls","handleLeftObjectConfig","leftConfig","prepend","append","handleObjectConfig","right","left","rendered","getNestedObjectOptions","controlOption","objectKey","_controlOption$object"],"sources":["/home/runner/work/broadway-lite/broadway-lite/node_modules/@elastic/eui/es/components/datagrid/controls/data_grid_toolbar.js"],"sourcesContent":["function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n\nimport React, { isValidElement } from 'react';\nimport { EuiScreenReaderOnly } from '../../accessibility';\nimport { IS_JEST_ENVIRONMENT } from '../../../utils';\n\n// When below this number the grid only shows the right control icon buttons\nimport { jsx as ___EmotionJSX } from \"@emotion/react\";\nvar MINIMUM_WIDTH_FOR_GRID_CONTROLS = 479;\nexport var EuiDataGridToolbar = function EuiDataGridToolbar(_ref) {\n  var gridWidth = _ref.gridWidth,\n    _ref$minSizeForContro = _ref.minSizeForControls,\n    minSizeForControls = _ref$minSizeForContro === void 0 ? MINIMUM_WIDTH_FOR_GRID_CONTROLS : _ref$minSizeForContro,\n    toolbarVisibility = _ref.toolbarVisibility,\n    isFullScreen = _ref.isFullScreen,\n    fullScreenSelector = _ref.fullScreenSelector,\n    keyboardShortcuts = _ref.keyboardShortcuts,\n    displaySelector = _ref.displaySelector,\n    columnSelector = _ref.columnSelector,\n    columnSorting = _ref.columnSorting,\n    renderCustomToolbar = _ref.renderCustomToolbar;\n  // Enables/disables grid controls based on available width\n  var hasRoomForGridControls = IS_JEST_ENVIRONMENT ? true : gridWidth > minSizeForControls || isFullScreen;\n  var columnControl = checkOrDefaultToolBarDisplayOptions(toolbarVisibility, 'showColumnSelector') ? columnSelector : null;\n  var columnSortingControl = checkOrDefaultToolBarDisplayOptions(toolbarVisibility, 'showSortSelector') ? columnSorting : null;\n  var keyboardShortcutsControl = checkOrDefaultToolBarDisplayOptions(toolbarVisibility, 'showKeyboardShortcuts') ? keyboardShortcuts : ___EmotionJSX(EuiScreenReaderOnly, {\n    showOnFocus: true\n  }, ___EmotionJSX(\"span\", null, keyboardShortcuts));\n  var displayControl = checkOrDefaultToolBarDisplayOptions(toolbarVisibility, 'showDisplaySelector') ? displaySelector : null;\n  var fullScreenControl = checkOrDefaultToolBarDisplayOptions(toolbarVisibility, 'showFullScreenSelector') ? fullScreenSelector : null;\n  if (renderCustomToolbar) {\n    return renderCustomToolbar({\n      hasRoomForGridControls: hasRoomForGridControls,\n      columnControl: columnControl,\n      columnSortingControl: columnSortingControl,\n      keyboardShortcutsControl: keyboardShortcutsControl,\n      displayControl: displayControl,\n      fullScreenControl: fullScreenControl\n    });\n  }\n  return ___EmotionJSX(\"div\", {\n    className: \"euiDataGrid__controls\",\n    \"data-test-subj\": \"dataGridControls\"\n  }, hasRoomForGridControls && ___EmotionJSX(\"div\", {\n    className: \"euiDataGrid__leftControls\"\n  }, renderAdditionalControls(toolbarVisibility, 'left.prepend'), columnControl, columnSortingControl, renderAdditionalControls(toolbarVisibility, 'left.append')), ___EmotionJSX(\"div\", {\n    className: \"euiDataGrid__rightControls\"\n  }, renderAdditionalControls(toolbarVisibility, 'right'), keyboardShortcutsControl, displayControl, fullScreenControl));\n};\n\n/**\n * Toolbar utilities\n */\n\n// Typeguards to see if toolbarVisibility has a certain boolean property assigned\n// If not, just set it to true and assume it's OK to show\nfunction objectHasKey(object, key) {\n  return object.hasOwnProperty(key);\n}\nexport function checkOrDefaultToolBarDisplayOptions(arg, option) {\n  if (arg === undefined) {\n    return true;\n  } else if (typeof arg === 'boolean') {\n    return arg;\n  } else if (objectHasKey(arg, option)) {\n    return arg[option];\n  } else {\n    return true;\n  }\n}\nexport var renderAdditionalControls = function renderAdditionalControls(toolbarVisibility, position) {\n  if (typeof toolbarVisibility === 'boolean') return null;\n  var _ref2 = toolbarVisibility || {},\n    additionalControls = _ref2.additionalControls;\n  if (!additionalControls) return null;\n\n  // API backwards compatability: if the consumer passed a single ReactNode\n  // to `additionalControls`, default to the left append position.\n  if ( /*#__PURE__*/isValidElement(additionalControls) && position === 'left.append') {\n    return additionalControls;\n  }\n  if (_typeof(additionalControls) !== 'object') {\n    return null;\n  }\n  var handleLeftObjectConfig = function handleLeftObjectConfig(leftConfig) {\n    if (position === 'left.prepend') {\n      return leftConfig.prepend;\n    }\n    if (position === 'left.append') {\n      return leftConfig.append;\n    }\n  };\n  var handleObjectConfig = function handleObjectConfig(additionalControls) {\n    if (position === 'right') {\n      return additionalControls.right;\n    }\n    // API backwards compatability: If the consumer passed a single ReactNode\n    // to `additionalControls.left`, default to the left append position\n    if ( /*#__PURE__*/isValidElement(additionalControls.left) && position === 'left.append') {\n      return additionalControls.left;\n    }\n    if (additionalControls.left && _typeof(additionalControls.left) === 'object') {\n      return handleLeftObjectConfig(additionalControls.left);\n    }\n  };\n  var rendered = handleObjectConfig(additionalControls);\n  return rendered || null;\n};\n\n/**\n * Utility helper for selectors/controls that allow nested options\n * (e.g. column selector, display selector)\n */\n\nexport function getNestedObjectOptions(controlOption, objectKey) {\n  var _controlOption$object;\n  // If the config is a boolean, nested options follow that boolean\n  if (typeof controlOption === 'boolean') return controlOption;\n  // If config is not defined, default to enabled\n  if (controlOption == null) return true;\n  // Otherwise, type should be an object of boolean values - dive into it and return the value\n  return !!((_controlOption$object = controlOption[objectKey]) !== null && _controlOption$object !== void 0 ? _controlOption$object : true);\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}