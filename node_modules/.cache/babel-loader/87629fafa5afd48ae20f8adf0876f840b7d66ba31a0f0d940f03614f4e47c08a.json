{"ast":null,"code":"function _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n\nexport var transformForCaseSensitivity = function transformForCaseSensitivity(string, isCaseSensitive) {\n  return isCaseSensitive ? string : string.toLowerCase();\n};\nexport var flattenOptionGroups = function flattenOptionGroups(optionsOrGroups) {\n  return optionsOrGroups.reduce(function (options, optionOrGroup) {\n    if (optionOrGroup.options) {\n      options = options.concat(optionOrGroup.options);\n    } else {\n      options.push(optionOrGroup);\n    }\n    return options;\n  }, []);\n};\nexport var getSelectedOptionForSearchValue = function getSelectedOptionForSearchValue(_ref) {\n  var isCaseSensitive = _ref.isCaseSensitive,\n    searchValue = _ref.searchValue,\n    selectedOptions = _ref.selectedOptions,\n    optionKey = _ref.optionKey;\n  var normalizedSearchValue = transformForCaseSensitivity(searchValue, isCaseSensitive);\n  return selectedOptions.find(function (option) {\n    var normalizedOption = transformForCaseSensitivity(option.label, isCaseSensitive);\n    return normalizedOption === normalizedSearchValue && (!optionKey || option.key === optionKey);\n  });\n};\nvar collectMatchingOption = function collectMatchingOption(_ref2) {\n  var accumulator = _ref2.accumulator,\n    option = _ref2.option,\n    selectedOptions = _ref2.selectedOptions,\n    normalizedSearchValue = _ref2.normalizedSearchValue,\n    isCaseSensitive = _ref2.isCaseSensitive,\n    isPreFiltered = _ref2.isPreFiltered,\n    showPrevSelected = _ref2.showPrevSelected;\n  // Only show options which haven't yet been selected unless requested.\n  var selectedOption = getSelectedOptionForSearchValue({\n    isCaseSensitive: isCaseSensitive,\n    searchValue: option.label,\n    selectedOptions: selectedOptions,\n    optionKey: option.key\n  });\n  if (selectedOption && !showPrevSelected) {\n    return false;\n  }\n\n  // If the options have already been pre-filtered then we can skip filtering against the search value.\n  if (isPreFiltered) {\n    accumulator.push(option);\n    return;\n  }\n  if (!normalizedSearchValue) {\n    accumulator.push(option);\n    return;\n  }\n  var normalizedOption = transformForCaseSensitivity(option.label.trim(), isCaseSensitive);\n  if (normalizedOption.includes(normalizedSearchValue)) {\n    accumulator.push(option);\n  }\n};\nexport var getMatchingOptions = function getMatchingOptions(_ref3) {\n  var options = _ref3.options,\n    selectedOptions = _ref3.selectedOptions,\n    searchValue = _ref3.searchValue,\n    _ref3$isCaseSensitive = _ref3.isCaseSensitive,\n    isCaseSensitive = _ref3$isCaseSensitive === void 0 ? false : _ref3$isCaseSensitive,\n    _ref3$isPreFiltered = _ref3.isPreFiltered,\n    isPreFiltered = _ref3$isPreFiltered === void 0 ? false : _ref3$isPreFiltered,\n    _ref3$showPrevSelecte = _ref3.showPrevSelected,\n    showPrevSelected = _ref3$showPrevSelecte === void 0 ? false : _ref3$showPrevSelecte,\n    _ref3$sortMatchesBy = _ref3.sortMatchesBy,\n    sortMatchesBy = _ref3$sortMatchesBy === void 0 ? 'none' : _ref3$sortMatchesBy;\n  var normalizedSearchValue = transformForCaseSensitivity(searchValue.trim(), isCaseSensitive);\n  var matchingOptions = [];\n  options.forEach(function (option) {\n    if (option.options) {\n      var matchingOptionsForGroup = [];\n      option.options.forEach(function (groupOption) {\n        collectMatchingOption({\n          accumulator: matchingOptionsForGroup,\n          option: groupOption,\n          selectedOptions: selectedOptions,\n          normalizedSearchValue: normalizedSearchValue,\n          isCaseSensitive: isCaseSensitive,\n          isPreFiltered: isPreFiltered,\n          showPrevSelected: showPrevSelected\n        });\n      });\n      if (matchingOptionsForGroup.length > 0) {\n        // Add option for group label\n        matchingOptions.push({\n          key: option.key,\n          label: option.label,\n          isGroupLabelOption: true\n        });\n        // Add matching options for group\n        // use concat over spreading to support large arrays - https://mathiasbynens.be/demo/javascript-argument-count\n        matchingOptions = matchingOptions.concat(matchingOptionsForGroup);\n      }\n    } else {\n      collectMatchingOption({\n        accumulator: matchingOptions,\n        option: option,\n        selectedOptions: selectedOptions,\n        normalizedSearchValue: normalizedSearchValue,\n        isCaseSensitive: isCaseSensitive,\n        isPreFiltered: isPreFiltered,\n        showPrevSelected: showPrevSelected\n      });\n    }\n  });\n  if (sortMatchesBy === 'startsWith') {\n    var refObj = {\n      startWith: [],\n      others: []\n    };\n    matchingOptions.forEach(function (object) {\n      var normalizedLabel = transformForCaseSensitivity(object.label, isCaseSensitive);\n      if (normalizedLabel.startsWith(normalizedSearchValue)) {\n        refObj.startWith.push(object);\n      } else {\n        refObj.others.push(object);\n      }\n    });\n    return [].concat(_toConsumableArray(refObj.startWith), _toConsumableArray(refObj.others));\n  }\n  return matchingOptions;\n};","map":{"version":3,"names":["_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","TypeError","o","minLen","_arrayLikeToArray","n","Object","prototype","toString","call","slice","constructor","name","Array","from","test","iter","Symbol","iterator","isArray","len","length","i","arr2","transformForCaseSensitivity","string","isCaseSensitive","toLowerCase","flattenOptionGroups","optionsOrGroups","reduce","options","optionOrGroup","concat","push","getSelectedOptionForSearchValue","_ref","searchValue","selectedOptions","optionKey","normalizedSearchValue","find","option","normalizedOption","label","key","collectMatchingOption","_ref2","accumulator","isPreFiltered","showPrevSelected","selectedOption","trim","includes","getMatchingOptions","_ref3","_ref3$isCaseSensitive","_ref3$isPreFiltered","_ref3$showPrevSelecte","_ref3$sortMatchesBy","sortMatchesBy","matchingOptions","forEach","matchingOptionsForGroup","groupOption","isGroupLabelOption","refObj","startWith","others","object","normalizedLabel","startsWith"],"sources":["/home/runner/work/broadway-lite/broadway-lite/node_modules/@elastic/eui/es/components/combo_box/matching_options.js"],"sourcesContent":["function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n\nexport var transformForCaseSensitivity = function transformForCaseSensitivity(string, isCaseSensitive) {\n  return isCaseSensitive ? string : string.toLowerCase();\n};\nexport var flattenOptionGroups = function flattenOptionGroups(optionsOrGroups) {\n  return optionsOrGroups.reduce(function (options, optionOrGroup) {\n    if (optionOrGroup.options) {\n      options = options.concat(optionOrGroup.options);\n    } else {\n      options.push(optionOrGroup);\n    }\n    return options;\n  }, []);\n};\nexport var getSelectedOptionForSearchValue = function getSelectedOptionForSearchValue(_ref) {\n  var isCaseSensitive = _ref.isCaseSensitive,\n    searchValue = _ref.searchValue,\n    selectedOptions = _ref.selectedOptions,\n    optionKey = _ref.optionKey;\n  var normalizedSearchValue = transformForCaseSensitivity(searchValue, isCaseSensitive);\n  return selectedOptions.find(function (option) {\n    var normalizedOption = transformForCaseSensitivity(option.label, isCaseSensitive);\n    return normalizedOption === normalizedSearchValue && (!optionKey || option.key === optionKey);\n  });\n};\nvar collectMatchingOption = function collectMatchingOption(_ref2) {\n  var accumulator = _ref2.accumulator,\n    option = _ref2.option,\n    selectedOptions = _ref2.selectedOptions,\n    normalizedSearchValue = _ref2.normalizedSearchValue,\n    isCaseSensitive = _ref2.isCaseSensitive,\n    isPreFiltered = _ref2.isPreFiltered,\n    showPrevSelected = _ref2.showPrevSelected;\n  // Only show options which haven't yet been selected unless requested.\n  var selectedOption = getSelectedOptionForSearchValue({\n    isCaseSensitive: isCaseSensitive,\n    searchValue: option.label,\n    selectedOptions: selectedOptions,\n    optionKey: option.key\n  });\n  if (selectedOption && !showPrevSelected) {\n    return false;\n  }\n\n  // If the options have already been pre-filtered then we can skip filtering against the search value.\n  if (isPreFiltered) {\n    accumulator.push(option);\n    return;\n  }\n  if (!normalizedSearchValue) {\n    accumulator.push(option);\n    return;\n  }\n  var normalizedOption = transformForCaseSensitivity(option.label.trim(), isCaseSensitive);\n  if (normalizedOption.includes(normalizedSearchValue)) {\n    accumulator.push(option);\n  }\n};\nexport var getMatchingOptions = function getMatchingOptions(_ref3) {\n  var options = _ref3.options,\n    selectedOptions = _ref3.selectedOptions,\n    searchValue = _ref3.searchValue,\n    _ref3$isCaseSensitive = _ref3.isCaseSensitive,\n    isCaseSensitive = _ref3$isCaseSensitive === void 0 ? false : _ref3$isCaseSensitive,\n    _ref3$isPreFiltered = _ref3.isPreFiltered,\n    isPreFiltered = _ref3$isPreFiltered === void 0 ? false : _ref3$isPreFiltered,\n    _ref3$showPrevSelecte = _ref3.showPrevSelected,\n    showPrevSelected = _ref3$showPrevSelecte === void 0 ? false : _ref3$showPrevSelecte,\n    _ref3$sortMatchesBy = _ref3.sortMatchesBy,\n    sortMatchesBy = _ref3$sortMatchesBy === void 0 ? 'none' : _ref3$sortMatchesBy;\n  var normalizedSearchValue = transformForCaseSensitivity(searchValue.trim(), isCaseSensitive);\n  var matchingOptions = [];\n  options.forEach(function (option) {\n    if (option.options) {\n      var matchingOptionsForGroup = [];\n      option.options.forEach(function (groupOption) {\n        collectMatchingOption({\n          accumulator: matchingOptionsForGroup,\n          option: groupOption,\n          selectedOptions: selectedOptions,\n          normalizedSearchValue: normalizedSearchValue,\n          isCaseSensitive: isCaseSensitive,\n          isPreFiltered: isPreFiltered,\n          showPrevSelected: showPrevSelected\n        });\n      });\n      if (matchingOptionsForGroup.length > 0) {\n        // Add option for group label\n        matchingOptions.push({\n          key: option.key,\n          label: option.label,\n          isGroupLabelOption: true\n        });\n        // Add matching options for group\n        // use concat over spreading to support large arrays - https://mathiasbynens.be/demo/javascript-argument-count\n        matchingOptions = matchingOptions.concat(matchingOptionsForGroup);\n      }\n    } else {\n      collectMatchingOption({\n        accumulator: matchingOptions,\n        option: option,\n        selectedOptions: selectedOptions,\n        normalizedSearchValue: normalizedSearchValue,\n        isCaseSensitive: isCaseSensitive,\n        isPreFiltered: isPreFiltered,\n        showPrevSelected: showPrevSelected\n      });\n    }\n  });\n  if (sortMatchesBy === 'startsWith') {\n    var refObj = {\n      startWith: [],\n      others: []\n    };\n    matchingOptions.forEach(function (object) {\n      var normalizedLabel = transformForCaseSensitivity(object.label, isCaseSensitive);\n      if (normalizedLabel.startsWith(normalizedSearchValue)) {\n        refObj.startWith.push(object);\n      } else {\n        refObj.others.push(object);\n      }\n    });\n    return [].concat(_toConsumableArray(refObj.startWith), _toConsumableArray(refObj.others));\n  }\n  return matchingOptions;\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}