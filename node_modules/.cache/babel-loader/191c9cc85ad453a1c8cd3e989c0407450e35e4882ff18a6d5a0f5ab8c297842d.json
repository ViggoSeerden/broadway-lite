{"ast":null,"code":"/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n\nexport var TooltipParser = function TooltipParser() {\n  var Parser = this.Parser;\n  var tokenizers = Parser.prototype.inlineTokenizers;\n  var methods = Parser.prototype.inlineMethods;\n  var tokenizeTooltip = function tokenizeTooltip(eat, value, silent) {\n    if (value.startsWith('!{tooltip') === false) return false;\n    var nextChar = value[9];\n    if (nextChar !== '[') return false; // this isn't actually a tooltip\n\n    var index = 9;\n    function readArg(open, close) {\n      if (value[index] !== open) throw 'Expected left bracket';\n      index++;\n      var body = '';\n      var openBrackets = 0;\n      for (; index < value.length; index++) {\n        var char = value[index];\n        if (char === close && openBrackets === 0) {\n          index++;\n          return body;\n        } else if (char === close) {\n          openBrackets--;\n        } else if (char === open) {\n          openBrackets++;\n        }\n        body += char;\n      }\n      return '';\n    }\n    var tooltipAnchor = readArg('[', ']');\n    var tooltipText = readArg('(', ')');\n    var now = eat.now();\n    if (!tooltipAnchor) {\n      this.file.info('No tooltip anchor found', {\n        line: now.line,\n        column: now.column + 10\n      });\n    }\n    if (!tooltipText) {\n      this.file.info('No tooltip text found', {\n        line: now.line,\n        column: now.column + 12 + tooltipAnchor.length\n      });\n    }\n    if (!tooltipText || !tooltipAnchor) return false;\n    if (silent) {\n      return true;\n    }\n    now.column += 10;\n    now.offset += 10;\n    var children = this.tokenizeInline(tooltipAnchor, now);\n    return eat(\"!{tooltip[\".concat(tooltipAnchor, \"](\").concat(tooltipText, \")}\"))({\n      type: 'tooltipPlugin',\n      content: tooltipText,\n      children: children\n    });\n  };\n  tokenizeTooltip.notInLink = true;\n  tokenizeTooltip.locator = function (value, fromIndex) {\n    return value.indexOf('!{tooltip', fromIndex);\n  };\n  tokenizers.tooltip = tokenizeTooltip;\n  methods.splice(methods.indexOf('text'), 0, 'tooltip');\n};","map":{"version":3,"names":["TooltipParser","Parser","tokenizers","prototype","inlineTokenizers","methods","inlineMethods","tokenizeTooltip","eat","value","silent","startsWith","nextChar","index","readArg","open","close","body","openBrackets","length","char","tooltipAnchor","tooltipText","now","file","info","line","column","offset","children","tokenizeInline","concat","type","content","notInLink","locator","fromIndex","indexOf","tooltip","splice"],"sources":["/home/runner/work/broadway-lite/broadway-lite/node_modules/@elastic/eui/es/components/markdown_editor/plugins/markdown_tooltip/parser.js"],"sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n\nexport var TooltipParser = function TooltipParser() {\n  var Parser = this.Parser;\n  var tokenizers = Parser.prototype.inlineTokenizers;\n  var methods = Parser.prototype.inlineMethods;\n  var tokenizeTooltip = function tokenizeTooltip(eat, value, silent) {\n    if (value.startsWith('!{tooltip') === false) return false;\n    var nextChar = value[9];\n    if (nextChar !== '[') return false; // this isn't actually a tooltip\n\n    var index = 9;\n    function readArg(open, close) {\n      if (value[index] !== open) throw 'Expected left bracket';\n      index++;\n      var body = '';\n      var openBrackets = 0;\n      for (; index < value.length; index++) {\n        var char = value[index];\n        if (char === close && openBrackets === 0) {\n          index++;\n          return body;\n        } else if (char === close) {\n          openBrackets--;\n        } else if (char === open) {\n          openBrackets++;\n        }\n        body += char;\n      }\n      return '';\n    }\n    var tooltipAnchor = readArg('[', ']');\n    var tooltipText = readArg('(', ')');\n    var now = eat.now();\n    if (!tooltipAnchor) {\n      this.file.info('No tooltip anchor found', {\n        line: now.line,\n        column: now.column + 10\n      });\n    }\n    if (!tooltipText) {\n      this.file.info('No tooltip text found', {\n        line: now.line,\n        column: now.column + 12 + tooltipAnchor.length\n      });\n    }\n    if (!tooltipText || !tooltipAnchor) return false;\n    if (silent) {\n      return true;\n    }\n    now.column += 10;\n    now.offset += 10;\n    var children = this.tokenizeInline(tooltipAnchor, now);\n    return eat(\"!{tooltip[\".concat(tooltipAnchor, \"](\").concat(tooltipText, \")}\"))({\n      type: 'tooltipPlugin',\n      content: tooltipText,\n      children: children\n    });\n  };\n  tokenizeTooltip.notInLink = true;\n  tokenizeTooltip.locator = function (value, fromIndex) {\n    return value.indexOf('!{tooltip', fromIndex);\n  };\n  tokenizers.tooltip = tokenizeTooltip;\n  methods.splice(methods.indexOf('text'), 0, 'tooltip');\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}