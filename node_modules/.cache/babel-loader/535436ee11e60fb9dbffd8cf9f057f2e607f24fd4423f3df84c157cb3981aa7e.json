{"ast":null,"code":"var _excluded = [\"hasAlt\", \"hasShadow\", \"children\", \"onClick\", \"onKeyDown\", \"isFullScreen\", \"isFullWidth\", \"fullScreenIconColor\"];\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n\nimport React from 'react';\nimport PropTypes from \"prop-types\";\nimport { useEuiTheme } from '../../services';\nimport { useEuiI18n } from '../i18n';\nimport { EuiIcon } from '../icon';\nimport { EuiScreenReaderOnly } from '../accessibility';\nimport { euiImageButtonStyles, euiImageButtonIconStyles } from './image_button.styles';\nimport { jsx as ___EmotionJSX } from \"@emotion/react\";\nvar fullScreenIconColorMap = {\n  light: 'ghost',\n  dark: 'default'\n};\nexport var EuiImageButton = function EuiImageButton(_ref) {\n  var hasAlt = _ref.hasAlt,\n    hasShadow = _ref.hasShadow,\n    children = _ref.children,\n    onClick = _ref.onClick,\n    onKeyDown = _ref.onKeyDown,\n    isFullScreen = _ref.isFullScreen,\n    isFullWidth = _ref.isFullWidth,\n    _ref$fullScreenIconCo = _ref.fullScreenIconColor,\n    fullScreenIconColor = _ref$fullScreenIconCo === void 0 ? 'light' : _ref$fullScreenIconCo,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var euiTheme = useEuiTheme();\n  var buttonStyles = euiImageButtonStyles(euiTheme);\n  var cssButtonStyles = [buttonStyles.euiImageButton, hasShadow ? buttonStyles.hasShadowHover : buttonStyles.shadowHover, !isFullScreen && isFullWidth && buttonStyles.fullWidth];\n  var iconStyles = euiImageButtonIconStyles(euiTheme);\n  var cssIconStyles = [iconStyles.euiImageButton__icon, iconStyles.openFullScreen];\n  var openFullScreenInstructions = useEuiI18n('euiImageButton.openFullScreen', 'Click to open this image in fullscreen mode');\n  var closeFullScreenInstructions = useEuiI18n('euiImageButton.closeFullScreen', 'Press Escape or click to close image fullscreen mode');\n  var iconColor = fullScreenIconColorMap[fullScreenIconColor];\n  return ___EmotionJSX(React.Fragment, null, ___EmotionJSX(\"button\", _extends({\n    type: \"button\",\n    css: cssButtonStyles,\n    onClick: onClick,\n    onKeyDown: onKeyDown\n  }, rest), isFullScreen &&\n  // In fullscreen mode, instructions should come first to allow screen reader\n  // users to quickly exit vs. potentially reading out long/unskippable alt text\n  ___EmotionJSX(EuiScreenReaderOnly, null, ___EmotionJSX(\"p\", null, closeFullScreenInstructions, hasAlt && ' — ')), children, !isFullScreen && ___EmotionJSX(\"div\", {\n    css: cssIconStyles\n  }, ___EmotionJSX(EuiScreenReaderOnly, null, ___EmotionJSX(\"p\", null, hasAlt && ' — ', openFullScreenInstructions)), ___EmotionJSX(EuiIcon, {\n    type: \"fullScreen\",\n    color: iconColor\n  }))));\n};\nEuiImageButton.propTypes = {\n  hasAlt: PropTypes.bool.isRequired,\n  onClick: PropTypes.func.isRequired,\n  onKeyDown: PropTypes.func,\n  isFullWidth: PropTypes.bool.isRequired,\n  isFullScreen: PropTypes.bool\n};","map":{"version":3,"names":["_excluded","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","indexOf","propertyIsEnumerable","sourceKeys","keys","React","PropTypes","useEuiTheme","useEuiI18n","EuiIcon","EuiScreenReaderOnly","euiImageButtonStyles","euiImageButtonIconStyles","jsx","___EmotionJSX","fullScreenIconColorMap","light","dark","EuiImageButton","_ref","hasAlt","hasShadow","children","onClick","onKeyDown","isFullScreen","isFullWidth","_ref$fullScreenIconCo","fullScreenIconColor","rest","euiTheme","buttonStyles","cssButtonStyles","euiImageButton","hasShadowHover","shadowHover","fullWidth","iconStyles","cssIconStyles","euiImageButton__icon","openFullScreen","openFullScreenInstructions","closeFullScreenInstructions","iconColor","Fragment","type","css","color","propTypes","bool","isRequired","func"],"sources":["/home/runner/work/broadway-lite/broadway-lite/node_modules/@elastic/eui/es/components/image/image_button.js"],"sourcesContent":["var _excluded = [\"hasAlt\", \"hasShadow\", \"children\", \"onClick\", \"onKeyDown\", \"isFullScreen\", \"isFullWidth\", \"fullScreenIconColor\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n\nimport React from 'react';\nimport PropTypes from \"prop-types\";\nimport { useEuiTheme } from '../../services';\nimport { useEuiI18n } from '../i18n';\nimport { EuiIcon } from '../icon';\nimport { EuiScreenReaderOnly } from '../accessibility';\nimport { euiImageButtonStyles, euiImageButtonIconStyles } from './image_button.styles';\nimport { jsx as ___EmotionJSX } from \"@emotion/react\";\nvar fullScreenIconColorMap = {\n  light: 'ghost',\n  dark: 'default'\n};\nexport var EuiImageButton = function EuiImageButton(_ref) {\n  var hasAlt = _ref.hasAlt,\n    hasShadow = _ref.hasShadow,\n    children = _ref.children,\n    onClick = _ref.onClick,\n    onKeyDown = _ref.onKeyDown,\n    isFullScreen = _ref.isFullScreen,\n    isFullWidth = _ref.isFullWidth,\n    _ref$fullScreenIconCo = _ref.fullScreenIconColor,\n    fullScreenIconColor = _ref$fullScreenIconCo === void 0 ? 'light' : _ref$fullScreenIconCo,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var euiTheme = useEuiTheme();\n  var buttonStyles = euiImageButtonStyles(euiTheme);\n  var cssButtonStyles = [buttonStyles.euiImageButton, hasShadow ? buttonStyles.hasShadowHover : buttonStyles.shadowHover, !isFullScreen && isFullWidth && buttonStyles.fullWidth];\n  var iconStyles = euiImageButtonIconStyles(euiTheme);\n  var cssIconStyles = [iconStyles.euiImageButton__icon, iconStyles.openFullScreen];\n  var openFullScreenInstructions = useEuiI18n('euiImageButton.openFullScreen', 'Click to open this image in fullscreen mode');\n  var closeFullScreenInstructions = useEuiI18n('euiImageButton.closeFullScreen', 'Press Escape or click to close image fullscreen mode');\n  var iconColor = fullScreenIconColorMap[fullScreenIconColor];\n  return ___EmotionJSX(React.Fragment, null, ___EmotionJSX(\"button\", _extends({\n    type: \"button\",\n    css: cssButtonStyles,\n    onClick: onClick,\n    onKeyDown: onKeyDown\n  }, rest), isFullScreen &&\n  // In fullscreen mode, instructions should come first to allow screen reader\n  // users to quickly exit vs. potentially reading out long/unskippable alt text\n  ___EmotionJSX(EuiScreenReaderOnly, null, ___EmotionJSX(\"p\", null, closeFullScreenInstructions, hasAlt && ' — ')), children, !isFullScreen && ___EmotionJSX(\"div\", {\n    css: cssIconStyles\n  }, ___EmotionJSX(EuiScreenReaderOnly, null, ___EmotionJSX(\"p\", null, hasAlt && ' — ', openFullScreenInstructions)), ___EmotionJSX(EuiIcon, {\n    type: \"fullScreen\",\n    color: iconColor\n  }))));\n};\nEuiImageButton.propTypes = {\n  hasAlt: PropTypes.bool.isRequired,\n  onClick: PropTypes.func.isRequired,\n  onKeyDown: PropTypes.func,\n  isFullWidth: PropTypes.bool.isRequired,\n  isFullScreen: PropTypes.bool\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}