{"ast":null,"code":"/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n\nimport React, { useMemo } from 'react';\nimport { v1 as uuidv1 } from 'uuid';\n\n/**\n * This function returns a function to generate ids.\n * This can be used to generate unique, but predictable ids to pair labels\n * with their inputs. It takes an optional prefix as a parameter. If you don't\n * specify it, it generates a random id prefix. If you specify a custom prefix\n * it should begin with an letter to be HTML4 compliant.\n */\nexport function htmlIdGenerator() {\n  var idPrefix = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var staticUuid = uuidv1();\n  return function () {\n    var idSuffix = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    var prefix = \"\".concat(idPrefix).concat(idPrefix !== '' ? '_' : 'i');\n    var suffix = idSuffix ? \"_\".concat(idSuffix) : '';\n    return \"\".concat(prefix).concat(suffix ? staticUuid : uuidv1()).concat(suffix);\n  };\n}\n\n/**\n * Generates a memoized ID that remains static until component unmount.\n * This prevents IDs from being re-randomized on every component update.\n */\n\n// We can remove this deprecated hook once EUI no longer needs to support React 16-17\nvar useDeprecatedGeneratedHtmlId = function useDeprecatedGeneratedHtmlId() {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n    prefix = _ref.prefix,\n    suffix = _ref.suffix,\n    conditionalId = _ref.conditionalId;\n  return useMemo(function () {\n    return conditionalId || htmlIdGenerator(prefix)(suffix);\n  }, [conditionalId, prefix, suffix]);\n};\nvar useNewGeneratedHtmlId = function useNewGeneratedHtmlId() {\n  var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n    _ref2$prefix = _ref2.prefix,\n    prefix = _ref2$prefix === void 0 ? '' : _ref2$prefix,\n    _ref2$suffix = _ref2.suffix,\n    suffix = _ref2$suffix === void 0 ? '' : _ref2$suffix,\n    conditionalId = _ref2.conditionalId;\n  // Using the default export and dot notation here is intentional\n  // to prevent React <18 import errors.\n  var id = React.useId();\n  return useMemo(function () {\n    return conditionalId || \"\".concat(prefix).concat(id).concat(suffix);\n  }, [id, conditionalId, prefix, suffix]);\n};\nexport var useGeneratedHtmlId = 'useId' in React ? useNewGeneratedHtmlId : useDeprecatedGeneratedHtmlId;","map":{"version":3,"names":["React","useMemo","v1","uuidv1","htmlIdGenerator","idPrefix","arguments","length","undefined","staticUuid","idSuffix","prefix","concat","suffix","useDeprecatedGeneratedHtmlId","_ref","conditionalId","useNewGeneratedHtmlId","_ref2","_ref2$prefix","_ref2$suffix","id","useId","useGeneratedHtmlId"],"sources":["/home/runner/work/broadway-lite/broadway-lite/node_modules/@elastic/eui/es/services/accessibility/html_id_generator.js"],"sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n\nimport React, { useMemo } from 'react';\nimport { v1 as uuidv1 } from 'uuid';\n\n/**\n * This function returns a function to generate ids.\n * This can be used to generate unique, but predictable ids to pair labels\n * with their inputs. It takes an optional prefix as a parameter. If you don't\n * specify it, it generates a random id prefix. If you specify a custom prefix\n * it should begin with an letter to be HTML4 compliant.\n */\nexport function htmlIdGenerator() {\n  var idPrefix = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var staticUuid = uuidv1();\n  return function () {\n    var idSuffix = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    var prefix = \"\".concat(idPrefix).concat(idPrefix !== '' ? '_' : 'i');\n    var suffix = idSuffix ? \"_\".concat(idSuffix) : '';\n    return \"\".concat(prefix).concat(suffix ? staticUuid : uuidv1()).concat(suffix);\n  };\n}\n\n/**\n * Generates a memoized ID that remains static until component unmount.\n * This prevents IDs from being re-randomized on every component update.\n */\n\n// We can remove this deprecated hook once EUI no longer needs to support React 16-17\nvar useDeprecatedGeneratedHtmlId = function useDeprecatedGeneratedHtmlId() {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n    prefix = _ref.prefix,\n    suffix = _ref.suffix,\n    conditionalId = _ref.conditionalId;\n  return useMemo(function () {\n    return conditionalId || htmlIdGenerator(prefix)(suffix);\n  }, [conditionalId, prefix, suffix]);\n};\nvar useNewGeneratedHtmlId = function useNewGeneratedHtmlId() {\n  var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n    _ref2$prefix = _ref2.prefix,\n    prefix = _ref2$prefix === void 0 ? '' : _ref2$prefix,\n    _ref2$suffix = _ref2.suffix,\n    suffix = _ref2$suffix === void 0 ? '' : _ref2$suffix,\n    conditionalId = _ref2.conditionalId;\n  // Using the default export and dot notation here is intentional\n  // to prevent React <18 import errors.\n  var id = React.useId();\n  return useMemo(function () {\n    return conditionalId || \"\".concat(prefix).concat(id).concat(suffix);\n  }, [id, conditionalId, prefix, suffix]);\n};\nexport var useGeneratedHtmlId = 'useId' in React ? useNewGeneratedHtmlId : useDeprecatedGeneratedHtmlId;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}