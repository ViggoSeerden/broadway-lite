{"ast":null,"code":"function _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"];\n  if (null != _i) {\n    var _s,\n      _e,\n      _x,\n      _r,\n      _arr = [],\n      _n = !0,\n      _d = !1;\n    try {\n      if (_x = (_i = _i.call(arr)).next, 0 === i) {\n        if (Object(_i) !== _i) return;\n        _n = !1;\n      } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0);\n    } catch (err) {\n      _d = !0, _e = err;\n    } finally {\n      try {\n        if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return;\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n    return _arr;\n  }\n}\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n\nimport { createContext, useContext, useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { tabbable } from 'tabbable';\nimport { keys } from '../../../services';\nexport var DataGridFocusContext = /*#__PURE__*/createContext({\n  focusedCell: undefined,\n  setFocusedCell: function setFocusedCell() {},\n  setIsFocusedCellInView: function setIsFocusedCellInView() {},\n  onFocusUpdate: function onFocusUpdate() {\n    return function () {};\n  },\n  focusFirstVisibleInteractiveCell: function focusFirstVisibleInteractiveCell() {}\n});\n/**\n * Main focus context and overarching focus state management\n */\nexport var useFocus = function useFocus(_ref) {\n  var headerIsInteractive = _ref.headerIsInteractive,\n    gridItemsRendered = _ref.gridItemsRendered;\n  // Maintain a map of focus cell state callbacks\n  var cellsUpdateFocus = useRef(new Map());\n  var onFocusUpdate = useCallback(function (cell, updateFocus) {\n    var key = \"\".concat(cell[0], \"-\").concat(cell[1]);\n    cellsUpdateFocus.current.set(key, updateFocus);\n    return function () {\n      cellsUpdateFocus.current.delete(key);\n    };\n  }, []);\n\n  // Current focused cell\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isFocusedCellInView = _useState2[0],\n    setIsFocusedCellInView = _useState2[1];\n  var _useState3 = useState(undefined),\n    _useState4 = _slicedToArray(_useState3, 2),\n    focusedCell = _useState4[0],\n    _setFocusedCell = _useState4[1];\n  var setFocusedCell = useCallback(function (nextFocusedCell) {\n    // If the x/y coordinates remained the same, don't update. This keeps the focusedCell\n    // reference stable, and allows it to be used in places that need reference equality.\n    if (nextFocusedCell[0] === (focusedCell === null || focusedCell === void 0 ? void 0 : focusedCell[0]) && nextFocusedCell[1] === (focusedCell === null || focusedCell === void 0 ? void 0 : focusedCell[1])) {\n      return;\n    }\n    _setFocusedCell(nextFocusedCell);\n    setIsFocusedCellInView(true); // scrolling.ts ensures focused cells are fully in view\n  }, [focusedCell]);\n  var previousCell = useRef(undefined);\n  useEffect(function () {\n    if (previousCell.current) {\n      notifyCellOfFocusState(cellsUpdateFocus.current, previousCell.current, false);\n    }\n    previousCell.current = focusedCell;\n    if (focusedCell) {\n      notifyCellOfFocusState(cellsUpdateFocus.current, focusedCell, true);\n    }\n  }, [cellsUpdateFocus, focusedCell]);\n  var focusFirstVisibleInteractiveCell = useCallback(function () {\n    if (headerIsInteractive) {\n      // The header (rowIndex -1) is sticky and will always be in view\n      setFocusedCell([0, -1]);\n    } else if (gridItemsRendered.current) {\n      var _gridItemsRendered$cu = gridItemsRendered.current,\n        visibleColumnStartIndex = _gridItemsRendered$cu.visibleColumnStartIndex,\n        visibleRowStartIndex = _gridItemsRendered$cu.visibleRowStartIndex;\n      setFocusedCell([visibleColumnStartIndex, visibleRowStartIndex]);\n    } else {\n      // If the header is non-interactive and there are no rendered cells,\n      // there's nothing to do - we might as well leave focus on the grid body wrapper\n    }\n  }, [setFocusedCell, headerIsInteractive, gridItemsRendered]);\n  var focusProps = useMemo(function () {\n    return isFocusedCellInView ? {\n      // FireFox allows tabbing to a div that is scrollable, while Chrome does not\n      tabIndex: -1\n    } : {\n      tabIndex: 0,\n      onKeyUp: function onKeyUp(e) {\n        // Ensure we only manually focus into the grid via keyboard tab -\n        // mouse users can accidentally trigger focus by clicking on scrollbars\n        if (e.key === keys.TAB) {\n          // if e.target (the source element of the `focus event`) matches\n          // e.currentTarget (always the div with this onKeyUp listener)\n          // then the user has focused directly on the data grid wrapper\n          if (e.target === e.currentTarget) {\n            focusFirstVisibleInteractiveCell();\n          }\n        }\n      }\n    };\n  }, [isFocusedCellInView, focusFirstVisibleInteractiveCell]);\n  return {\n    onFocusUpdate: onFocusUpdate,\n    focusedCell: focusedCell,\n    setFocusedCell: setFocusedCell,\n    setIsFocusedCellInView: setIsFocusedCellInView,\n    focusFirstVisibleInteractiveCell: focusFirstVisibleInteractiveCell,\n    focusProps: focusProps\n  };\n};\nexport var notifyCellOfFocusState = function notifyCellOfFocusState(cellsUpdateFocus, cell, isFocused) {\n  var key = \"\".concat(cell[0], \"-\").concat(cell[1]);\n  var onFocus = cellsUpdateFocus.get(key);\n  if (onFocus) {\n    onFocus(isFocused);\n  }\n};\n\n/**\n * Keydown handler for connecting focus state with keyboard navigation\n */\nexport var createKeyDownHandler = function createKeyDownHandler(_ref2) {\n  var gridElement = _ref2.gridElement,\n    visibleColCount = _ref2.visibleColCount,\n    visibleRowCount = _ref2.visibleRowCount,\n    visibleRowStartIndex = _ref2.visibleRowStartIndex,\n    rowCount = _ref2.rowCount,\n    pagination = _ref2.pagination,\n    hasFooter = _ref2.hasFooter,\n    headerIsInteractive = _ref2.headerIsInteractive,\n    focusContext = _ref2.focusContext;\n  return function (event) {\n    var focusedCell = focusContext.focusedCell,\n      setFocusedCell = focusContext.setFocusedCell;\n    if (focusedCell == null) return;\n    if (gridElement == null || !gridElement.contains(document.activeElement)) {\n      // if the `contentElement` does not contain the focused element, don't handle the event\n      // this happens when React bubbles the key event through a portal\n      return;\n    }\n    var _focusedCell = _slicedToArray(focusedCell, 2),\n      x = _focusedCell[0],\n      y = _focusedCell[1];\n    var key = event.key,\n      ctrlKey = event.ctrlKey;\n    if (key === keys.ARROW_DOWN) {\n      event.preventDefault();\n      if (hasFooter ? y < visibleRowCount : y < visibleRowCount - 1) {\n        if (y === -1) {\n          // The header is sticky, so on scrolling virtualized grids, row 0 will not\n          // always be rendered to navigate down to. We need to account for this by\n          // sending the down arrow to the first visible/virtualized row instead\n          setFocusedCell([x, visibleRowStartIndex]);\n        } else {\n          setFocusedCell([x, y + 1]);\n        }\n      }\n    } else if (key === keys.ARROW_LEFT) {\n      event.preventDefault();\n      if (x > 0) {\n        setFocusedCell([x - 1, y]);\n      }\n    } else if (key === keys.ARROW_UP) {\n      event.preventDefault();\n      var minimumIndex = headerIsInteractive ? -1 : 0;\n      if (y > minimumIndex) {\n        setFocusedCell([x, y - 1]);\n      }\n    } else if (key === keys.ARROW_RIGHT) {\n      event.preventDefault();\n      if (x < visibleColCount - 1) {\n        setFocusedCell([x + 1, y]);\n      }\n    } else if (key === keys.PAGE_DOWN) {\n      if (pagination && pagination.pageSize > 0) {\n        event.preventDefault();\n        var pageSize = pagination.pageSize;\n        var pageCount = Math.ceil(rowCount / pageSize);\n        var pageIndex = pagination.pageIndex;\n        if (pageIndex < pageCount - 1) {\n          pagination.onChangePage(pageIndex + 1);\n        }\n        setFocusedCell([focusedCell[0], 0]);\n      }\n    } else if (key === keys.PAGE_UP) {\n      if (pagination && pagination.pageSize > 0) {\n        event.preventDefault();\n        var _pageIndex = pagination.pageIndex;\n        if (_pageIndex > 0) {\n          pagination.onChangePage(_pageIndex - 1);\n        }\n        setFocusedCell([focusedCell[0], pagination.pageSize - 1]);\n      }\n    } else if (key === (ctrlKey && keys.END)) {\n      event.preventDefault();\n      setFocusedCell([visibleColCount - 1, visibleRowCount - 1]);\n    } else if (key === (ctrlKey && keys.HOME)) {\n      event.preventDefault();\n      setFocusedCell([0, 0]);\n    } else if (key === keys.END) {\n      event.preventDefault();\n      setFocusedCell([visibleColCount - 1, y]);\n    } else if (key === keys.HOME) {\n      event.preventDefault();\n      setFocusedCell([0, y]);\n    }\n  };\n};\n\n/**\n * Mutation observer for the grid body, which exists to pick up DOM changes\n * in cells and remove interactive elements from the page's tab index, as\n * we want to move between cells via arrow keys instead of tabbing.\n */\nexport var preventTabbing = function preventTabbing(records) {\n  // multiple mutation records can implicate the same cell\n  // so be sure to only check each cell once\n  var processedCells = new Set();\n  for (var i = 0; i < records.length; i++) {\n    var record = records[i];\n    // find the cell content owning this mutation\n    var cell = getParentCellContent(record.target);\n    if (processedCells.has(cell)) continue;\n    processedCells.add(cell);\n    if (cell) {\n      // if we found it, disable tabbable elements\n      var tabbables = tabbable(cell);\n      for (var _i2 = 0; _i2 < tabbables.length; _i2++) {\n        var element = tabbables[_i2];\n        if (!element.hasAttribute('data-euigrid-tab-managed')) {\n          element.setAttribute('tabIndex', '-1');\n          element.setAttribute('data-datagrid-interactable', 'true');\n        }\n      }\n    }\n  }\n};\n\n// Starts with a Node or HTMLElement returned by a mutation record\n// and search its ancestors for a div[data-datagrid-cellcontent], if any,\n// which is a valid target for disabling tabbing within\nexport var getParentCellContent = function getParentCellContent(_element) {\n  var element = _element.nodeType === document.ELEMENT_NODE ? _element : _element.parentElement;\n  while (element &&\n  // we haven't walked off the document yet\n  element.nodeName !== 'div' &&\n  // looking for a div\n  !element.hasAttribute('data-datagrid-cellcontent') // that has data-datagrid-cellcontent\n  ) {\n    element = element.parentElement;\n  }\n  return element;\n};\n\n/**\n * Focus fixes & workarounds\n */\n\n// If the focus is on the header, and the header is no longer interactive,\n// move the focus down to the first row\nexport var useHeaderFocusWorkaround = function useHeaderFocusWorkaround(headerIsInteractive) {\n  var _useContext = useContext(DataGridFocusContext),\n    focusedCell = _useContext.focusedCell,\n    setFocusedCell = _useContext.setFocusedCell;\n  useEffect(function () {\n    if (!headerIsInteractive && focusedCell && focusedCell[1] === -1) {\n      setFocusedCell([focusedCell[0], 0]);\n    }\n  }, [headerIsInteractive, focusedCell, setFocusedCell]);\n};","map":{"version":3,"names":["_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","TypeError","o","minLen","_arrayLikeToArray","n","Object","prototype","toString","call","slice","constructor","name","Array","from","test","len","length","arr2","_i","Symbol","iterator","_s","_e","_x","_r","_arr","_n","_d","next","done","push","value","err","return","isArray","createContext","useContext","useCallback","useEffect","useMemo","useRef","useState","tabbable","keys","DataGridFocusContext","focusedCell","undefined","setFocusedCell","setIsFocusedCellInView","onFocusUpdate","focusFirstVisibleInteractiveCell","useFocus","_ref","headerIsInteractive","gridItemsRendered","cellsUpdateFocus","Map","cell","updateFocus","key","concat","current","set","delete","_useState","_useState2","isFocusedCellInView","_useState3","_useState4","_setFocusedCell","nextFocusedCell","previousCell","notifyCellOfFocusState","_gridItemsRendered$cu","visibleColumnStartIndex","visibleRowStartIndex","focusProps","tabIndex","onKeyUp","e","TAB","target","currentTarget","isFocused","onFocus","get","createKeyDownHandler","_ref2","gridElement","visibleColCount","visibleRowCount","rowCount","pagination","hasFooter","focusContext","event","contains","document","activeElement","_focusedCell","x","y","ctrlKey","ARROW_DOWN","preventDefault","ARROW_LEFT","ARROW_UP","minimumIndex","ARROW_RIGHT","PAGE_DOWN","pageSize","pageCount","Math","ceil","pageIndex","onChangePage","PAGE_UP","_pageIndex","END","HOME","preventTabbing","records","processedCells","Set","record","getParentCellContent","has","add","tabbables","_i2","element","hasAttribute","setAttribute","_element","nodeType","ELEMENT_NODE","parentElement","nodeName","useHeaderFocusWorkaround","_useContext"],"sources":["/home/runner/work/broadway-lite/broadway-lite/node_modules/@elastic/eui/es/components/datagrid/utils/focus.js"],"sourcesContent":["function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n\nimport { createContext, useContext, useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { tabbable } from 'tabbable';\nimport { keys } from '../../../services';\nexport var DataGridFocusContext = /*#__PURE__*/createContext({\n  focusedCell: undefined,\n  setFocusedCell: function setFocusedCell() {},\n  setIsFocusedCellInView: function setIsFocusedCellInView() {},\n  onFocusUpdate: function onFocusUpdate() {\n    return function () {};\n  },\n  focusFirstVisibleInteractiveCell: function focusFirstVisibleInteractiveCell() {}\n});\n/**\n * Main focus context and overarching focus state management\n */\nexport var useFocus = function useFocus(_ref) {\n  var headerIsInteractive = _ref.headerIsInteractive,\n    gridItemsRendered = _ref.gridItemsRendered;\n  // Maintain a map of focus cell state callbacks\n  var cellsUpdateFocus = useRef(new Map());\n  var onFocusUpdate = useCallback(function (cell, updateFocus) {\n    var key = \"\".concat(cell[0], \"-\").concat(cell[1]);\n    cellsUpdateFocus.current.set(key, updateFocus);\n    return function () {\n      cellsUpdateFocus.current.delete(key);\n    };\n  }, []);\n\n  // Current focused cell\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isFocusedCellInView = _useState2[0],\n    setIsFocusedCellInView = _useState2[1];\n  var _useState3 = useState(undefined),\n    _useState4 = _slicedToArray(_useState3, 2),\n    focusedCell = _useState4[0],\n    _setFocusedCell = _useState4[1];\n  var setFocusedCell = useCallback(function (nextFocusedCell) {\n    // If the x/y coordinates remained the same, don't update. This keeps the focusedCell\n    // reference stable, and allows it to be used in places that need reference equality.\n    if (nextFocusedCell[0] === (focusedCell === null || focusedCell === void 0 ? void 0 : focusedCell[0]) && nextFocusedCell[1] === (focusedCell === null || focusedCell === void 0 ? void 0 : focusedCell[1])) {\n      return;\n    }\n    _setFocusedCell(nextFocusedCell);\n    setIsFocusedCellInView(true); // scrolling.ts ensures focused cells are fully in view\n  }, [focusedCell]);\n  var previousCell = useRef(undefined);\n  useEffect(function () {\n    if (previousCell.current) {\n      notifyCellOfFocusState(cellsUpdateFocus.current, previousCell.current, false);\n    }\n    previousCell.current = focusedCell;\n    if (focusedCell) {\n      notifyCellOfFocusState(cellsUpdateFocus.current, focusedCell, true);\n    }\n  }, [cellsUpdateFocus, focusedCell]);\n  var focusFirstVisibleInteractiveCell = useCallback(function () {\n    if (headerIsInteractive) {\n      // The header (rowIndex -1) is sticky and will always be in view\n      setFocusedCell([0, -1]);\n    } else if (gridItemsRendered.current) {\n      var _gridItemsRendered$cu = gridItemsRendered.current,\n        visibleColumnStartIndex = _gridItemsRendered$cu.visibleColumnStartIndex,\n        visibleRowStartIndex = _gridItemsRendered$cu.visibleRowStartIndex;\n      setFocusedCell([visibleColumnStartIndex, visibleRowStartIndex]);\n    } else {\n      // If the header is non-interactive and there are no rendered cells,\n      // there's nothing to do - we might as well leave focus on the grid body wrapper\n    }\n  }, [setFocusedCell, headerIsInteractive, gridItemsRendered]);\n  var focusProps = useMemo(function () {\n    return isFocusedCellInView ? {\n      // FireFox allows tabbing to a div that is scrollable, while Chrome does not\n      tabIndex: -1\n    } : {\n      tabIndex: 0,\n      onKeyUp: function onKeyUp(e) {\n        // Ensure we only manually focus into the grid via keyboard tab -\n        // mouse users can accidentally trigger focus by clicking on scrollbars\n        if (e.key === keys.TAB) {\n          // if e.target (the source element of the `focus event`) matches\n          // e.currentTarget (always the div with this onKeyUp listener)\n          // then the user has focused directly on the data grid wrapper\n          if (e.target === e.currentTarget) {\n            focusFirstVisibleInteractiveCell();\n          }\n        }\n      }\n    };\n  }, [isFocusedCellInView, focusFirstVisibleInteractiveCell]);\n  return {\n    onFocusUpdate: onFocusUpdate,\n    focusedCell: focusedCell,\n    setFocusedCell: setFocusedCell,\n    setIsFocusedCellInView: setIsFocusedCellInView,\n    focusFirstVisibleInteractiveCell: focusFirstVisibleInteractiveCell,\n    focusProps: focusProps\n  };\n};\nexport var notifyCellOfFocusState = function notifyCellOfFocusState(cellsUpdateFocus, cell, isFocused) {\n  var key = \"\".concat(cell[0], \"-\").concat(cell[1]);\n  var onFocus = cellsUpdateFocus.get(key);\n  if (onFocus) {\n    onFocus(isFocused);\n  }\n};\n\n/**\n * Keydown handler for connecting focus state with keyboard navigation\n */\nexport var createKeyDownHandler = function createKeyDownHandler(_ref2) {\n  var gridElement = _ref2.gridElement,\n    visibleColCount = _ref2.visibleColCount,\n    visibleRowCount = _ref2.visibleRowCount,\n    visibleRowStartIndex = _ref2.visibleRowStartIndex,\n    rowCount = _ref2.rowCount,\n    pagination = _ref2.pagination,\n    hasFooter = _ref2.hasFooter,\n    headerIsInteractive = _ref2.headerIsInteractive,\n    focusContext = _ref2.focusContext;\n  return function (event) {\n    var focusedCell = focusContext.focusedCell,\n      setFocusedCell = focusContext.setFocusedCell;\n    if (focusedCell == null) return;\n    if (gridElement == null || !gridElement.contains(document.activeElement)) {\n      // if the `contentElement` does not contain the focused element, don't handle the event\n      // this happens when React bubbles the key event through a portal\n      return;\n    }\n    var _focusedCell = _slicedToArray(focusedCell, 2),\n      x = _focusedCell[0],\n      y = _focusedCell[1];\n    var key = event.key,\n      ctrlKey = event.ctrlKey;\n    if (key === keys.ARROW_DOWN) {\n      event.preventDefault();\n      if (hasFooter ? y < visibleRowCount : y < visibleRowCount - 1) {\n        if (y === -1) {\n          // The header is sticky, so on scrolling virtualized grids, row 0 will not\n          // always be rendered to navigate down to. We need to account for this by\n          // sending the down arrow to the first visible/virtualized row instead\n          setFocusedCell([x, visibleRowStartIndex]);\n        } else {\n          setFocusedCell([x, y + 1]);\n        }\n      }\n    } else if (key === keys.ARROW_LEFT) {\n      event.preventDefault();\n      if (x > 0) {\n        setFocusedCell([x - 1, y]);\n      }\n    } else if (key === keys.ARROW_UP) {\n      event.preventDefault();\n      var minimumIndex = headerIsInteractive ? -1 : 0;\n      if (y > minimumIndex) {\n        setFocusedCell([x, y - 1]);\n      }\n    } else if (key === keys.ARROW_RIGHT) {\n      event.preventDefault();\n      if (x < visibleColCount - 1) {\n        setFocusedCell([x + 1, y]);\n      }\n    } else if (key === keys.PAGE_DOWN) {\n      if (pagination && pagination.pageSize > 0) {\n        event.preventDefault();\n        var pageSize = pagination.pageSize;\n        var pageCount = Math.ceil(rowCount / pageSize);\n        var pageIndex = pagination.pageIndex;\n        if (pageIndex < pageCount - 1) {\n          pagination.onChangePage(pageIndex + 1);\n        }\n        setFocusedCell([focusedCell[0], 0]);\n      }\n    } else if (key === keys.PAGE_UP) {\n      if (pagination && pagination.pageSize > 0) {\n        event.preventDefault();\n        var _pageIndex = pagination.pageIndex;\n        if (_pageIndex > 0) {\n          pagination.onChangePage(_pageIndex - 1);\n        }\n        setFocusedCell([focusedCell[0], pagination.pageSize - 1]);\n      }\n    } else if (key === (ctrlKey && keys.END)) {\n      event.preventDefault();\n      setFocusedCell([visibleColCount - 1, visibleRowCount - 1]);\n    } else if (key === (ctrlKey && keys.HOME)) {\n      event.preventDefault();\n      setFocusedCell([0, 0]);\n    } else if (key === keys.END) {\n      event.preventDefault();\n      setFocusedCell([visibleColCount - 1, y]);\n    } else if (key === keys.HOME) {\n      event.preventDefault();\n      setFocusedCell([0, y]);\n    }\n  };\n};\n\n/**\n * Mutation observer for the grid body, which exists to pick up DOM changes\n * in cells and remove interactive elements from the page's tab index, as\n * we want to move between cells via arrow keys instead of tabbing.\n */\nexport var preventTabbing = function preventTabbing(records) {\n  // multiple mutation records can implicate the same cell\n  // so be sure to only check each cell once\n  var processedCells = new Set();\n  for (var i = 0; i < records.length; i++) {\n    var record = records[i];\n    // find the cell content owning this mutation\n    var cell = getParentCellContent(record.target);\n    if (processedCells.has(cell)) continue;\n    processedCells.add(cell);\n    if (cell) {\n      // if we found it, disable tabbable elements\n      var tabbables = tabbable(cell);\n      for (var _i2 = 0; _i2 < tabbables.length; _i2++) {\n        var element = tabbables[_i2];\n        if (!element.hasAttribute('data-euigrid-tab-managed')) {\n          element.setAttribute('tabIndex', '-1');\n          element.setAttribute('data-datagrid-interactable', 'true');\n        }\n      }\n    }\n  }\n};\n\n// Starts with a Node or HTMLElement returned by a mutation record\n// and search its ancestors for a div[data-datagrid-cellcontent], if any,\n// which is a valid target for disabling tabbing within\nexport var getParentCellContent = function getParentCellContent(_element) {\n  var element = _element.nodeType === document.ELEMENT_NODE ? _element : _element.parentElement;\n  while (element &&\n  // we haven't walked off the document yet\n  element.nodeName !== 'div' &&\n  // looking for a div\n  !element.hasAttribute('data-datagrid-cellcontent') // that has data-datagrid-cellcontent\n  ) {\n    element = element.parentElement;\n  }\n  return element;\n};\n\n/**\n * Focus fixes & workarounds\n */\n\n// If the focus is on the header, and the header is no longer interactive,\n// move the focus down to the first row\nexport var useHeaderFocusWorkaround = function useHeaderFocusWorkaround(headerIsInteractive) {\n  var _useContext = useContext(DataGridFocusContext),\n    focusedCell = _useContext.focusedCell,\n    setFocusedCell = _useContext.setFocusedCell;\n  useEffect(function () {\n    if (!headerIsInteractive && focusedCell && focusedCell[1] === -1) {\n      setFocusedCell([focusedCell[0], 0]);\n    }\n  }, [headerIsInteractive, focusedCell, setFocusedCell]);\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}