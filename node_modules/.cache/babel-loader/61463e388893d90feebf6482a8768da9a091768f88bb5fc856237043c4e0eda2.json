{"ast":null,"code":"function _EMOTION_STRINGIFIED_CSS_ERROR__() {\n  return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";\n}\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n\nimport { css } from '@emotion/react';\nexport var euiTextTruncateStyles = {\n  euiTextTruncate: process.env.NODE_ENV === \"production\" ? {\n    name: \"7o5qnz-euiTextTruncate\",\n    styles: \"position:relative;overflow:hidden;white-space:nowrap;label:euiTextTruncate;\"\n  } : {\n    name: \"7o5qnz-euiTextTruncate\",\n    styles: \"position:relative;overflow:hidden;white-space:nowrap;label:euiTextTruncate;\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  },\n  /**\n   * The below CSS is a hack to get double clicking and selecting the *full* text\n   * instead of the truncated text (useful for copying/pasting, and mimics how\n   * `text-overflow: ellipsis` works).\n   *\n   * Real talk: I'm lowkey amazed it works and it wouldn't surprise me if we ran into\n   * cross-browser issues with this at some point. Hopefully CSS natively implements\n   * custom text truncation some day (https://github.com/w3c/csswg-drafts/issues/3937)\n   * and there'll be no need for the entire component at that point üôè\n   */\n  // Makes the truncated text unselectable/un-clickable\n  euiTextTruncate__truncatedText: process.env.NODE_ENV === \"production\" ? {\n    name: \"1sjxkb1-euiTextTruncate__truncatedText\",\n    styles: \"user-select:none;pointer-events:none;label:euiTextTruncate__truncatedText;\"\n  } : {\n    name: \"1sjxkb1-euiTextTruncate__truncatedText\",\n    styles: \"user-select:none;pointer-events:none;label:euiTextTruncate__truncatedText;\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  },\n  // Positions the full text on top of the truncated text (so that clicking targets it)\n  // and gives it a color opacity of 0 so that it's not actually visible\n  euiTextTruncate__fullText: process.env.NODE_ENV === \"production\" ? {\n    name: \"19c9gqi-euiTextTruncate__fullText\",\n    styles: \"position:absolute;inset:0;overflow:hidden;color:rgba(0, 0, 0, 0);@supports (-webkit-hyphens: none){text-overflow:ellipsis;};label:euiTextTruncate__fullText;\"\n  } : {\n    name: \"19c9gqi-euiTextTruncate__fullText\",\n    styles: \"position:absolute;inset:0;overflow:hidden;color:rgba(0, 0, 0, 0);@supports (-webkit-hyphens: none){text-overflow:ellipsis;};label:euiTextTruncate__fullText;\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  }\n};","map":{"version":3,"names":["_EMOTION_STRINGIFIED_CSS_ERROR__","css","euiTextTruncateStyles","euiTextTruncate","process","env","NODE_ENV","name","styles","toString","euiTextTruncate__truncatedText","euiTextTruncate__fullText"],"sources":["/home/runner/work/broadway-lite/broadway-lite/node_modules/@elastic/eui/es/components/text_truncate/text_truncate.styles.js"],"sourcesContent":["function _EMOTION_STRINGIFIED_CSS_ERROR__() { return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\"; }\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n\nimport { css } from '@emotion/react';\nexport var euiTextTruncateStyles = {\n  euiTextTruncate: process.env.NODE_ENV === \"production\" ? {\n    name: \"7o5qnz-euiTextTruncate\",\n    styles: \"position:relative;overflow:hidden;white-space:nowrap;label:euiTextTruncate;\"\n  } : {\n    name: \"7o5qnz-euiTextTruncate\",\n    styles: \"position:relative;overflow:hidden;white-space:nowrap;label:euiTextTruncate;\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  },\n  /**\n   * The below CSS is a hack to get double clicking and selecting the *full* text\n   * instead of the truncated text (useful for copying/pasting, and mimics how\n   * `text-overflow: ellipsis` works).\n   *\n   * Real talk: I'm lowkey amazed it works and it wouldn't surprise me if we ran into\n   * cross-browser issues with this at some point. Hopefully CSS natively implements\n   * custom text truncation some day (https://github.com/w3c/csswg-drafts/issues/3937)\n   * and there'll be no need for the entire component at that point üôè\n   */\n  // Makes the truncated text unselectable/un-clickable\n  euiTextTruncate__truncatedText: process.env.NODE_ENV === \"production\" ? {\n    name: \"1sjxkb1-euiTextTruncate__truncatedText\",\n    styles: \"user-select:none;pointer-events:none;label:euiTextTruncate__truncatedText;\"\n  } : {\n    name: \"1sjxkb1-euiTextTruncate__truncatedText\",\n    styles: \"user-select:none;pointer-events:none;label:euiTextTruncate__truncatedText;\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  },\n  // Positions the full text on top of the truncated text (so that clicking targets it)\n  // and gives it a color opacity of 0 so that it's not actually visible\n  euiTextTruncate__fullText: process.env.NODE_ENV === \"production\" ? {\n    name: \"19c9gqi-euiTextTruncate__fullText\",\n    styles: \"position:absolute;inset:0;overflow:hidden;color:rgba(0, 0, 0, 0);@supports (-webkit-hyphens: none){text-overflow:ellipsis;};label:euiTextTruncate__fullText;\"\n  } : {\n    name: \"19c9gqi-euiTextTruncate__fullText\",\n    styles: \"position:absolute;inset:0;overflow:hidden;color:rgba(0, 0, 0, 0);@supports (-webkit-hyphens: none){text-overflow:ellipsis;};label:euiTextTruncate__fullText;\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  }\n};"],"mappings":"AAAA,SAASA,gCAAgCA,CAAA,EAAG;EAAE,OAAO,iOAAiO;AAAE;AACxR;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,GAAG,QAAQ,gBAAgB;AACpC,OAAO,IAAIC,qBAAqB,GAAG;EACjCC,eAAe,EAAEC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAG;IACvDC,IAAI,EAAE,wBAAwB;IAC9BC,MAAM,EAAE;EACV,CAAC,GAAG;IACFD,IAAI,EAAE,wBAAwB;IAC9BC,MAAM,EAAE,6EAA6E;IACrFC,QAAQ,EAAET;EACZ,CAAC;EACD;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE;EACAU,8BAA8B,EAAEN,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAG;IACtEC,IAAI,EAAE,wCAAwC;IAC9CC,MAAM,EAAE;EACV,CAAC,GAAG;IACFD,IAAI,EAAE,wCAAwC;IAC9CC,MAAM,EAAE,4EAA4E;IACpFC,QAAQ,EAAET;EACZ,CAAC;EACD;EACA;EACAW,yBAAyB,EAAEP,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAG;IACjEC,IAAI,EAAE,mCAAmC;IACzCC,MAAM,EAAE;EACV,CAAC,GAAG;IACFD,IAAI,EAAE,mCAAmC;IACzCC,MAAM,EAAE,8JAA8J;IACtKC,QAAQ,EAAET;EACZ;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}