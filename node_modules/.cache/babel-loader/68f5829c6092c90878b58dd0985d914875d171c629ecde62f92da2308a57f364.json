{"ast":null,"code":"/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n\nimport { createContext, useMemo, useCallback } from 'react';\nimport { defaultComparator } from './data_grid_schema';\nexport var DataGridSortingContext = /*#__PURE__*/createContext({\n  sorting: undefined,\n  sortedRowMap: [],\n  getCorrectRowIndex: function getCorrectRowIndex(number) {\n    return number;\n  }\n});\nexport var useSorting = function useSorting(_ref) {\n  var sorting = _ref.sorting,\n    inMemory = _ref.inMemory,\n    inMemoryValues = _ref.inMemoryValues,\n    schema = _ref.schema,\n    schemaDetectors = _ref.schemaDetectors,\n    startRow = _ref.startRow;\n  var sortingColumns = sorting === null || sorting === void 0 ? void 0 : sorting.columns;\n  var sortedRowMap = useMemo(function () {\n    var rowMap = [];\n    if ((inMemory === null || inMemory === void 0 ? void 0 : inMemory.level) === 'sorting' && sortingColumns != null && sortingColumns.length > 0) {\n      var inMemoryRowIndices = Object.keys(inMemoryValues);\n      var wrappedValues = [];\n      for (var i = 0; i < inMemoryRowIndices.length; i++) {\n        var inMemoryRow = inMemoryValues[inMemoryRowIndices[i]];\n        wrappedValues.push({\n          index: i,\n          values: inMemoryRow\n        });\n      }\n      wrappedValues.sort(function (a, b) {\n        for (var _i = 0; _i < sortingColumns.length; _i++) {\n          var column = sortingColumns[_i];\n          var aValue = a.values[column.id];\n          var bValue = b.values[column.id];\n\n          // get the comparator, based on schema\n          var comparator = defaultComparator;\n          if (schema.hasOwnProperty(column.id)) {\n            var columnType = schema[column.id].columnType;\n            for (var _i2 = 0; _i2 < schemaDetectors.length; _i2++) {\n              var detector = schemaDetectors[_i2];\n              if (detector.type === columnType && detector.hasOwnProperty('comparator')) {\n                comparator = detector.comparator;\n              }\n            }\n          }\n          var result = comparator(aValue, bValue, column.direction, {\n            aIndex: a.index,\n            bIndex: b.index\n          });\n          // only return if the columns are unequal, otherwise allow the next sort-by column to run\n          if (result !== 0) return result;\n        }\n        return 0;\n      });\n      for (var _i3 = 0; _i3 < wrappedValues.length; _i3++) {\n        rowMap[_i3] = wrappedValues[_i3].index;\n      }\n    }\n    return rowMap;\n  }, [inMemory === null || inMemory === void 0 ? void 0 : inMemory.level, inMemoryValues, sortingColumns, schema, schemaDetectors]);\n\n  // Given a visible row index, obtain the unpaginated & unsorted\n  // row index from the passed cell data\n  var getCorrectRowIndex = useCallback(function (visibleRowIndex) {\n    var isPaginated = visibleRowIndex - startRow < 0;\n    var unpaginatedRowIndex = isPaginated ? visibleRowIndex + startRow : visibleRowIndex;\n    var unsortedRowIndex = unpaginatedRowIndex in sortedRowMap ? sortedRowMap[unpaginatedRowIndex] : unpaginatedRowIndex;\n    return unsortedRowIndex;\n  }, [startRow, sortedRowMap]);\n  return {\n    sorting: sorting,\n    sortedRowMap: sortedRowMap,\n    getCorrectRowIndex: getCorrectRowIndex\n  };\n};","map":{"version":3,"names":["createContext","useMemo","useCallback","defaultComparator","DataGridSortingContext","sorting","undefined","sortedRowMap","getCorrectRowIndex","number","useSorting","_ref","inMemory","inMemoryValues","schema","schemaDetectors","startRow","sortingColumns","columns","rowMap","level","length","inMemoryRowIndices","Object","keys","wrappedValues","i","inMemoryRow","push","index","values","sort","a","b","_i","column","aValue","id","bValue","comparator","hasOwnProperty","columnType","_i2","detector","type","result","direction","aIndex","bIndex","_i3","visibleRowIndex","isPaginated","unpaginatedRowIndex","unsortedRowIndex"],"sources":["/home/runner/work/broadway-lite/broadway-lite/node_modules/@elastic/eui/es/components/datagrid/utils/sorting.js"],"sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n\nimport { createContext, useMemo, useCallback } from 'react';\nimport { defaultComparator } from './data_grid_schema';\nexport var DataGridSortingContext = /*#__PURE__*/createContext({\n  sorting: undefined,\n  sortedRowMap: [],\n  getCorrectRowIndex: function getCorrectRowIndex(number) {\n    return number;\n  }\n});\nexport var useSorting = function useSorting(_ref) {\n  var sorting = _ref.sorting,\n    inMemory = _ref.inMemory,\n    inMemoryValues = _ref.inMemoryValues,\n    schema = _ref.schema,\n    schemaDetectors = _ref.schemaDetectors,\n    startRow = _ref.startRow;\n  var sortingColumns = sorting === null || sorting === void 0 ? void 0 : sorting.columns;\n  var sortedRowMap = useMemo(function () {\n    var rowMap = [];\n    if ((inMemory === null || inMemory === void 0 ? void 0 : inMemory.level) === 'sorting' && sortingColumns != null && sortingColumns.length > 0) {\n      var inMemoryRowIndices = Object.keys(inMemoryValues);\n      var wrappedValues = [];\n      for (var i = 0; i < inMemoryRowIndices.length; i++) {\n        var inMemoryRow = inMemoryValues[inMemoryRowIndices[i]];\n        wrappedValues.push({\n          index: i,\n          values: inMemoryRow\n        });\n      }\n      wrappedValues.sort(function (a, b) {\n        for (var _i = 0; _i < sortingColumns.length; _i++) {\n          var column = sortingColumns[_i];\n          var aValue = a.values[column.id];\n          var bValue = b.values[column.id];\n\n          // get the comparator, based on schema\n          var comparator = defaultComparator;\n          if (schema.hasOwnProperty(column.id)) {\n            var columnType = schema[column.id].columnType;\n            for (var _i2 = 0; _i2 < schemaDetectors.length; _i2++) {\n              var detector = schemaDetectors[_i2];\n              if (detector.type === columnType && detector.hasOwnProperty('comparator')) {\n                comparator = detector.comparator;\n              }\n            }\n          }\n          var result = comparator(aValue, bValue, column.direction, {\n            aIndex: a.index,\n            bIndex: b.index\n          });\n          // only return if the columns are unequal, otherwise allow the next sort-by column to run\n          if (result !== 0) return result;\n        }\n        return 0;\n      });\n      for (var _i3 = 0; _i3 < wrappedValues.length; _i3++) {\n        rowMap[_i3] = wrappedValues[_i3].index;\n      }\n    }\n    return rowMap;\n  }, [inMemory === null || inMemory === void 0 ? void 0 : inMemory.level, inMemoryValues, sortingColumns, schema, schemaDetectors]);\n\n  // Given a visible row index, obtain the unpaginated & unsorted\n  // row index from the passed cell data\n  var getCorrectRowIndex = useCallback(function (visibleRowIndex) {\n    var isPaginated = visibleRowIndex - startRow < 0;\n    var unpaginatedRowIndex = isPaginated ? visibleRowIndex + startRow : visibleRowIndex;\n    var unsortedRowIndex = unpaginatedRowIndex in sortedRowMap ? sortedRowMap[unpaginatedRowIndex] : unpaginatedRowIndex;\n    return unsortedRowIndex;\n  }, [startRow, sortedRowMap]);\n  return {\n    sorting: sorting,\n    sortedRowMap: sortedRowMap,\n    getCorrectRowIndex: getCorrectRowIndex\n  };\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}