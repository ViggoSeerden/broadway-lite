{"ast":null,"code":"/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n\nimport React, { createContext, useContext } from 'react';\n\n/**\n * This util creates a context for EuiProviders to use and determine if they're\n * the only (top-most) EuiProvider in the app. If they aren't (i.e., they're\n * nested within another EuiProvider) we should throw a warning and not\n * render instantiate the nested EuiProvider.\n */\nimport { jsx as ___EmotionJSX } from \"@emotion/react\";\nexport var EuiNestedProviderContext = /*#__PURE__*/createContext(false);\nexport var EuiProviderNestedCheck = function EuiProviderNestedCheck(_ref) {\n  var children = _ref.children;\n  return ___EmotionJSX(EuiNestedProviderContext.Provider, {\n    value: true\n  }, children);\n};\nexport var useIsNestedEuiProvider = function useIsNestedEuiProvider() {\n  return !!useContext(EuiNestedProviderContext);\n};","map":{"version":3,"names":["React","createContext","useContext","jsx","___EmotionJSX","EuiNestedProviderContext","EuiProviderNestedCheck","_ref","children","Provider","value","useIsNestedEuiProvider"],"sources":["/home/runner/work/broadway-lite/broadway-lite/node_modules/@elastic/eui/es/components/provider/nested/nested_context.js"],"sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n\nimport React, { createContext, useContext } from 'react';\n\n/**\n * This util creates a context for EuiProviders to use and determine if they're\n * the only (top-most) EuiProvider in the app. If they aren't (i.e., they're\n * nested within another EuiProvider) we should throw a warning and not\n * render instantiate the nested EuiProvider.\n */\nimport { jsx as ___EmotionJSX } from \"@emotion/react\";\nexport var EuiNestedProviderContext = /*#__PURE__*/createContext(false);\nexport var EuiProviderNestedCheck = function EuiProviderNestedCheck(_ref) {\n  var children = _ref.children;\n  return ___EmotionJSX(EuiNestedProviderContext.Provider, {\n    value: true\n  }, children);\n};\nexport var useIsNestedEuiProvider = function useIsNestedEuiProvider() {\n  return !!useContext(EuiNestedProviderContext);\n};"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,QAAQ,OAAO;;AAExD;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,GAAG,IAAIC,aAAa,QAAQ,gBAAgB;AACrD,OAAO,IAAIC,wBAAwB,GAAG,aAAaJ,aAAa,CAAC,KAAK,CAAC;AACvE,OAAO,IAAIK,sBAAsB,GAAG,SAASA,sBAAsBA,CAACC,IAAI,EAAE;EACxE,IAAIC,QAAQ,GAAGD,IAAI,CAACC,QAAQ;EAC5B,OAAOJ,aAAa,CAACC,wBAAwB,CAACI,QAAQ,EAAE;IACtDC,KAAK,EAAE;EACT,CAAC,EAAEF,QAAQ,CAAC;AACd,CAAC;AACD,OAAO,IAAIG,sBAAsB,GAAG,SAASA,sBAAsBA,CAAA,EAAG;EACpE,OAAO,CAAC,CAACT,UAAU,CAACG,wBAAwB,CAAC;AAC/C,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}