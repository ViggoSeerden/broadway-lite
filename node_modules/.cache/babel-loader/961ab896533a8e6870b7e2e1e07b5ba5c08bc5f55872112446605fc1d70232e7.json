{"ast":null,"code":"/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n\nimport chroma from 'chroma-js';\nimport { isValidHex } from './is_valid_hex';\nvar inOriginalFormat = function inOriginalFormat(originalColor, newColor) {\n  return isValidHex(originalColor) ? newColor.hex() : newColor.css();\n};\n\n/**\n * Makes a color more transparent.\n * @param color - Color to manipulate\n * @param alpha - alpha channel value. From 0-1.\n */\nexport var transparentize = function transparentize(color, alpha) {\n  return chroma(color).alpha(alpha).css();\n};\n\n/**\n * Mixes a provided color with white.\n * @param color - Color to mix with white\n * @param ratio - Mix weight. From 0-1. Larger value indicates more white.\n */\nexport var tint = function tint(color, ratio) {\n  var tint = chroma.mix(color, '#fff', ratio, 'rgb');\n  return inOriginalFormat(color, tint);\n};\n\n/**\n * Mixes a provided color with black.\n * @param color - Color to mix with black\n * @param ratio - Mix weight. From 0-1. Larger value indicates more black.\n */\nexport var shade = function shade(color, ratio) {\n  var shade = chroma.mix(color, '#000', ratio, 'rgb');\n  return inOriginalFormat(color, shade);\n};\n\n/**\n * Returns the tinted color for light mode and shaded color for dark mode\n * @param color - Color to mix with white\n * @param ratio - Mix weight. From 0-1. Larger value indicates more white.\n * @param colorMode - Light or dark only\n */\nexport var tintOrShade = function tintOrShade(color, ratio, colorMode) {\n  return colorMode === 'DARK' ? shade(color, ratio) : tint(color, ratio);\n};\n\n/**\n * Returns the shaded color for light mode and tinted color for dark mode\n * @param color - Color to mix with white\n * @param ratio - Mix weight. From 0-1. Larger value indicates more white.\n * @param colorMode - Light or dark only\n */\nexport var shadeOrTint = function shadeOrTint(color, ratio, colorMode) {\n  return colorMode === 'DARK' ? tint(color, ratio) : shade(color, ratio);\n};\n\n/**\n * Increases the saturation of a color by manipulating the hsl saturation.\n * @param color - Color to manipulate\n * @param amount - Amount to change in absolute terms. 0-1.\n */\nexport var saturate = function saturate(color, amount) {\n  var saturate = chroma(color).set('hsl.s', \"+\".concat(amount));\n  return inOriginalFormat(color, saturate);\n};\n\n/**\n * Decreases the saturation of a color by manipulating the hsl saturation.\n * @param color - Color to manipulate\n * @param amount - Amount to change in absolute terms. 0-1.\n */\nexport var desaturate = function desaturate(color, amount) {\n  var desaturate = chroma(color).set('hsl.s', \"-\".concat(amount));\n  return inOriginalFormat(color, desaturate);\n};\n\n/**\n * Returns the lightness value of a color. 0-100\n * @param color\n */\nexport var lightness = function lightness(color) {\n  return chroma(color).get('hsl.l') * 100;\n};\n\n/**\n * Returns the darken value of a color. 0-100\n * @param color - Color to manipulate\n * @param amount - Amount to change in absolute terms. 0-1.\n */\nexport var darken = function darken(color, amount) {\n  return chroma(color).darken(amount).hex();\n};\n\n/**\n * Returns the brighten value of a color. 0-100\n * @param color - Color to manipulate\n * @param amount - Amount to change in absolute terms. 0-1.\n */\nexport var brighten = function brighten(color, amount) {\n  return chroma(color).brighten(amount).hex();\n};","map":{"version":3,"names":["chroma","isValidHex","inOriginalFormat","originalColor","newColor","hex","css","transparentize","color","alpha","tint","ratio","mix","shade","tintOrShade","colorMode","shadeOrTint","saturate","amount","set","concat","desaturate","lightness","get","darken","brighten"],"sources":["/home/runner/work/broadway-lite/broadway-lite/node_modules/@elastic/eui/es/services/color/manipulation.js"],"sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n\nimport chroma from 'chroma-js';\nimport { isValidHex } from './is_valid_hex';\nvar inOriginalFormat = function inOriginalFormat(originalColor, newColor) {\n  return isValidHex(originalColor) ? newColor.hex() : newColor.css();\n};\n\n/**\n * Makes a color more transparent.\n * @param color - Color to manipulate\n * @param alpha - alpha channel value. From 0-1.\n */\nexport var transparentize = function transparentize(color, alpha) {\n  return chroma(color).alpha(alpha).css();\n};\n\n/**\n * Mixes a provided color with white.\n * @param color - Color to mix with white\n * @param ratio - Mix weight. From 0-1. Larger value indicates more white.\n */\nexport var tint = function tint(color, ratio) {\n  var tint = chroma.mix(color, '#fff', ratio, 'rgb');\n  return inOriginalFormat(color, tint);\n};\n\n/**\n * Mixes a provided color with black.\n * @param color - Color to mix with black\n * @param ratio - Mix weight. From 0-1. Larger value indicates more black.\n */\nexport var shade = function shade(color, ratio) {\n  var shade = chroma.mix(color, '#000', ratio, 'rgb');\n  return inOriginalFormat(color, shade);\n};\n\n/**\n * Returns the tinted color for light mode and shaded color for dark mode\n * @param color - Color to mix with white\n * @param ratio - Mix weight. From 0-1. Larger value indicates more white.\n * @param colorMode - Light or dark only\n */\nexport var tintOrShade = function tintOrShade(color, ratio, colorMode) {\n  return colorMode === 'DARK' ? shade(color, ratio) : tint(color, ratio);\n};\n\n/**\n * Returns the shaded color for light mode and tinted color for dark mode\n * @param color - Color to mix with white\n * @param ratio - Mix weight. From 0-1. Larger value indicates more white.\n * @param colorMode - Light or dark only\n */\nexport var shadeOrTint = function shadeOrTint(color, ratio, colorMode) {\n  return colorMode === 'DARK' ? tint(color, ratio) : shade(color, ratio);\n};\n\n/**\n * Increases the saturation of a color by manipulating the hsl saturation.\n * @param color - Color to manipulate\n * @param amount - Amount to change in absolute terms. 0-1.\n */\nexport var saturate = function saturate(color, amount) {\n  var saturate = chroma(color).set('hsl.s', \"+\".concat(amount));\n  return inOriginalFormat(color, saturate);\n};\n\n/**\n * Decreases the saturation of a color by manipulating the hsl saturation.\n * @param color - Color to manipulate\n * @param amount - Amount to change in absolute terms. 0-1.\n */\nexport var desaturate = function desaturate(color, amount) {\n  var desaturate = chroma(color).set('hsl.s', \"-\".concat(amount));\n  return inOriginalFormat(color, desaturate);\n};\n\n/**\n * Returns the lightness value of a color. 0-100\n * @param color\n */\nexport var lightness = function lightness(color) {\n  return chroma(color).get('hsl.l') * 100;\n};\n\n/**\n * Returns the darken value of a color. 0-100\n * @param color - Color to manipulate\n * @param amount - Amount to change in absolute terms. 0-1.\n */\nexport var darken = function darken(color, amount) {\n  return chroma(color).darken(amount).hex();\n};\n\n/**\n * Returns the brighten value of a color. 0-100\n * @param color - Color to manipulate\n * @param amount - Amount to change in absolute terms. 0-1.\n */\nexport var brighten = function brighten(color, amount) {\n  return chroma(color).brighten(amount).hex();\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}