{"ast":null,"code":"import React,{useEffect,useState}from'react';import'../css/ButtonOptions.css';import{getQueue,getRecommendations}from'../utils';import{EuiFlexGroup}from'@elastic/eui';import TrackListPopup from'./TrackListPopup';// import LyricsPopup from './LyricsPopup';\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export default function ButtonOptions(_ref){let{token,currSong,time}=_ref;const[recommendations,setRecommendations]=useState();const[queue,setQueue]=useState();// const [lyrics, setLyrics] = useState();\n// const [lyricsFound, setFound] = useState(false);\n// const [lyricsSynced, setSynced] = useState(false);\nuseEffect(()=>{async function getData(){setRecommendations(await getRecommendations(currSong,token));setQueue(await getQueue(token));// const lyricResults = await getLyrics(currSong, token)\n// if (!lyricResults.error) {\n//     setFound(true)\n//     if (lyricResults.syncType === \"LINE_SYNCED\") {\n//         setSynced(true)\n//         const syncedLyrics = lyricResults.lines.map((line) => ({\n//             ...line,\n//             highlighted: lyricResults.syncType === 'LINE_SYNCED' ? false : true,\n//           }));\n//           setLyrics(syncedLyrics);\n//     } else {\n//         setLyrics(lyricResults.lines)\n//         setSynced(false)\n//     }\n// } else {\n//     setFound(false)\n// }\n}getData();},[token,currSong]);function logout(){window.location.hash='';}return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(EuiFlexGroup,{alignItems:\"center\",justifyContent:\"center\",children:[/*#__PURE__*/_jsx(TrackListPopup,{trackList:queue,title:\"Queue\"}),/*#__PURE__*/_jsx(TrackListPopup,{trackList:recommendations,title:\"Suggestions\"}),/*#__PURE__*/_jsx(\"button\",{className:\"buttonOption\",title:\"Logout\",onClick:logout,children:\"Log Out\"})]}),/*#__PURE__*/_jsx(EuiFlexGroup,{alignItems:\"center\",justifyContent:\"center\"})]});}","map":{"version":3,"names":["React","useEffect","useState","getQueue","getRecommendations","EuiFlexGroup","TrackListPopup","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","ButtonOptions","_ref","token","currSong","time","recommendations","setRecommendations","queue","setQueue","getData","logout","window","location","hash","children","alignItems","justifyContent","trackList","title","className","onClick"],"sources":["/home/runner/work/broadway-lite/broadway-lite/src/components/ButtonOptions.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport '../css/ButtonOptions.css'\nimport { getQueue, getRecommendations } from '../utils';\nimport { EuiFlexGroup } from '@elastic/eui';\nimport TrackListPopup from './TrackListPopup';\n// import LyricsPopup from './LyricsPopup';\n\nexport default function ButtonOptions({ token, currSong, time }) {\n\n    const [recommendations, setRecommendations] = useState();\n    const [queue, setQueue] = useState();\n\n    // const [lyrics, setLyrics] = useState();\n    // const [lyricsFound, setFound] = useState(false);\n    // const [lyricsSynced, setSynced] = useState(false);\n\n    useEffect(() => {\n        async function getData() {\n            setRecommendations(await getRecommendations(currSong, token))\n            setQueue(await getQueue(token))\n\n            // const lyricResults = await getLyrics(currSong, token)\n            // if (!lyricResults.error) {\n            //     setFound(true)\n\n            //     if (lyricResults.syncType === \"LINE_SYNCED\") {\n            //         setSynced(true)\n            //         const syncedLyrics = lyricResults.lines.map((line) => ({\n            //             ...line,\n            //             highlighted: lyricResults.syncType === 'LINE_SYNCED' ? false : true,\n            //           }));\n            //           setLyrics(syncedLyrics);\n            //     } else {\n            //         setLyrics(lyricResults.lines)\n            //         setSynced(false)\n            //     }\n            // } else {\n            //     setFound(false)\n            // }\n        }\n        getData();\n    }, [token, currSong])\n\n    function logout() {\n        window.location.hash = '';\n    }\n\n    return (\n        <>\n            <EuiFlexGroup alignItems='center' justifyContent='center'>\n                {/* <LyricsPopup lyrics={lyrics} lyricsFound={lyricsFound} lyricsSynced={lyricsSynced} elapsedTime={time} /> */}\n                <TrackListPopup trackList={queue} title='Queue' />\n                <TrackListPopup trackList={recommendations} title='Suggestions' />\n                <button className=\"buttonOption\" title=\"Logout\" onClick={logout}>Log Out</button>\n            </EuiFlexGroup>\n            <EuiFlexGroup alignItems='center' justifyContent='center'>\n\n            </EuiFlexGroup>\n        </>\n    )\n}"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,MAAO,0BAA0B,CACjC,OAASC,QAAQ,CAAEC,kBAAkB,KAAQ,UAAU,CACvD,OAASC,YAAY,KAAQ,cAAc,CAC3C,MAAO,CAAAC,cAAc,KAAM,kBAAkB,CAC7C;AAAA,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,gCAAAC,QAAA,IAAAC,SAAA,yBAEA,cAAe,SAAS,CAAAC,aAAaA,CAAAC,IAAA,CAA4B,IAA3B,CAAEC,KAAK,CAAEC,QAAQ,CAAEC,IAAK,CAAC,CAAAH,IAAA,CAE3D,KAAM,CAACI,eAAe,CAAEC,kBAAkB,CAAC,CAAGjB,QAAQ,CAAC,CAAC,CACxD,KAAM,CAACkB,KAAK,CAAEC,QAAQ,CAAC,CAAGnB,QAAQ,CAAC,CAAC,CAEpC;AACA;AACA;AAEAD,SAAS,CAAC,IAAM,CACZ,cAAe,CAAAqB,OAAOA,CAAA,CAAG,CACrBH,kBAAkB,CAAC,KAAM,CAAAf,kBAAkB,CAACY,QAAQ,CAAED,KAAK,CAAC,CAAC,CAC7DM,QAAQ,CAAC,KAAM,CAAAlB,QAAQ,CAACY,KAAK,CAAC,CAAC,CAE/B;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACJ,CACAO,OAAO,CAAC,CAAC,CACb,CAAC,CAAE,CAACP,KAAK,CAAEC,QAAQ,CAAC,CAAC,CAErB,QAAS,CAAAO,MAAMA,CAAA,CAAG,CACdC,MAAM,CAACC,QAAQ,CAACC,IAAI,CAAG,EAAE,CAC7B,CAEA,mBACIhB,KAAA,CAAAE,SAAA,EAAAe,QAAA,eACIjB,KAAA,CAACL,YAAY,EAACuB,UAAU,CAAC,QAAQ,CAACC,cAAc,CAAC,QAAQ,CAAAF,QAAA,eAErDnB,IAAA,CAACF,cAAc,EAACwB,SAAS,CAAEV,KAAM,CAACW,KAAK,CAAC,OAAO,CAAE,CAAC,cAClDvB,IAAA,CAACF,cAAc,EAACwB,SAAS,CAAEZ,eAAgB,CAACa,KAAK,CAAC,aAAa,CAAE,CAAC,cAClEvB,IAAA,WAAQwB,SAAS,CAAC,cAAc,CAACD,KAAK,CAAC,QAAQ,CAACE,OAAO,CAAEV,MAAO,CAAAI,QAAA,CAAC,SAAO,CAAQ,CAAC,EACvE,CAAC,cACfnB,IAAA,CAACH,YAAY,EAACuB,UAAU,CAAC,QAAQ,CAACC,cAAc,CAAC,QAAQ,CAE3C,CAAC,EACjB,CAAC,CAEX"},"metadata":{},"sourceType":"module","externalDependencies":[]}