{"ast":null,"code":"/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n\nimport { useEuiTheme } from '../../services';\nimport { mathWithUnits } from '../functions';\n/**\n * It is best practice to utilize the browser's default `outline` property for handling focus rings.\n * However, some components need to be forced to have the same behavior, or adjust the display.\n * This function re-applies the same default outline with a couple parameters\n * @param euiTheme UseEuiTheme\n * @param offset Accepts a specific measurement or 'inset', 'outset' or 'center' to adjust outline position\n * @param color Accepts any CSS color\n */\n\nexport var euiOutline = function euiOutline(_ref) {\n  var euiTheme = _ref.euiTheme;\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'center';\n  var color = arguments.length > 2 ? arguments[2] : undefined;\n  // Width is enforced as a constant at the global theme layer\n  var outlineWidth = euiTheme.focus.width;\n  var outlineColor = color || euiTheme.focus.color;\n  var outlineOffset = offset;\n  if (offset === 'inset') {\n    outlineOffset = \"-\".concat(outlineWidth);\n  } else if (offset === 'outset') {\n    outlineOffset = \"\".concat(outlineWidth);\n  } else if (offset === 'center') {\n    outlineOffset = mathWithUnits(outlineWidth, function (x) {\n      return x / -2;\n    });\n  }\n\n  // This is a separate function from `euiFocusRing` because some EUI components\n  // need the outline styles only, not the :focus-visible settings (e.g. - :focus-within usage)\n  return \"\\n    outline: \".concat(outlineWidth, \" solid \").concat(outlineColor, \";\\n    outline-offset: \").concat(outlineOffset, \";\\n  \");\n};\nexport var euiFocusRing = function euiFocusRing(euiThemeContext) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'center';\n  var options = arguments.length > 2 ? arguments[2] : undefined;\n  // This function utilizes `focus-visible` to turn on focus outlines.\n  // But this is browser-dependent:\n  // ðŸ‘‰ Safari and Firefox innately respect only showing the outline with keyboard only\n  // ðŸ’” But they don't allow coloring of the 'auto'/default outline, so contrast is no good in dark mode.\n  // ðŸ‘‰ For these browsers we use the solid type in order to match with `currentColor`.\n  // ðŸ˜¦ Which does means the outline will be square\n  return \"\\n    \".concat(euiOutline(euiThemeContext, offset, options === null || options === void 0 ? void 0 : options.color).trim(), \"\\n\\n    // \\uD83D\\uDC40 Chrome respects :focus-visible and allows coloring the `auto` style\\n    &:focus-visible {\\n      outline-style: auto;\\n    }\\n\\n    // \\uD83D\\uDE45\\u200D\\u2640\\uFE0F But Chrome also needs to have the outline forcefully removed from regular `:focus` state\\n    &:not(:focus-visible) {\\n      outline: none;\\n    }\\n  \");\n};\nexport var useEuiFocusRing = function useEuiFocusRing(offset, color) {\n  var euiTheme = useEuiTheme();\n  return euiFocusRing(euiTheme, offset, {\n    color: color\n  });\n};","map":{"version":3,"names":["useEuiTheme","mathWithUnits","euiOutline","_ref","euiTheme","offset","arguments","length","undefined","color","outlineWidth","focus","width","outlineColor","outlineOffset","concat","x","euiFocusRing","euiThemeContext","options","trim","useEuiFocusRing"],"sources":["/home/runner/work/broadway-lite/broadway-lite/node_modules/@elastic/eui/es/global_styling/mixins/_states.js"],"sourcesContent":["/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n\nimport { useEuiTheme } from '../../services';\nimport { mathWithUnits } from '../functions';\n/**\n * It is best practice to utilize the browser's default `outline` property for handling focus rings.\n * However, some components need to be forced to have the same behavior, or adjust the display.\n * This function re-applies the same default outline with a couple parameters\n * @param euiTheme UseEuiTheme\n * @param offset Accepts a specific measurement or 'inset', 'outset' or 'center' to adjust outline position\n * @param color Accepts any CSS color\n */\n\nexport var euiOutline = function euiOutline(_ref) {\n  var euiTheme = _ref.euiTheme;\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'center';\n  var color = arguments.length > 2 ? arguments[2] : undefined;\n  // Width is enforced as a constant at the global theme layer\n  var outlineWidth = euiTheme.focus.width;\n  var outlineColor = color || euiTheme.focus.color;\n  var outlineOffset = offset;\n  if (offset === 'inset') {\n    outlineOffset = \"-\".concat(outlineWidth);\n  } else if (offset === 'outset') {\n    outlineOffset = \"\".concat(outlineWidth);\n  } else if (offset === 'center') {\n    outlineOffset = mathWithUnits(outlineWidth, function (x) {\n      return x / -2;\n    });\n  }\n\n  // This is a separate function from `euiFocusRing` because some EUI components\n  // need the outline styles only, not the :focus-visible settings (e.g. - :focus-within usage)\n  return \"\\n    outline: \".concat(outlineWidth, \" solid \").concat(outlineColor, \";\\n    outline-offset: \").concat(outlineOffset, \";\\n  \");\n};\nexport var euiFocusRing = function euiFocusRing(euiThemeContext) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'center';\n  var options = arguments.length > 2 ? arguments[2] : undefined;\n  // This function utilizes `focus-visible` to turn on focus outlines.\n  // But this is browser-dependent:\n  // ðŸ‘‰ Safari and Firefox innately respect only showing the outline with keyboard only\n  // ðŸ’” But they don't allow coloring of the 'auto'/default outline, so contrast is no good in dark mode.\n  // ðŸ‘‰ For these browsers we use the solid type in order to match with `currentColor`.\n  // ðŸ˜¦ Which does means the outline will be square\n  return \"\\n    \".concat(euiOutline(euiThemeContext, offset, options === null || options === void 0 ? void 0 : options.color).trim(), \"\\n\\n    // \\uD83D\\uDC40 Chrome respects :focus-visible and allows coloring the `auto` style\\n    &:focus-visible {\\n      outline-style: auto;\\n    }\\n\\n    // \\uD83D\\uDE45\\u200D\\u2640\\uFE0F But Chrome also needs to have the outline forcefully removed from regular `:focus` state\\n    &:not(:focus-visible) {\\n      outline: none;\\n    }\\n  \");\n};\nexport var useEuiFocusRing = function useEuiFocusRing(offset, color) {\n  var euiTheme = useEuiTheme();\n  return euiFocusRing(euiTheme, offset, {\n    color: color\n  });\n};"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,WAAW,QAAQ,gBAAgB;AAC5C,SAASC,aAAa,QAAQ,cAAc;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,IAAIC,UAAU,GAAG,SAASA,UAAUA,CAACC,IAAI,EAAE;EAChD,IAAIC,QAAQ,GAAGD,IAAI,CAACC,QAAQ;EAC5B,IAAIC,MAAM,GAAGC,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKE,SAAS,GAAGF,SAAS,CAAC,CAAC,CAAC,GAAG,QAAQ;EACzF,IAAIG,KAAK,GAAGH,SAAS,CAACC,MAAM,GAAG,CAAC,GAAGD,SAAS,CAAC,CAAC,CAAC,GAAGE,SAAS;EAC3D;EACA,IAAIE,YAAY,GAAGN,QAAQ,CAACO,KAAK,CAACC,KAAK;EACvC,IAAIC,YAAY,GAAGJ,KAAK,IAAIL,QAAQ,CAACO,KAAK,CAACF,KAAK;EAChD,IAAIK,aAAa,GAAGT,MAAM;EAC1B,IAAIA,MAAM,KAAK,OAAO,EAAE;IACtBS,aAAa,GAAG,GAAG,CAACC,MAAM,CAACL,YAAY,CAAC;EAC1C,CAAC,MAAM,IAAIL,MAAM,KAAK,QAAQ,EAAE;IAC9BS,aAAa,GAAG,EAAE,CAACC,MAAM,CAACL,YAAY,CAAC;EACzC,CAAC,MAAM,IAAIL,MAAM,KAAK,QAAQ,EAAE;IAC9BS,aAAa,GAAGb,aAAa,CAACS,YAAY,EAAE,UAAUM,CAAC,EAAE;MACvD,OAAOA,CAAC,GAAG,CAAC,CAAC;IACf,CAAC,CAAC;EACJ;;EAEA;EACA;EACA,OAAO,iBAAiB,CAACD,MAAM,CAACL,YAAY,EAAE,SAAS,CAAC,CAACK,MAAM,CAACF,YAAY,EAAE,yBAAyB,CAAC,CAACE,MAAM,CAACD,aAAa,EAAE,OAAO,CAAC;AACzI,CAAC;AACD,OAAO,IAAIG,YAAY,GAAG,SAASA,YAAYA,CAACC,eAAe,EAAE;EAC/D,IAAIb,MAAM,GAAGC,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKE,SAAS,GAAGF,SAAS,CAAC,CAAC,CAAC,GAAG,QAAQ;EACzF,IAAIa,OAAO,GAAGb,SAAS,CAACC,MAAM,GAAG,CAAC,GAAGD,SAAS,CAAC,CAAC,CAAC,GAAGE,SAAS;EAC7D;EACA;EACA;EACA;EACA;EACA;EACA,OAAO,QAAQ,CAACO,MAAM,CAACb,UAAU,CAACgB,eAAe,EAAEb,MAAM,EAAEc,OAAO,KAAK,IAAI,IAAIA,OAAO,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,OAAO,CAACV,KAAK,CAAC,CAACW,IAAI,CAAC,CAAC,EAAE,uVAAuV,CAAC;AAC9d,CAAC;AACD,OAAO,IAAIC,eAAe,GAAG,SAASA,eAAeA,CAAChB,MAAM,EAAEI,KAAK,EAAE;EACnE,IAAIL,QAAQ,GAAGJ,WAAW,CAAC,CAAC;EAC5B,OAAOiB,YAAY,CAACb,QAAQ,EAAEC,MAAM,EAAE;IACpCI,KAAK,EAAEA;EACT,CAAC,CAAC;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}