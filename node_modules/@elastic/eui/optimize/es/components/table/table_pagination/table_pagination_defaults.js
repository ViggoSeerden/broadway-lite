import _defineProperty from "@babel/runtime/helpers/defineProperty";
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0 and the Server Side Public License, v 1; you may not use this file except
 * in compliance with, at your election, the Elastic License 2.0 or the Server
 * Side Public License, v 1.
 */

import { useMemo } from 'react';
import { useComponentDefaults } from '../../provider/component_defaults';
/**
 * Table pagination prop defaults live in a separate file because
 * they'll be reused by basic tables and datagrids as fallbacks
 */

export var euiTablePaginationDefaults = {
  itemsPerPage: 10,
  itemsPerPageOptions: [10, 25, 50],
  showPerPageOptions: true
};
export var useEuiTablePaginationDefaults = function useEuiTablePaginationDefaults() {
  var consumerDefaults = useComponentDefaults().EuiTablePagination;
  return useMemo(function () {
    return _objectSpread(_objectSpread({}, euiTablePaginationDefaults), consumerDefaults);
  }, [consumerDefaults]);
};