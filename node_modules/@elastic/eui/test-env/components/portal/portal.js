"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.EuiPortalClass = exports.EuiPortal = void 0;
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _react = _interopRequireWildcard(require("react"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _reactDom = require("react-dom");
var _services = require("../../services");
var _component_defaults = require("../provider/component_defaults");
var _react2 = require("@emotion/react");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } } /*
                                                                                                                                                                                                                                                                                                                                           * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
                                                                                                                                                                                                                                                                                                                                           * or more contributor license agreements. Licensed under the Elastic License
                                                                                                                                                                                                                                                                                                                                           * 2.0 and the Server Side Public License, v 1; you may not use this file except
                                                                                                                                                                                                                                                                                                                                           * in compliance with, at your election, the Elastic License 2.0 or the Server
                                                                                                                                                                                                                                                                                                                                           * Side Public License, v 1.
                                                                                                                                                                                                                                                                                                                                           */ /**
                                                                                                                                                                                                                                                                                                                                               * NOTE: We can't test this component because Enzyme doesn't support rendering
                                                                                                                                                                                                                                                                                                                                               * into portals.
                                                                                                                                                                                                                                                                                                                                               */
var INSERT_POSITIONS = ['after', 'before'];
var insertPositions = {
  after: 'afterend',
  before: 'beforebegin'
};
var EuiPortal = function EuiPortal(props) {
  var propsWithDefaults = (0, _component_defaults.usePropsWithComponentDefaults)('EuiPortal', props);
  return (0, _react2.jsx)(EuiPortalClass, propsWithDefaults);
};
exports.EuiPortal = EuiPortal;
EuiPortal.propTypes = {
  /**
     * ReactNode to render as this component's content
     */
  children: _propTypes.default.node.isRequired,
  /**
     * If not specified, `EuiPortal` will insert itself
     * into the end of the `document.body` by default
     */
  insert: _propTypes.default.shape({
    sibling: _propTypes.default.any.isRequired,
    position: _propTypes.default.any.isRequired
  }),
  /**
     * Optional ref callback
     */
  portalRef: _propTypes.default.func
};
var EuiPortalClass = /*#__PURE__*/function (_Component) {
  (0, _inherits2.default)(EuiPortalClass, _Component);
  var _super = _createSuper(EuiPortalClass);
  function EuiPortalClass(props) {
    var _this;
    (0, _classCallCheck2.default)(this, EuiPortalClass);
    _this = _super.call(this, props);
    _this.state = {
      portalNode: null
    };
    return _this;
  }
  (0, _createClass2.default)(EuiPortalClass, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var insert = this.props.insert;
      var portalNode = document.createElement('div');
      portalNode.dataset.euiportal = 'true';
      if (insert == null) {
        // no insertion defined, append to body
        document.body.appendChild(portalNode);
      } else {
        // inserting before or after an element
        var sibling = insert.sibling,
          position = insert.position;
        sibling.insertAdjacentElement(insertPositions[position], portalNode);
      }
      this.setThemeColor(portalNode);
      this.updatePortalRef(portalNode);

      // Update state with portalNode to intentionally trigger component rerender
      // and call createPortal with correct root element in render()
      this.setState({
        portalNode: portalNode
      });
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      var portalNode = this.state.portalNode;
      if (portalNode !== null && portalNode !== void 0 && portalNode.parentNode) {
        portalNode.parentNode.removeChild(portalNode);
      }
      this.updatePortalRef(null);
    }

    // Set the inherited color of the portal based on the wrapping EuiThemeProvider
  }, {
    key: "setThemeColor",
    value: function setThemeColor(portalNode) {
      if (this.context) {
        var _this$context = this.context,
          hasDifferentColorFromGlobalTheme = _this$context.hasDifferentColorFromGlobalTheme,
          colorClassName = _this$context.colorClassName;
        if (hasDifferentColorFromGlobalTheme && this.props.insert == null) {
          portalNode.classList.add(colorClassName);
        }
      }
    }
  }, {
    key: "updatePortalRef",
    value: function updatePortalRef(ref) {
      if (this.props.portalRef) {
        this.props.portalRef(ref);
      }
    }
  }, {
    key: "render",
    value: function render() {
      var portalNode = this.state.portalNode;
      if (!portalNode) {
        return null;
      }
      return /*#__PURE__*/(0, _reactDom.createPortal)(this.props.children, portalNode);
    }
  }]);
  return EuiPortalClass;
}(_react.Component);
exports.EuiPortalClass = EuiPortalClass;
(0, _defineProperty2.default)(EuiPortalClass, "contextType", _services.EuiNestedThemeContext);
EuiPortalClass.propTypes = {
  /**
     * ReactNode to render as this component's content
     */
  children: _propTypes.default.node.isRequired,
  /**
     * If not specified, `EuiPortal` will insert itself
     * into the end of the `document.body` by default
     */
  insert: _propTypes.default.shape({
    sibling: _propTypes.default.any.isRequired,
    position: _propTypes.default.any.isRequired
  }),
  /**
     * Optional ref callback
     */
  portalRef: _propTypes.default.func
};