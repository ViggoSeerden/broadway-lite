var _excluded = ["className"],
  _excluded2 = ["className"];
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0 and the Server Side Public License, v 1; you may not use this file except
 * in compliance with, at your election, the Elastic License 2.0 or the Server
 * Side Public License, v 1.
 */

import React, { useContext } from 'react';
import classNames from 'classnames';
import { useEuiTheme } from '../../services';
import { EuiFlyoutBody, EuiFlyoutFooter } from '../flyout';
import { EuiCollapsibleNavContext } from './context';
import { euiCollapsibleNavBodyStyles as bodyStyles, euiCollapsibleNavFooterStyles } from './collapsible_nav_body_footer.styles';

/**
 * These components are incredibly light wrappers around `EuiFlyoutBody`
 * and `EuiFlyoutFooter` with collapsible nav-specific styling/considerations.
 *
 * Note: They are not intended to be used standalone outside of EuiCollapsibleNav
 */
import { jsx as ___EmotionJSX } from "@emotion/react";
export var EuiCollapsibleNavBody = function EuiCollapsibleNavBody(_ref) {
  var className = _ref.className,
    props = _objectWithoutProperties(_ref, _excluded);
  var classes = classNames('euiCollapsibleNav__body', className);
  var _useContext = useContext(EuiCollapsibleNavContext),
    isCollapsed = _useContext.isCollapsed,
    isPush = _useContext.isPush;
  var cssStyles = [bodyStyles.euiCollapsibleNav__body, isCollapsed && isPush && bodyStyles.isPushCollapsed];
  return ___EmotionJSX(EuiFlyoutBody, _extends({
    className: classes,
    css: cssStyles
    // Since this is a nav, we can almost guarantee there will be clickable
    // children/links that will enable scrolling. As such, we're optimistically
    // removing the extra tab stop
    ,
    scrollableTabIndex: -1
  }, props));
};
export var EuiCollapsibleNavFooter = function EuiCollapsibleNavFooter(_ref2) {
  var className = _ref2.className,
    props = _objectWithoutProperties(_ref2, _excluded2);
  var classes = classNames('euiCollapsibleNav__footer', className);
  var _useContext2 = useContext(EuiCollapsibleNavContext),
    isCollapsed = _useContext2.isCollapsed,
    isPush = _useContext2.isPush;
  var euiTheme = useEuiTheme();
  var styles = euiCollapsibleNavFooterStyles(euiTheme);
  var cssStyles = [styles.euiCollapsibleNav__footer, isCollapsed && isPush && styles.isPushCollapsed];
  return ___EmotionJSX(EuiFlyoutFooter, _extends({
    className: classes,
    css: cssStyles
  }, props));
};